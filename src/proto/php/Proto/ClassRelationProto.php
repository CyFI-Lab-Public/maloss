<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: class_sig.proto

namespace Proto;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>proto.ClassRelationProto</code>
 */
class ClassRelationProto extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>string classname1 = 1;</code>
     */
    private $classname1 = '';
    /**
     * Generated from protobuf field <code>string classname2 = 2;</code>
     */
    private $classname2 = '';
    /**
     * Generated from protobuf field <code>repeated .proto.ClassRelationProto.RelationCounter relation_counters = 3;</code>
     */
    private $relation_counters;
    /**
     * classname1 is absolutely application class, because we need to inspect the implementation to get
     * the relationship between classname1 and classname2.
     * but classname2 can be non-application classes and can require permissions.
     *
     * Generated from protobuf field <code>bool classname2_is_application_class = 4;</code>
     */
    private $classname2_is_application_class = false;
    /**
     * classname2 can require permissions, only record this if classname2 is not application class
     *
     * Generated from protobuf field <code>repeated string classname2_permissions = 5;</code>
     */
    private $classname2_permissions;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $classname1
     *     @type string $classname2
     *     @type \Proto\ClassRelationProto\RelationCounter[]|\Google\Protobuf\Internal\RepeatedField $relation_counters
     *     @type bool $classname2_is_application_class
     *           classname1 is absolutely application class, because we need to inspect the implementation to get
     *           the relationship between classname1 and classname2.
     *           but classname2 can be non-application classes and can require permissions.
     *     @type string[]|\Google\Protobuf\Internal\RepeatedField $classname2_permissions
     *           classname2 can require permissions, only record this if classname2 is not application class
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\ClassSig::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>string classname1 = 1;</code>
     * @return string
     */
    public function getClassname1()
    {
        return $this->classname1;
    }

    /**
     * Generated from protobuf field <code>string classname1 = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setClassname1($var)
    {
        GPBUtil::checkString($var, True);
        $this->classname1 = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string classname2 = 2;</code>
     * @return string
     */
    public function getClassname2()
    {
        return $this->classname2;
    }

    /**
     * Generated from protobuf field <code>string classname2 = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setClassname2($var)
    {
        GPBUtil::checkString($var, True);
        $this->classname2 = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>repeated .proto.ClassRelationProto.RelationCounter relation_counters = 3;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getRelationCounters()
    {
        return $this->relation_counters;
    }

    /**
     * Generated from protobuf field <code>repeated .proto.ClassRelationProto.RelationCounter relation_counters = 3;</code>
     * @param \Proto\ClassRelationProto\RelationCounter[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setRelationCounters($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Proto\ClassRelationProto\RelationCounter::class);
        $this->relation_counters = $arr;

        return $this;
    }

    /**
     * classname1 is absolutely application class, because we need to inspect the implementation to get
     * the relationship between classname1 and classname2.
     * but classname2 can be non-application classes and can require permissions.
     *
     * Generated from protobuf field <code>bool classname2_is_application_class = 4;</code>
     * @return bool
     */
    public function getClassname2IsApplicationClass()
    {
        return $this->classname2_is_application_class;
    }

    /**
     * classname1 is absolutely application class, because we need to inspect the implementation to get
     * the relationship between classname1 and classname2.
     * but classname2 can be non-application classes and can require permissions.
     *
     * Generated from protobuf field <code>bool classname2_is_application_class = 4;</code>
     * @param bool $var
     * @return $this
     */
    public function setClassname2IsApplicationClass($var)
    {
        GPBUtil::checkBool($var);
        $this->classname2_is_application_class = $var;

        return $this;
    }

    /**
     * classname2 can require permissions, only record this if classname2 is not application class
     *
     * Generated from protobuf field <code>repeated string classname2_permissions = 5;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getClassname2Permissions()
    {
        return $this->classname2_permissions;
    }

    /**
     * classname2 can require permissions, only record this if classname2 is not application class
     *
     * Generated from protobuf field <code>repeated string classname2_permissions = 5;</code>
     * @param string[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setClassname2Permissions($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::STRING);
        $this->classname2_permissions = $arr;

        return $this;
    }

}

