/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var info_pb = require('./info_pb.js');
var module_pb = require('./module_pb.js');
goog.exportSymbol('proto.proto.AnalysisResult', null, global);
goog.exportSymbol('proto.proto.AnalysisType', null, global);
goog.exportSymbol('proto.proto.ConcolicAnalysis', null, global);
goog.exportSymbol('proto.proto.DynamicAnalysis', null, global);
goog.exportSymbol('proto.proto.ExecutionType', null, global);
goog.exportSymbol('proto.proto.FileActivity', null, global);
goog.exportSymbol('proto.proto.NetworkActivity', null, global);
goog.exportSymbol('proto.proto.ProcessActivity', null, global);
goog.exportSymbol('proto.proto.SensitivenActivity', null, global);
goog.exportSymbol('proto.proto.StaticAnalysis', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.NetworkActivity = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.NetworkActivity, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.proto.NetworkActivity.displayName = 'proto.proto.NetworkActivity';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.NetworkActivity.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.NetworkActivity.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.NetworkActivity} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.NetworkActivity.toObject = function(includeInstance, msg) {
  var f, obj = {
    domain: jspb.Message.getFieldWithDefault(msg, 1, ""),
    url: jspb.Message.getFieldWithDefault(msg, 2, ""),
    ip: jspb.Message.getFieldWithDefault(msg, 3, ""),
    port: jspb.Message.getFieldWithDefault(msg, 4, 0),
    protocol: jspb.Message.getFieldWithDefault(msg, 5, ""),
    sendContent: jspb.Message.getFieldWithDefault(msg, 6, ""),
    sendContentSize: jspb.Message.getFieldWithDefault(msg, 7, 0),
    receiveContent: jspb.Message.getFieldWithDefault(msg, 8, ""),
    receiveContentSize: jspb.Message.getFieldWithDefault(msg, 9, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.NetworkActivity}
 */
proto.proto.NetworkActivity.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.NetworkActivity;
  return proto.proto.NetworkActivity.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.NetworkActivity} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.NetworkActivity}
 */
proto.proto.NetworkActivity.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDomain(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setIp(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPort(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setProtocol(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setSendContent(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSendContentSize(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setReceiveContent(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setReceiveContentSize(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.NetworkActivity.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.NetworkActivity.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.NetworkActivity} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.NetworkActivity.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDomain();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUrl();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getIp();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPort();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getProtocol();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getSendContent();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getSendContentSize();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = message.getReceiveContent();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getReceiveContentSize();
  if (f !== 0) {
    writer.writeInt32(
      9,
      f
    );
  }
};


/**
 * optional string domain = 1;
 * @return {string}
 */
proto.proto.NetworkActivity.prototype.getDomain = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.proto.NetworkActivity.prototype.setDomain = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string url = 2;
 * @return {string}
 */
proto.proto.NetworkActivity.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.proto.NetworkActivity.prototype.setUrl = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string ip = 3;
 * @return {string}
 */
proto.proto.NetworkActivity.prototype.getIp = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.proto.NetworkActivity.prototype.setIp = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int32 port = 4;
 * @return {number}
 */
proto.proto.NetworkActivity.prototype.getPort = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.proto.NetworkActivity.prototype.setPort = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string protocol = 5;
 * @return {string}
 */
proto.proto.NetworkActivity.prototype.getProtocol = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.proto.NetworkActivity.prototype.setProtocol = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string send_content = 6;
 * @return {string}
 */
proto.proto.NetworkActivity.prototype.getSendContent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.proto.NetworkActivity.prototype.setSendContent = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional int32 send_content_size = 7;
 * @return {number}
 */
proto.proto.NetworkActivity.prototype.getSendContentSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/** @param {number} value */
proto.proto.NetworkActivity.prototype.setSendContentSize = function(value) {
  jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional string receive_content = 8;
 * @return {string}
 */
proto.proto.NetworkActivity.prototype.getReceiveContent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/** @param {string} value */
proto.proto.NetworkActivity.prototype.setReceiveContent = function(value) {
  jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional int32 receive_content_size = 9;
 * @return {number}
 */
proto.proto.NetworkActivity.prototype.getReceiveContentSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/** @param {number} value */
proto.proto.NetworkActivity.prototype.setReceiveContentSize = function(value) {
  jspb.Message.setProto3IntField(this, 9, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.FileActivity = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.FileActivity, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.proto.FileActivity.displayName = 'proto.proto.FileActivity';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.FileActivity.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.FileActivity.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.FileActivity} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.FileActivity.toObject = function(includeInstance, msg) {
  var f, obj = {
    filename: jspb.Message.getFieldWithDefault(msg, 1, ""),
    filepath: jspb.Message.getFieldWithDefault(msg, 2, ""),
    mode: jspb.Message.getFieldWithDefault(msg, 3, ""),
    permission: jspb.Message.getFieldWithDefault(msg, 4, ""),
    readContent: jspb.Message.getFieldWithDefault(msg, 5, ""),
    readContentSize: jspb.Message.getFieldWithDefault(msg, 6, ""),
    addContent: jspb.Message.getFieldWithDefault(msg, 7, ""),
    addContentSize: jspb.Message.getFieldWithDefault(msg, 8, 0),
    removeContent: jspb.Message.getFieldWithDefault(msg, 9, ""),
    removeContentSize: jspb.Message.getFieldWithDefault(msg, 10, 0),
    modifyContent: jspb.Message.getFieldWithDefault(msg, 11, ""),
    modifyContentSize: jspb.Message.getFieldWithDefault(msg, 12, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.FileActivity}
 */
proto.proto.FileActivity.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.FileActivity;
  return proto.proto.FileActivity.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.FileActivity} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.FileActivity}
 */
proto.proto.FileActivity.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setFilename(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setFilepath(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setMode(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setPermission(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setReadContent(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setReadContentSize(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddContent(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAddContentSize(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setRemoveContent(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRemoveContentSize(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setModifyContent(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setModifyContentSize(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.FileActivity.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.FileActivity.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.FileActivity} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.FileActivity.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFilename();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getFilepath();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getMode();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPermission();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getReadContent();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getReadContentSize();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getAddContent();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getAddContentSize();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = message.getRemoveContent();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getRemoveContentSize();
  if (f !== 0) {
    writer.writeInt32(
      10,
      f
    );
  }
  f = message.getModifyContent();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getModifyContentSize();
  if (f !== 0) {
    writer.writeInt32(
      12,
      f
    );
  }
};


/**
 * optional string filename = 1;
 * @return {string}
 */
proto.proto.FileActivity.prototype.getFilename = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.proto.FileActivity.prototype.setFilename = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string filepath = 2;
 * @return {string}
 */
proto.proto.FileActivity.prototype.getFilepath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.proto.FileActivity.prototype.setFilepath = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string mode = 3;
 * @return {string}
 */
proto.proto.FileActivity.prototype.getMode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.proto.FileActivity.prototype.setMode = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string permission = 4;
 * @return {string}
 */
proto.proto.FileActivity.prototype.getPermission = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.proto.FileActivity.prototype.setPermission = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string read_content = 5;
 * @return {string}
 */
proto.proto.FileActivity.prototype.getReadContent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.proto.FileActivity.prototype.setReadContent = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string read_content_size = 6;
 * @return {string}
 */
proto.proto.FileActivity.prototype.getReadContentSize = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.proto.FileActivity.prototype.setReadContentSize = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string add_content = 7;
 * @return {string}
 */
proto.proto.FileActivity.prototype.getAddContent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.proto.FileActivity.prototype.setAddContent = function(value) {
  jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional int32 add_content_size = 8;
 * @return {number}
 */
proto.proto.FileActivity.prototype.getAddContentSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/** @param {number} value */
proto.proto.FileActivity.prototype.setAddContentSize = function(value) {
  jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional string remove_content = 9;
 * @return {string}
 */
proto.proto.FileActivity.prototype.getRemoveContent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/** @param {string} value */
proto.proto.FileActivity.prototype.setRemoveContent = function(value) {
  jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional int32 remove_content_size = 10;
 * @return {number}
 */
proto.proto.FileActivity.prototype.getRemoveContentSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/** @param {number} value */
proto.proto.FileActivity.prototype.setRemoveContentSize = function(value) {
  jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional string modify_content = 11;
 * @return {string}
 */
proto.proto.FileActivity.prototype.getModifyContent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/** @param {string} value */
proto.proto.FileActivity.prototype.setModifyContent = function(value) {
  jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional int32 modify_content_size = 12;
 * @return {number}
 */
proto.proto.FileActivity.prototype.getModifyContentSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/** @param {number} value */
proto.proto.FileActivity.prototype.setModifyContentSize = function(value) {
  jspb.Message.setProto3IntField(this, 12, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.SensitivenActivity = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.SensitivenActivity, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.proto.SensitivenActivity.displayName = 'proto.proto.SensitivenActivity';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.SensitivenActivity.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.SensitivenActivity.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.SensitivenActivity} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.SensitivenActivity.toObject = function(includeInstance, msg) {
  var f, obj = {
    pid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    cmdline: jspb.Message.getFieldWithDefault(msg, 2, ""),
    exe: jspb.Message.getFieldWithDefault(msg, 3, ""),
    cwd: jspb.Message.getFieldWithDefault(msg, 4, ""),
    root: jspb.Message.getFieldWithDefault(msg, 5, ""),
    ppid: jspb.Message.getFieldWithDefault(msg, 6, ""),
    user: jspb.Message.getFieldWithDefault(msg, 7, ""),
    syscall: jspb.Message.getFieldWithDefault(msg, 8, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.SensitivenActivity}
 */
proto.proto.SensitivenActivity.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.SensitivenActivity;
  return proto.proto.SensitivenActivity.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.SensitivenActivity} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.SensitivenActivity}
 */
proto.proto.SensitivenActivity.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCmdline(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setExe(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCwd(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setRoot(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setPpid(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setUser(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setSyscall(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.SensitivenActivity.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.SensitivenActivity.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.SensitivenActivity} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.SensitivenActivity.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCmdline();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getExe();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getCwd();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getRoot();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getPpid();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getUser();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getSyscall();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
};


/**
 * optional string pid = 1;
 * @return {string}
 */
proto.proto.SensitivenActivity.prototype.getPid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.proto.SensitivenActivity.prototype.setPid = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string cmdline = 2;
 * @return {string}
 */
proto.proto.SensitivenActivity.prototype.getCmdline = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.proto.SensitivenActivity.prototype.setCmdline = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string exe = 3;
 * @return {string}
 */
proto.proto.SensitivenActivity.prototype.getExe = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.proto.SensitivenActivity.prototype.setExe = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string cwd = 4;
 * @return {string}
 */
proto.proto.SensitivenActivity.prototype.getCwd = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.proto.SensitivenActivity.prototype.setCwd = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string root = 5;
 * @return {string}
 */
proto.proto.SensitivenActivity.prototype.getRoot = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.proto.SensitivenActivity.prototype.setRoot = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string ppid = 6;
 * @return {string}
 */
proto.proto.SensitivenActivity.prototype.getPpid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.proto.SensitivenActivity.prototype.setPpid = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string user = 7;
 * @return {string}
 */
proto.proto.SensitivenActivity.prototype.getUser = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.proto.SensitivenActivity.prototype.setUser = function(value) {
  jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string syscall = 8;
 * @return {string}
 */
proto.proto.SensitivenActivity.prototype.getSyscall = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/** @param {string} value */
proto.proto.SensitivenActivity.prototype.setSyscall = function(value) {
  jspb.Message.setProto3StringField(this, 8, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.ProcessActivity = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.proto.ProcessActivity.repeatedFields_, null);
};
goog.inherits(proto.proto.ProcessActivity, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.proto.ProcessActivity.displayName = 'proto.proto.ProcessActivity';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.proto.ProcessActivity.repeatedFields_ = [10,11,12,13];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.ProcessActivity.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.ProcessActivity.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.ProcessActivity} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.ProcessActivity.toObject = function(includeInstance, msg) {
  var f, obj = {
    pid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    cmdline: jspb.Message.getFieldWithDefault(msg, 2, ""),
    exe: jspb.Message.getFieldWithDefault(msg, 3, ""),
    cwd: jspb.Message.getFieldWithDefault(msg, 4, ""),
    root: jspb.Message.getFieldWithDefault(msg, 5, ""),
    ppid: jspb.Message.getFieldWithDefault(msg, 6, ""),
    user: jspb.Message.getFieldWithDefault(msg, 7, ""),
    permission: jspb.Message.getFieldWithDefault(msg, 8, ""),
    mainProcess: jspb.Message.getFieldWithDefault(msg, 9, false),
    networkActivitiesList: jspb.Message.toObjectList(msg.getNetworkActivitiesList(),
    proto.proto.NetworkActivity.toObject, includeInstance),
    fileActivitiesList: jspb.Message.toObjectList(msg.getFileActivitiesList(),
    proto.proto.FileActivity.toObject, includeInstance),
    childProcessActivitiesList: jspb.Message.toObjectList(msg.getChildProcessActivitiesList(),
    proto.proto.ProcessActivity.toObject, includeInstance),
    sensitiveActivitiesList: jspb.Message.toObjectList(msg.getSensitiveActivitiesList(),
    proto.proto.SensitivenActivity.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.ProcessActivity}
 */
proto.proto.ProcessActivity.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.ProcessActivity;
  return proto.proto.ProcessActivity.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.ProcessActivity} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.ProcessActivity}
 */
proto.proto.ProcessActivity.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCmdline(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setExe(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCwd(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setRoot(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setPpid(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setUser(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setPermission(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setMainProcess(value);
      break;
    case 10:
      var value = new proto.proto.NetworkActivity;
      reader.readMessage(value,proto.proto.NetworkActivity.deserializeBinaryFromReader);
      msg.addNetworkActivities(value);
      break;
    case 11:
      var value = new proto.proto.FileActivity;
      reader.readMessage(value,proto.proto.FileActivity.deserializeBinaryFromReader);
      msg.addFileActivities(value);
      break;
    case 12:
      var value = new proto.proto.ProcessActivity;
      reader.readMessage(value,proto.proto.ProcessActivity.deserializeBinaryFromReader);
      msg.addChildProcessActivities(value);
      break;
    case 13:
      var value = new proto.proto.SensitivenActivity;
      reader.readMessage(value,proto.proto.SensitivenActivity.deserializeBinaryFromReader);
      msg.addSensitiveActivities(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.ProcessActivity.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.ProcessActivity.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.ProcessActivity} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.ProcessActivity.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCmdline();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getExe();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getCwd();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getRoot();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getPpid();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getUser();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getPermission();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getMainProcess();
  if (f) {
    writer.writeBool(
      9,
      f
    );
  }
  f = message.getNetworkActivitiesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      10,
      f,
      proto.proto.NetworkActivity.serializeBinaryToWriter
    );
  }
  f = message.getFileActivitiesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      11,
      f,
      proto.proto.FileActivity.serializeBinaryToWriter
    );
  }
  f = message.getChildProcessActivitiesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      12,
      f,
      proto.proto.ProcessActivity.serializeBinaryToWriter
    );
  }
  f = message.getSensitiveActivitiesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      13,
      f,
      proto.proto.SensitivenActivity.serializeBinaryToWriter
    );
  }
};


/**
 * optional string pid = 1;
 * @return {string}
 */
proto.proto.ProcessActivity.prototype.getPid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.proto.ProcessActivity.prototype.setPid = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string cmdline = 2;
 * @return {string}
 */
proto.proto.ProcessActivity.prototype.getCmdline = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.proto.ProcessActivity.prototype.setCmdline = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string exe = 3;
 * @return {string}
 */
proto.proto.ProcessActivity.prototype.getExe = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.proto.ProcessActivity.prototype.setExe = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string cwd = 4;
 * @return {string}
 */
proto.proto.ProcessActivity.prototype.getCwd = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.proto.ProcessActivity.prototype.setCwd = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string root = 5;
 * @return {string}
 */
proto.proto.ProcessActivity.prototype.getRoot = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.proto.ProcessActivity.prototype.setRoot = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string ppid = 6;
 * @return {string}
 */
proto.proto.ProcessActivity.prototype.getPpid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.proto.ProcessActivity.prototype.setPpid = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string user = 7;
 * @return {string}
 */
proto.proto.ProcessActivity.prototype.getUser = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.proto.ProcessActivity.prototype.setUser = function(value) {
  jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string permission = 8;
 * @return {string}
 */
proto.proto.ProcessActivity.prototype.getPermission = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/** @param {string} value */
proto.proto.ProcessActivity.prototype.setPermission = function(value) {
  jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional bool main_process = 9;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.proto.ProcessActivity.prototype.getMainProcess = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 9, false));
};


/** @param {boolean} value */
proto.proto.ProcessActivity.prototype.setMainProcess = function(value) {
  jspb.Message.setProto3BooleanField(this, 9, value);
};


/**
 * repeated NetworkActivity network_activities = 10;
 * @return {!Array<!proto.proto.NetworkActivity>}
 */
proto.proto.ProcessActivity.prototype.getNetworkActivitiesList = function() {
  return /** @type{!Array<!proto.proto.NetworkActivity>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.proto.NetworkActivity, 10));
};


/** @param {!Array<!proto.proto.NetworkActivity>} value */
proto.proto.ProcessActivity.prototype.setNetworkActivitiesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 10, value);
};


/**
 * @param {!proto.proto.NetworkActivity=} opt_value
 * @param {number=} opt_index
 * @return {!proto.proto.NetworkActivity}
 */
proto.proto.ProcessActivity.prototype.addNetworkActivities = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 10, opt_value, proto.proto.NetworkActivity, opt_index);
};


proto.proto.ProcessActivity.prototype.clearNetworkActivitiesList = function() {
  this.setNetworkActivitiesList([]);
};


/**
 * repeated FileActivity file_activities = 11;
 * @return {!Array<!proto.proto.FileActivity>}
 */
proto.proto.ProcessActivity.prototype.getFileActivitiesList = function() {
  return /** @type{!Array<!proto.proto.FileActivity>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.proto.FileActivity, 11));
};


/** @param {!Array<!proto.proto.FileActivity>} value */
proto.proto.ProcessActivity.prototype.setFileActivitiesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 11, value);
};


/**
 * @param {!proto.proto.FileActivity=} opt_value
 * @param {number=} opt_index
 * @return {!proto.proto.FileActivity}
 */
proto.proto.ProcessActivity.prototype.addFileActivities = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 11, opt_value, proto.proto.FileActivity, opt_index);
};


proto.proto.ProcessActivity.prototype.clearFileActivitiesList = function() {
  this.setFileActivitiesList([]);
};


/**
 * repeated ProcessActivity child_process_activities = 12;
 * @return {!Array<!proto.proto.ProcessActivity>}
 */
proto.proto.ProcessActivity.prototype.getChildProcessActivitiesList = function() {
  return /** @type{!Array<!proto.proto.ProcessActivity>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.proto.ProcessActivity, 12));
};


/** @param {!Array<!proto.proto.ProcessActivity>} value */
proto.proto.ProcessActivity.prototype.setChildProcessActivitiesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 12, value);
};


/**
 * @param {!proto.proto.ProcessActivity=} opt_value
 * @param {number=} opt_index
 * @return {!proto.proto.ProcessActivity}
 */
proto.proto.ProcessActivity.prototype.addChildProcessActivities = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 12, opt_value, proto.proto.ProcessActivity, opt_index);
};


proto.proto.ProcessActivity.prototype.clearChildProcessActivitiesList = function() {
  this.setChildProcessActivitiesList([]);
};


/**
 * repeated SensitivenActivity sensitive_activities = 13;
 * @return {!Array<!proto.proto.SensitivenActivity>}
 */
proto.proto.ProcessActivity.prototype.getSensitiveActivitiesList = function() {
  return /** @type{!Array<!proto.proto.SensitivenActivity>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.proto.SensitivenActivity, 13));
};


/** @param {!Array<!proto.proto.SensitivenActivity>} value */
proto.proto.ProcessActivity.prototype.setSensitiveActivitiesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 13, value);
};


/**
 * @param {!proto.proto.SensitivenActivity=} opt_value
 * @param {number=} opt_index
 * @return {!proto.proto.SensitivenActivity}
 */
proto.proto.ProcessActivity.prototype.addSensitiveActivities = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 13, opt_value, proto.proto.SensitivenActivity, opt_index);
};


proto.proto.ProcessActivity.prototype.clearSensitiveActivitiesList = function() {
  this.setSensitiveActivitiesList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.DynamicAnalysis = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.DynamicAnalysis, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.proto.DynamicAnalysis.displayName = 'proto.proto.DynamicAnalysis';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.DynamicAnalysis.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.DynamicAnalysis.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.DynamicAnalysis} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.DynamicAnalysis.toObject = function(includeInstance, msg) {
  var f, obj = {
    analysisType: jspb.Message.getFieldWithDefault(msg, 1, 0),
    exeType: jspb.Message.getFieldWithDefault(msg, 2, 0),
    exeUser: jspb.Message.getFieldWithDefault(msg, 3, ""),
    timestamp: jspb.Message.getFieldWithDefault(msg, 4, ""),
    endTimestamp: jspb.Message.getFieldWithDefault(msg, 5, ""),
    processActivity: (f = msg.getProcessActivity()) && proto.proto.ProcessActivity.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.DynamicAnalysis}
 */
proto.proto.DynamicAnalysis.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.DynamicAnalysis;
  return proto.proto.DynamicAnalysis.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.DynamicAnalysis} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.DynamicAnalysis}
 */
proto.proto.DynamicAnalysis.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.proto.AnalysisType} */ (reader.readEnum());
      msg.setAnalysisType(value);
      break;
    case 2:
      var value = /** @type {!proto.proto.ExecutionType} */ (reader.readEnum());
      msg.setExeType(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setExeUser(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setTimestamp(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setEndTimestamp(value);
      break;
    case 6:
      var value = new proto.proto.ProcessActivity;
      reader.readMessage(value,proto.proto.ProcessActivity.deserializeBinaryFromReader);
      msg.setProcessActivity(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.DynamicAnalysis.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.DynamicAnalysis.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.DynamicAnalysis} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.DynamicAnalysis.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAnalysisType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getExeType();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getExeUser();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getTimestamp();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getEndTimestamp();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getProcessActivity();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.proto.ProcessActivity.serializeBinaryToWriter
    );
  }
};


/**
 * optional AnalysisType analysis_type = 1;
 * @return {!proto.proto.AnalysisType}
 */
proto.proto.DynamicAnalysis.prototype.getAnalysisType = function() {
  return /** @type {!proto.proto.AnalysisType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.proto.AnalysisType} value */
proto.proto.DynamicAnalysis.prototype.setAnalysisType = function(value) {
  jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional ExecutionType exe_type = 2;
 * @return {!proto.proto.ExecutionType}
 */
proto.proto.DynamicAnalysis.prototype.getExeType = function() {
  return /** @type {!proto.proto.ExecutionType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {!proto.proto.ExecutionType} value */
proto.proto.DynamicAnalysis.prototype.setExeType = function(value) {
  jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional string exe_user = 3;
 * @return {string}
 */
proto.proto.DynamicAnalysis.prototype.getExeUser = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.proto.DynamicAnalysis.prototype.setExeUser = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string timestamp = 4;
 * @return {string}
 */
proto.proto.DynamicAnalysis.prototype.getTimestamp = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.proto.DynamicAnalysis.prototype.setTimestamp = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string end_timestamp = 5;
 * @return {string}
 */
proto.proto.DynamicAnalysis.prototype.getEndTimestamp = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.proto.DynamicAnalysis.prototype.setEndTimestamp = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional ProcessActivity process_activity = 6;
 * @return {?proto.proto.ProcessActivity}
 */
proto.proto.DynamicAnalysis.prototype.getProcessActivity = function() {
  return /** @type{?proto.proto.ProcessActivity} */ (
    jspb.Message.getWrapperField(this, proto.proto.ProcessActivity, 6));
};


/** @param {?proto.proto.ProcessActivity|undefined} value */
proto.proto.DynamicAnalysis.prototype.setProcessActivity = function(value) {
  jspb.Message.setWrapperField(this, 6, value);
};


proto.proto.DynamicAnalysis.prototype.clearProcessActivity = function() {
  this.setProcessActivity(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.proto.DynamicAnalysis.prototype.hasProcessActivity = function() {
  return jspb.Message.getField(this, 6) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.StaticAnalysis = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.StaticAnalysis, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.proto.StaticAnalysis.displayName = 'proto.proto.StaticAnalysis';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.StaticAnalysis.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.StaticAnalysis.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.StaticAnalysis} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.StaticAnalysis.toObject = function(includeInstance, msg) {
  var f, obj = {
    analysisType: jspb.Message.getFieldWithDefault(msg, 1, 0),
    timestamp: jspb.Message.getFieldWithDefault(msg, 2, ""),
    codeActivity: (f = msg.getCodeActivity()) && module_pb.ModuleStatic.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.StaticAnalysis}
 */
proto.proto.StaticAnalysis.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.StaticAnalysis;
  return proto.proto.StaticAnalysis.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.StaticAnalysis} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.StaticAnalysis}
 */
proto.proto.StaticAnalysis.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.proto.AnalysisType} */ (reader.readEnum());
      msg.setAnalysisType(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTimestamp(value);
      break;
    case 3:
      var value = new module_pb.ModuleStatic;
      reader.readMessage(value,module_pb.ModuleStatic.deserializeBinaryFromReader);
      msg.setCodeActivity(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.StaticAnalysis.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.StaticAnalysis.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.StaticAnalysis} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.StaticAnalysis.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAnalysisType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getTimestamp();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCodeActivity();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      module_pb.ModuleStatic.serializeBinaryToWriter
    );
  }
};


/**
 * optional AnalysisType analysis_type = 1;
 * @return {!proto.proto.AnalysisType}
 */
proto.proto.StaticAnalysis.prototype.getAnalysisType = function() {
  return /** @type {!proto.proto.AnalysisType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.proto.AnalysisType} value */
proto.proto.StaticAnalysis.prototype.setAnalysisType = function(value) {
  jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional string timestamp = 2;
 * @return {string}
 */
proto.proto.StaticAnalysis.prototype.getTimestamp = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.proto.StaticAnalysis.prototype.setTimestamp = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional ModuleStatic code_activity = 3;
 * @return {?proto.proto.ModuleStatic}
 */
proto.proto.StaticAnalysis.prototype.getCodeActivity = function() {
  return /** @type{?proto.proto.ModuleStatic} */ (
    jspb.Message.getWrapperField(this, module_pb.ModuleStatic, 3));
};


/** @param {?proto.proto.ModuleStatic|undefined} value */
proto.proto.StaticAnalysis.prototype.setCodeActivity = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.proto.StaticAnalysis.prototype.clearCodeActivity = function() {
  this.setCodeActivity(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.proto.StaticAnalysis.prototype.hasCodeActivity = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.ConcolicAnalysis = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.ConcolicAnalysis, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.proto.ConcolicAnalysis.displayName = 'proto.proto.ConcolicAnalysis';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.ConcolicAnalysis.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.ConcolicAnalysis.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.ConcolicAnalysis} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.ConcolicAnalysis.toObject = function(includeInstance, msg) {
  var f, obj = {
    analysisType: jspb.Message.getFieldWithDefault(msg, 1, 0),
    exeType: jspb.Message.getFieldWithDefault(msg, 2, 0),
    exeUser: jspb.Message.getFieldWithDefault(msg, 3, ""),
    timestamp: jspb.Message.getFieldWithDefault(msg, 4, ""),
    endTimestamp: jspb.Message.getFieldWithDefault(msg, 5, ""),
    processActivity: (f = msg.getProcessActivity()) && proto.proto.ProcessActivity.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.ConcolicAnalysis}
 */
proto.proto.ConcolicAnalysis.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.ConcolicAnalysis;
  return proto.proto.ConcolicAnalysis.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.ConcolicAnalysis} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.ConcolicAnalysis}
 */
proto.proto.ConcolicAnalysis.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.proto.AnalysisType} */ (reader.readEnum());
      msg.setAnalysisType(value);
      break;
    case 2:
      var value = /** @type {!proto.proto.ExecutionType} */ (reader.readEnum());
      msg.setExeType(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setExeUser(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setTimestamp(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setEndTimestamp(value);
      break;
    case 6:
      var value = new proto.proto.ProcessActivity;
      reader.readMessage(value,proto.proto.ProcessActivity.deserializeBinaryFromReader);
      msg.setProcessActivity(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.ConcolicAnalysis.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.ConcolicAnalysis.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.ConcolicAnalysis} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.ConcolicAnalysis.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAnalysisType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getExeType();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getExeUser();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getTimestamp();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getEndTimestamp();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getProcessActivity();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.proto.ProcessActivity.serializeBinaryToWriter
    );
  }
};


/**
 * optional AnalysisType analysis_type = 1;
 * @return {!proto.proto.AnalysisType}
 */
proto.proto.ConcolicAnalysis.prototype.getAnalysisType = function() {
  return /** @type {!proto.proto.AnalysisType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.proto.AnalysisType} value */
proto.proto.ConcolicAnalysis.prototype.setAnalysisType = function(value) {
  jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional ExecutionType exe_type = 2;
 * @return {!proto.proto.ExecutionType}
 */
proto.proto.ConcolicAnalysis.prototype.getExeType = function() {
  return /** @type {!proto.proto.ExecutionType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {!proto.proto.ExecutionType} value */
proto.proto.ConcolicAnalysis.prototype.setExeType = function(value) {
  jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional string exe_user = 3;
 * @return {string}
 */
proto.proto.ConcolicAnalysis.prototype.getExeUser = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.proto.ConcolicAnalysis.prototype.setExeUser = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string timestamp = 4;
 * @return {string}
 */
proto.proto.ConcolicAnalysis.prototype.getTimestamp = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.proto.ConcolicAnalysis.prototype.setTimestamp = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string end_timestamp = 5;
 * @return {string}
 */
proto.proto.ConcolicAnalysis.prototype.getEndTimestamp = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.proto.ConcolicAnalysis.prototype.setEndTimestamp = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional ProcessActivity process_activity = 6;
 * @return {?proto.proto.ProcessActivity}
 */
proto.proto.ConcolicAnalysis.prototype.getProcessActivity = function() {
  return /** @type{?proto.proto.ProcessActivity} */ (
    jspb.Message.getWrapperField(this, proto.proto.ProcessActivity, 6));
};


/** @param {?proto.proto.ProcessActivity|undefined} value */
proto.proto.ConcolicAnalysis.prototype.setProcessActivity = function(value) {
  jspb.Message.setWrapperField(this, 6, value);
};


proto.proto.ConcolicAnalysis.prototype.clearProcessActivity = function() {
  this.setProcessActivity(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.proto.ConcolicAnalysis.prototype.hasProcessActivity = function() {
  return jspb.Message.getField(this, 6) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.AnalysisResult = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.proto.AnalysisResult.repeatedFields_, null);
};
goog.inherits(proto.proto.AnalysisResult, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.proto.AnalysisResult.displayName = 'proto.proto.AnalysisResult';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.proto.AnalysisResult.repeatedFields_ = [2,3,4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.AnalysisResult.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.AnalysisResult.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.AnalysisResult} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.AnalysisResult.toObject = function(includeInstance, msg) {
  var f, obj = {
    packageInfo: (f = msg.getPackageInfo()) && info_pb.PackageInfo.toObject(includeInstance, f),
    dynamicResultsList: jspb.Message.toObjectList(msg.getDynamicResultsList(),
    proto.proto.DynamicAnalysis.toObject, includeInstance),
    staticResultsList: jspb.Message.toObjectList(msg.getStaticResultsList(),
    proto.proto.StaticAnalysis.toObject, includeInstance),
    concolicResultsList: jspb.Message.toObjectList(msg.getConcolicResultsList(),
    proto.proto.ConcolicAnalysis.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.AnalysisResult}
 */
proto.proto.AnalysisResult.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.AnalysisResult;
  return proto.proto.AnalysisResult.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.AnalysisResult} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.AnalysisResult}
 */
proto.proto.AnalysisResult.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new info_pb.PackageInfo;
      reader.readMessage(value,info_pb.PackageInfo.deserializeBinaryFromReader);
      msg.setPackageInfo(value);
      break;
    case 2:
      var value = new proto.proto.DynamicAnalysis;
      reader.readMessage(value,proto.proto.DynamicAnalysis.deserializeBinaryFromReader);
      msg.addDynamicResults(value);
      break;
    case 3:
      var value = new proto.proto.StaticAnalysis;
      reader.readMessage(value,proto.proto.StaticAnalysis.deserializeBinaryFromReader);
      msg.addStaticResults(value);
      break;
    case 4:
      var value = new proto.proto.ConcolicAnalysis;
      reader.readMessage(value,proto.proto.ConcolicAnalysis.deserializeBinaryFromReader);
      msg.addConcolicResults(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.AnalysisResult.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.AnalysisResult.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.AnalysisResult} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.AnalysisResult.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPackageInfo();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      info_pb.PackageInfo.serializeBinaryToWriter
    );
  }
  f = message.getDynamicResultsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.proto.DynamicAnalysis.serializeBinaryToWriter
    );
  }
  f = message.getStaticResultsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.proto.StaticAnalysis.serializeBinaryToWriter
    );
  }
  f = message.getConcolicResultsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.proto.ConcolicAnalysis.serializeBinaryToWriter
    );
  }
};


/**
 * optional PackageInfo package_info = 1;
 * @return {?proto.proto.PackageInfo}
 */
proto.proto.AnalysisResult.prototype.getPackageInfo = function() {
  return /** @type{?proto.proto.PackageInfo} */ (
    jspb.Message.getWrapperField(this, info_pb.PackageInfo, 1));
};


/** @param {?proto.proto.PackageInfo|undefined} value */
proto.proto.AnalysisResult.prototype.setPackageInfo = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.proto.AnalysisResult.prototype.clearPackageInfo = function() {
  this.setPackageInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.proto.AnalysisResult.prototype.hasPackageInfo = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated DynamicAnalysis dynamic_results = 2;
 * @return {!Array<!proto.proto.DynamicAnalysis>}
 */
proto.proto.AnalysisResult.prototype.getDynamicResultsList = function() {
  return /** @type{!Array<!proto.proto.DynamicAnalysis>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.proto.DynamicAnalysis, 2));
};


/** @param {!Array<!proto.proto.DynamicAnalysis>} value */
proto.proto.AnalysisResult.prototype.setDynamicResultsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.proto.DynamicAnalysis=} opt_value
 * @param {number=} opt_index
 * @return {!proto.proto.DynamicAnalysis}
 */
proto.proto.AnalysisResult.prototype.addDynamicResults = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.proto.DynamicAnalysis, opt_index);
};


proto.proto.AnalysisResult.prototype.clearDynamicResultsList = function() {
  this.setDynamicResultsList([]);
};


/**
 * repeated StaticAnalysis static_results = 3;
 * @return {!Array<!proto.proto.StaticAnalysis>}
 */
proto.proto.AnalysisResult.prototype.getStaticResultsList = function() {
  return /** @type{!Array<!proto.proto.StaticAnalysis>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.proto.StaticAnalysis, 3));
};


/** @param {!Array<!proto.proto.StaticAnalysis>} value */
proto.proto.AnalysisResult.prototype.setStaticResultsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.proto.StaticAnalysis=} opt_value
 * @param {number=} opt_index
 * @return {!proto.proto.StaticAnalysis}
 */
proto.proto.AnalysisResult.prototype.addStaticResults = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.proto.StaticAnalysis, opt_index);
};


proto.proto.AnalysisResult.prototype.clearStaticResultsList = function() {
  this.setStaticResultsList([]);
};


/**
 * repeated ConcolicAnalysis concolic_results = 4;
 * @return {!Array<!proto.proto.ConcolicAnalysis>}
 */
proto.proto.AnalysisResult.prototype.getConcolicResultsList = function() {
  return /** @type{!Array<!proto.proto.ConcolicAnalysis>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.proto.ConcolicAnalysis, 4));
};


/** @param {!Array<!proto.proto.ConcolicAnalysis>} value */
proto.proto.AnalysisResult.prototype.setConcolicResultsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.proto.ConcolicAnalysis=} opt_value
 * @param {number=} opt_index
 * @return {!proto.proto.ConcolicAnalysis}
 */
proto.proto.AnalysisResult.prototype.addConcolicResults = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.proto.ConcolicAnalysis, opt_index);
};


proto.proto.AnalysisResult.prototype.clearConcolicResultsList = function() {
  this.setConcolicResultsList([]);
};


/**
 * @enum {number}
 */
proto.proto.ExecutionType = {
  INSTALL: 0,
  MAIN: 1,
  EXERCISE: 2,
  TEST: 3
};

/**
 * @enum {number}
 */
proto.proto.AnalysisType = {
  API_USAGE: 0,
  REACHABILITY: 1,
  TAINT_TRACKING: 2,
  SYMBOLIC: 3
};

goog.object.extend(exports, proto.proto);
