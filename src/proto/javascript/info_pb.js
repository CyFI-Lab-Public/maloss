/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.proto.ExecuteInfo', null, global);
goog.exportSymbol('proto.proto.PackageInfo', null, global);
goog.exportSymbol('proto.proto.PackageInfo.Metadata', null, global);
goog.exportSymbol('proto.proto.ReleaseInfo', null, global);
goog.exportSymbol('proto.proto.RepositoryInfo', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.ReleaseInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.ReleaseInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.proto.ReleaseInfo.displayName = 'proto.proto.ReleaseInfo';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.ReleaseInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.ReleaseInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.ReleaseInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.ReleaseInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    timestamp: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.ReleaseInfo}
 */
proto.proto.ReleaseInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.ReleaseInfo;
  return proto.proto.ReleaseInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.ReleaseInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.ReleaseInfo}
 */
proto.proto.ReleaseInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTimestamp(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.ReleaseInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.ReleaseInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.ReleaseInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.ReleaseInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTimestamp();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.proto.ReleaseInfo.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.proto.ReleaseInfo.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string timestamp = 2;
 * @return {string}
 */
proto.proto.ReleaseInfo.prototype.getTimestamp = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.proto.ReleaseInfo.prototype.setTimestamp = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.RepositoryInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.RepositoryInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.proto.RepositoryInfo.displayName = 'proto.proto.RepositoryInfo';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.RepositoryInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.RepositoryInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.RepositoryInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.RepositoryInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    url: jspb.Message.getFieldWithDefault(msg, 1, ""),
    type: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.RepositoryInfo}
 */
proto.proto.RepositoryInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.RepositoryInfo;
  return proto.proto.RepositoryInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.RepositoryInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.RepositoryInfo}
 */
proto.proto.RepositoryInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.RepositoryInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.RepositoryInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.RepositoryInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.RepositoryInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUrl();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string url = 1;
 * @return {string}
 */
proto.proto.RepositoryInfo.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.proto.RepositoryInfo.prototype.setUrl = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string type = 2;
 * @return {string}
 */
proto.proto.RepositoryInfo.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.proto.RepositoryInfo.prototype.setType = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.ExecuteInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.ExecuteInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.proto.ExecuteInfo.displayName = 'proto.proto.ExecuteInfo';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.ExecuteInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.ExecuteInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.ExecuteInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.ExecuteInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    target: jspb.Message.getFieldWithDefault(msg, 1, ""),
    command: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.ExecuteInfo}
 */
proto.proto.ExecuteInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.ExecuteInfo;
  return proto.proto.ExecuteInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.ExecuteInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.ExecuteInfo}
 */
proto.proto.ExecuteInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTarget(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCommand(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.ExecuteInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.ExecuteInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.ExecuteInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.ExecuteInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTarget();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCommand();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string target = 1;
 * @return {string}
 */
proto.proto.ExecuteInfo.prototype.getTarget = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.proto.ExecuteInfo.prototype.setTarget = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string command = 2;
 * @return {string}
 */
proto.proto.ExecuteInfo.prototype.getCommand = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.proto.ExecuteInfo.prototype.setCommand = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.PackageInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.proto.PackageInfo.repeatedFields_, null);
};
goog.inherits(proto.proto.PackageInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.proto.PackageInfo.displayName = 'proto.proto.PackageInfo';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.proto.PackageInfo.repeatedFields_ = [2,3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.PackageInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.PackageInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.PackageInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.PackageInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    info: (f = msg.getInfo()) && proto.proto.PackageInfo.Metadata.toObject(includeInstance, f),
    dependenciesList: jspb.Message.toObjectList(msg.getDependenciesList(),
    proto.proto.PackageInfo.Metadata.toObject, includeInstance),
    devDependenciesList: jspb.Message.toObjectList(msg.getDevDependenciesList(),
    proto.proto.PackageInfo.Metadata.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.PackageInfo}
 */
proto.proto.PackageInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.PackageInfo;
  return proto.proto.PackageInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.PackageInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.PackageInfo}
 */
proto.proto.PackageInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.proto.PackageInfo.Metadata;
      reader.readMessage(value,proto.proto.PackageInfo.Metadata.deserializeBinaryFromReader);
      msg.setInfo(value);
      break;
    case 2:
      var value = new proto.proto.PackageInfo.Metadata;
      reader.readMessage(value,proto.proto.PackageInfo.Metadata.deserializeBinaryFromReader);
      msg.addDependencies(value);
      break;
    case 3:
      var value = new proto.proto.PackageInfo.Metadata;
      reader.readMessage(value,proto.proto.PackageInfo.Metadata.deserializeBinaryFromReader);
      msg.addDevDependencies(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.PackageInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.PackageInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.PackageInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.PackageInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInfo();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.proto.PackageInfo.Metadata.serializeBinaryToWriter
    );
  }
  f = message.getDependenciesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.proto.PackageInfo.Metadata.serializeBinaryToWriter
    );
  }
  f = message.getDevDependenciesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.proto.PackageInfo.Metadata.serializeBinaryToWriter
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.PackageInfo.Metadata = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.proto.PackageInfo.Metadata.repeatedFields_, null);
};
goog.inherits(proto.proto.PackageInfo.Metadata, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.proto.PackageInfo.Metadata.displayName = 'proto.proto.PackageInfo.Metadata';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.proto.PackageInfo.Metadata.repeatedFields_ = [7,8,9,10,11];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.PackageInfo.Metadata.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.PackageInfo.Metadata.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.PackageInfo.Metadata} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.PackageInfo.Metadata.toObject = function(includeInstance, msg) {
  var f, obj = {
    packageName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    packageVersion: jspb.Message.getFieldWithDefault(msg, 2, ""),
    email: jspb.Message.getFieldWithDefault(msg, 3, ""),
    homepage: jspb.Message.getFieldWithDefault(msg, 4, ""),
    license: jspb.Message.getFieldWithDefault(msg, 5, ""),
    repository: (f = msg.getRepository()) && proto.proto.RepositoryInfo.toObject(includeInstance, f),
    execJobsList: jspb.Message.toObjectList(msg.getExecJobsList(),
    proto.proto.ExecuteInfo.toObject, includeInstance),
    authorsList: jspb.Message.getRepeatedField(msg, 8),
    contributorsList: jspb.Message.getRepeatedField(msg, 9),
    maintainersList: jspb.Message.getRepeatedField(msg, 10),
    releasesList: jspb.Message.toObjectList(msg.getReleasesList(),
    proto.proto.ReleaseInfo.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.PackageInfo.Metadata}
 */
proto.proto.PackageInfo.Metadata.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.PackageInfo.Metadata;
  return proto.proto.PackageInfo.Metadata.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.PackageInfo.Metadata} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.PackageInfo.Metadata}
 */
proto.proto.PackageInfo.Metadata.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPackageName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPackageVersion(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmail(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setHomepage(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setLicense(value);
      break;
    case 6:
      var value = new proto.proto.RepositoryInfo;
      reader.readMessage(value,proto.proto.RepositoryInfo.deserializeBinaryFromReader);
      msg.setRepository(value);
      break;
    case 7:
      var value = new proto.proto.ExecuteInfo;
      reader.readMessage(value,proto.proto.ExecuteInfo.deserializeBinaryFromReader);
      msg.addExecJobs(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.addAuthors(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.addContributors(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.addMaintainers(value);
      break;
    case 11:
      var value = new proto.proto.ReleaseInfo;
      reader.readMessage(value,proto.proto.ReleaseInfo.deserializeBinaryFromReader);
      msg.addReleases(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.PackageInfo.Metadata.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.PackageInfo.Metadata.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.PackageInfo.Metadata} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.PackageInfo.Metadata.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPackageName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPackageVersion();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getEmail();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getHomepage();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getLicense();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getRepository();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.proto.RepositoryInfo.serializeBinaryToWriter
    );
  }
  f = message.getExecJobsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      7,
      f,
      proto.proto.ExecuteInfo.serializeBinaryToWriter
    );
  }
  f = message.getAuthorsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      8,
      f
    );
  }
  f = message.getContributorsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      9,
      f
    );
  }
  f = message.getMaintainersList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      10,
      f
    );
  }
  f = message.getReleasesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      11,
      f,
      proto.proto.ReleaseInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional string package_name = 1;
 * @return {string}
 */
proto.proto.PackageInfo.Metadata.prototype.getPackageName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.proto.PackageInfo.Metadata.prototype.setPackageName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string package_version = 2;
 * @return {string}
 */
proto.proto.PackageInfo.Metadata.prototype.getPackageVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.proto.PackageInfo.Metadata.prototype.setPackageVersion = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string email = 3;
 * @return {string}
 */
proto.proto.PackageInfo.Metadata.prototype.getEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.proto.PackageInfo.Metadata.prototype.setEmail = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string homepage = 4;
 * @return {string}
 */
proto.proto.PackageInfo.Metadata.prototype.getHomepage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.proto.PackageInfo.Metadata.prototype.setHomepage = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string license = 5;
 * @return {string}
 */
proto.proto.PackageInfo.Metadata.prototype.getLicense = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.proto.PackageInfo.Metadata.prototype.setLicense = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional RepositoryInfo repository = 6;
 * @return {?proto.proto.RepositoryInfo}
 */
proto.proto.PackageInfo.Metadata.prototype.getRepository = function() {
  return /** @type{?proto.proto.RepositoryInfo} */ (
    jspb.Message.getWrapperField(this, proto.proto.RepositoryInfo, 6));
};


/** @param {?proto.proto.RepositoryInfo|undefined} value */
proto.proto.PackageInfo.Metadata.prototype.setRepository = function(value) {
  jspb.Message.setWrapperField(this, 6, value);
};


proto.proto.PackageInfo.Metadata.prototype.clearRepository = function() {
  this.setRepository(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.proto.PackageInfo.Metadata.prototype.hasRepository = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * repeated ExecuteInfo exec_jobs = 7;
 * @return {!Array<!proto.proto.ExecuteInfo>}
 */
proto.proto.PackageInfo.Metadata.prototype.getExecJobsList = function() {
  return /** @type{!Array<!proto.proto.ExecuteInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.proto.ExecuteInfo, 7));
};


/** @param {!Array<!proto.proto.ExecuteInfo>} value */
proto.proto.PackageInfo.Metadata.prototype.setExecJobsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 7, value);
};


/**
 * @param {!proto.proto.ExecuteInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.proto.ExecuteInfo}
 */
proto.proto.PackageInfo.Metadata.prototype.addExecJobs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 7, opt_value, proto.proto.ExecuteInfo, opt_index);
};


proto.proto.PackageInfo.Metadata.prototype.clearExecJobsList = function() {
  this.setExecJobsList([]);
};


/**
 * repeated string authors = 8;
 * @return {!Array<string>}
 */
proto.proto.PackageInfo.Metadata.prototype.getAuthorsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 8));
};


/** @param {!Array<string>} value */
proto.proto.PackageInfo.Metadata.prototype.setAuthorsList = function(value) {
  jspb.Message.setField(this, 8, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.proto.PackageInfo.Metadata.prototype.addAuthors = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 8, value, opt_index);
};


proto.proto.PackageInfo.Metadata.prototype.clearAuthorsList = function() {
  this.setAuthorsList([]);
};


/**
 * repeated string contributors = 9;
 * @return {!Array<string>}
 */
proto.proto.PackageInfo.Metadata.prototype.getContributorsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 9));
};


/** @param {!Array<string>} value */
proto.proto.PackageInfo.Metadata.prototype.setContributorsList = function(value) {
  jspb.Message.setField(this, 9, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.proto.PackageInfo.Metadata.prototype.addContributors = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 9, value, opt_index);
};


proto.proto.PackageInfo.Metadata.prototype.clearContributorsList = function() {
  this.setContributorsList([]);
};


/**
 * repeated string maintainers = 10;
 * @return {!Array<string>}
 */
proto.proto.PackageInfo.Metadata.prototype.getMaintainersList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 10));
};


/** @param {!Array<string>} value */
proto.proto.PackageInfo.Metadata.prototype.setMaintainersList = function(value) {
  jspb.Message.setField(this, 10, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.proto.PackageInfo.Metadata.prototype.addMaintainers = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 10, value, opt_index);
};


proto.proto.PackageInfo.Metadata.prototype.clearMaintainersList = function() {
  this.setMaintainersList([]);
};


/**
 * repeated ReleaseInfo releases = 11;
 * @return {!Array<!proto.proto.ReleaseInfo>}
 */
proto.proto.PackageInfo.Metadata.prototype.getReleasesList = function() {
  return /** @type{!Array<!proto.proto.ReleaseInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.proto.ReleaseInfo, 11));
};


/** @param {!Array<!proto.proto.ReleaseInfo>} value */
proto.proto.PackageInfo.Metadata.prototype.setReleasesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 11, value);
};


/**
 * @param {!proto.proto.ReleaseInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.proto.ReleaseInfo}
 */
proto.proto.PackageInfo.Metadata.prototype.addReleases = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 11, opt_value, proto.proto.ReleaseInfo, opt_index);
};


proto.proto.PackageInfo.Metadata.prototype.clearReleasesList = function() {
  this.setReleasesList([]);
};


/**
 * optional Metadata info = 1;
 * @return {?proto.proto.PackageInfo.Metadata}
 */
proto.proto.PackageInfo.prototype.getInfo = function() {
  return /** @type{?proto.proto.PackageInfo.Metadata} */ (
    jspb.Message.getWrapperField(this, proto.proto.PackageInfo.Metadata, 1));
};


/** @param {?proto.proto.PackageInfo.Metadata|undefined} value */
proto.proto.PackageInfo.prototype.setInfo = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.proto.PackageInfo.prototype.clearInfo = function() {
  this.setInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.proto.PackageInfo.prototype.hasInfo = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated Metadata dependencies = 2;
 * @return {!Array<!proto.proto.PackageInfo.Metadata>}
 */
proto.proto.PackageInfo.prototype.getDependenciesList = function() {
  return /** @type{!Array<!proto.proto.PackageInfo.Metadata>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.proto.PackageInfo.Metadata, 2));
};


/** @param {!Array<!proto.proto.PackageInfo.Metadata>} value */
proto.proto.PackageInfo.prototype.setDependenciesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.proto.PackageInfo.Metadata=} opt_value
 * @param {number=} opt_index
 * @return {!proto.proto.PackageInfo.Metadata}
 */
proto.proto.PackageInfo.prototype.addDependencies = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.proto.PackageInfo.Metadata, opt_index);
};


proto.proto.PackageInfo.prototype.clearDependenciesList = function() {
  this.setDependenciesList([]);
};


/**
 * repeated Metadata dev_dependencies = 3;
 * @return {!Array<!proto.proto.PackageInfo.Metadata>}
 */
proto.proto.PackageInfo.prototype.getDevDependenciesList = function() {
  return /** @type{!Array<!proto.proto.PackageInfo.Metadata>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.proto.PackageInfo.Metadata, 3));
};


/** @param {!Array<!proto.proto.PackageInfo.Metadata>} value */
proto.proto.PackageInfo.prototype.setDevDependenciesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.proto.PackageInfo.Metadata=} opt_value
 * @param {number=} opt_index
 * @return {!proto.proto.PackageInfo.Metadata}
 */
proto.proto.PackageInfo.prototype.addDevDependencies = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.proto.PackageInfo.Metadata, opt_index);
};


proto.proto.PackageInfo.prototype.clearDevDependenciesList = function() {
  this.setDevDependenciesList([]);
};


goog.object.extend(exports, proto.proto);
