// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: module.proto

#include "module.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_ast_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ast_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_AstNode;
}  // namespace protobuf_ast_2eproto
namespace protobuf_info_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_info_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_PackageInfo;
}  // namespace protobuf_info_2eproto
namespace protobuf_module_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_module_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ModuleFlow_FlowInfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_module_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ModuleTaintWrapper_TaintPoint;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_module_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ModuleDanger;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_module_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ModuleSink;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_module_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ModuleSource;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_module_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ModuleTaintWrapper_TaintRule;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_module_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_ModuleFlow;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_module_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_ModuleTaintWrapper;
}  // namespace protobuf_module_2eproto
namespace proto {
class ModuleSourceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ModuleSource>
      _instance;
} _ModuleSource_default_instance_;
class ModuleSinkDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ModuleSink>
      _instance;
} _ModuleSink_default_instance_;
class ModuleTaintWrapper_TaintPointDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ModuleTaintWrapper_TaintPoint>
      _instance;
} _ModuleTaintWrapper_TaintPoint_default_instance_;
class ModuleTaintWrapper_TaintRuleDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ModuleTaintWrapper_TaintRule>
      _instance;
} _ModuleTaintWrapper_TaintRule_default_instance_;
class ModuleTaintWrapperDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ModuleTaintWrapper>
      _instance;
} _ModuleTaintWrapper_default_instance_;
class ModuleFlow_FlowInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ModuleFlow_FlowInfo>
      _instance;
} _ModuleFlow_FlowInfo_default_instance_;
class ModuleFlowDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ModuleFlow>
      _instance;
} _ModuleFlow_default_instance_;
class ModuleDangerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ModuleDanger>
      _instance;
} _ModuleDanger_default_instance_;
class ModuleSummaryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ModuleSummary>
      _instance;
} _ModuleSummary_default_instance_;
class ModuleResultDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ModuleResult>
      _instance;
} _ModuleResult_default_instance_;
class ModuleStaticDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ModuleStatic>
      _instance;
} _ModuleStatic_default_instance_;
}  // namespace proto
namespace protobuf_module_2eproto {
static void InitDefaultsModuleSource() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::_ModuleSource_default_instance_;
    new (ptr) ::proto::ModuleSource();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::ModuleSource::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ModuleSource =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsModuleSource}, {
      &protobuf_ast_2eproto::scc_info_AstNode.base,}};

static void InitDefaultsModuleSink() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::_ModuleSink_default_instance_;
    new (ptr) ::proto::ModuleSink();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::ModuleSink::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ModuleSink =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsModuleSink}, {
      &protobuf_ast_2eproto::scc_info_AstNode.base,}};

static void InitDefaultsModuleTaintWrapper_TaintPoint() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::_ModuleTaintWrapper_TaintPoint_default_instance_;
    new (ptr) ::proto::ModuleTaintWrapper_TaintPoint();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::ModuleTaintWrapper_TaintPoint::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ModuleTaintWrapper_TaintPoint =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsModuleTaintWrapper_TaintPoint}, {}};

static void InitDefaultsModuleTaintWrapper_TaintRule() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::_ModuleTaintWrapper_TaintRule_default_instance_;
    new (ptr) ::proto::ModuleTaintWrapper_TaintRule();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::ModuleTaintWrapper_TaintRule::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ModuleTaintWrapper_TaintRule =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsModuleTaintWrapper_TaintRule}, {
      &protobuf_module_2eproto::scc_info_ModuleTaintWrapper_TaintPoint.base,}};

static void InitDefaultsModuleTaintWrapper() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::_ModuleTaintWrapper_default_instance_;
    new (ptr) ::proto::ModuleTaintWrapper();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::ModuleTaintWrapper::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_ModuleTaintWrapper =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsModuleTaintWrapper}, {
      &protobuf_ast_2eproto::scc_info_AstNode.base,
      &protobuf_module_2eproto::scc_info_ModuleTaintWrapper_TaintRule.base,}};

static void InitDefaultsModuleFlow_FlowInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::_ModuleFlow_FlowInfo_default_instance_;
    new (ptr) ::proto::ModuleFlow_FlowInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::ModuleFlow_FlowInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ModuleFlow_FlowInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsModuleFlow_FlowInfo}, {}};

static void InitDefaultsModuleFlow() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::_ModuleFlow_default_instance_;
    new (ptr) ::proto::ModuleFlow();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::ModuleFlow::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_ModuleFlow =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsModuleFlow}, {
      &protobuf_ast_2eproto::scc_info_AstNode.base,
      &protobuf_module_2eproto::scc_info_ModuleFlow_FlowInfo.base,}};

static void InitDefaultsModuleDanger() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::_ModuleDanger_default_instance_;
    new (ptr) ::proto::ModuleDanger();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::ModuleDanger::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ModuleDanger =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsModuleDanger}, {
      &protobuf_ast_2eproto::scc_info_AstNode.base,}};

static void InitDefaultsModuleSummary() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::_ModuleSummary_default_instance_;
    new (ptr) ::proto::ModuleSummary();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::ModuleSummary::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<4> scc_info_ModuleSummary =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 4, InitDefaultsModuleSummary}, {
      &protobuf_info_2eproto::scc_info_PackageInfo.base,
      &protobuf_module_2eproto::scc_info_ModuleSource.base,
      &protobuf_module_2eproto::scc_info_ModuleSink.base,
      &protobuf_module_2eproto::scc_info_ModuleTaintWrapper.base,}};

static void InitDefaultsModuleResult() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::_ModuleResult_default_instance_;
    new (ptr) ::proto::ModuleResult();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::ModuleResult::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_ModuleResult =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsModuleResult}, {
      &protobuf_info_2eproto::scc_info_PackageInfo.base,
      &protobuf_module_2eproto::scc_info_ModuleFlow.base,
      &protobuf_module_2eproto::scc_info_ModuleDanger.base,}};

static void InitDefaultsModuleStatic() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::_ModuleStatic_default_instance_;
    new (ptr) ::proto::ModuleStatic();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::ModuleStatic::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<6> scc_info_ModuleStatic =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 6, InitDefaultsModuleStatic}, {
      &protobuf_info_2eproto::scc_info_PackageInfo.base,
      &protobuf_module_2eproto::scc_info_ModuleFlow.base,
      &protobuf_module_2eproto::scc_info_ModuleDanger.base,
      &protobuf_module_2eproto::scc_info_ModuleSource.base,
      &protobuf_module_2eproto::scc_info_ModuleSink.base,
      &protobuf_module_2eproto::scc_info_ModuleTaintWrapper.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_ModuleSource.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ModuleSink.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ModuleTaintWrapper_TaintPoint.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ModuleTaintWrapper_TaintRule.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ModuleTaintWrapper.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ModuleFlow_FlowInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ModuleFlow.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ModuleDanger.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ModuleSummary.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ModuleResult.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ModuleStatic.base);
}

::google::protobuf::Metadata file_level_metadata[11];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::ModuleSource, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::ModuleSource, node_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::ModuleSource, reachable_sources_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::ModuleSink, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::ModuleSink, node_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::ModuleSink, reachable_sinks_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::ModuleTaintWrapper_TaintPoint, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::ModuleTaintWrapper_TaintPoint, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::ModuleTaintWrapper_TaintPoint, access_paths_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::ModuleTaintWrapper_TaintRule, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::ModuleTaintWrapper_TaintRule, cause_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::ModuleTaintWrapper_TaintRule, effects_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::ModuleTaintWrapper, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::ModuleTaintWrapper, node_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::ModuleTaintWrapper, rules_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::ModuleFlow_FlowInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::ModuleFlow_FlowInfo, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::ModuleFlow_FlowInfo, cwe_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::ModuleFlow_FlowInfo, type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::ModuleFlow, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::ModuleFlow, source_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::ModuleFlow, hops_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::ModuleFlow, sink_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::ModuleFlow, info_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::ModuleDanger, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::ModuleDanger, danger_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::ModuleDanger, slices_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::ModuleSummary, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::ModuleSummary, package_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::ModuleSummary, sources_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::ModuleSummary, sinks_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::ModuleSummary, taint_wrappers_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::ModuleResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::ModuleResult, package_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::ModuleResult, flows_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::ModuleResult, dangers_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::ModuleStatic, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::ModuleStatic, package_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::ModuleStatic, flows_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::ModuleStatic, dangers_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::ModuleStatic, sources_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::ModuleStatic, sinks_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::ModuleStatic, taint_wrappers_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::proto::ModuleSource)},
  { 7, -1, sizeof(::proto::ModuleSink)},
  { 14, -1, sizeof(::proto::ModuleTaintWrapper_TaintPoint)},
  { 21, -1, sizeof(::proto::ModuleTaintWrapper_TaintRule)},
  { 28, -1, sizeof(::proto::ModuleTaintWrapper)},
  { 35, -1, sizeof(::proto::ModuleFlow_FlowInfo)},
  { 43, -1, sizeof(::proto::ModuleFlow)},
  { 52, -1, sizeof(::proto::ModuleDanger)},
  { 59, -1, sizeof(::proto::ModuleSummary)},
  { 68, -1, sizeof(::proto::ModuleResult)},
  { 76, -1, sizeof(::proto::ModuleStatic)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::_ModuleSource_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::_ModuleSink_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::_ModuleTaintWrapper_TaintPoint_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::_ModuleTaintWrapper_TaintRule_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::_ModuleTaintWrapper_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::_ModuleFlow_FlowInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::_ModuleFlow_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::_ModuleDanger_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::_ModuleSummary_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::_ModuleResult_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::_ModuleStatic_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "module.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 11);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\014module.proto\022\005proto\032\tast.proto\032\ninfo.p"
      "roto\"W\n\014ModuleSource\022\034\n\004node\030\001 \001(\0132\016.pro"
      "to.AstNode\022)\n\021reachable_sources\030\002 \003(\0132\016."
      "proto.AstNode\"S\n\nModuleSink\022\034\n\004node\030\001 \001("
      "\0132\016.proto.AstNode\022\'\n\017reachable_sinks\030\002 \003"
      "(\0132\016.proto.AstNode\"\217\002\n\022ModuleTaintWrappe"
      "r\022\034\n\004node\030\001 \001(\0132\016.proto.AstNode\0222\n\005rules"
      "\030\002 \003(\0132#.proto.ModuleTaintWrapper.TaintR"
      "ule\032.\n\nTaintPoint\022\n\n\002id\030\001 \001(\005\022\024\n\014access_"
      "paths\030\002 \003(\t\032w\n\tTaintRule\0223\n\005cause\030\001 \001(\0132"
      "$.proto.ModuleTaintWrapper.TaintPoint\0225\n"
      "\007effects\030\002 \003(\0132$.proto.ModuleTaintWrappe"
      "r.TaintPoint\"\307\001\n\nModuleFlow\022\036\n\006source\030\001 "
      "\001(\0132\016.proto.AstNode\022\034\n\004hops\030\002 \003(\0132\016.prot"
      "o.AstNode\022\034\n\004sink\030\003 \001(\0132\016.proto.AstNode\022"
      "(\n\004info\030\004 \001(\0132\032.proto.ModuleFlow.FlowInf"
      "o\0323\n\010FlowInfo\022\014\n\004name\030\001 \001(\t\022\013\n\003cwe\030\002 \001(\t"
      "\022\014\n\004type\030\003 \001(\t\"N\n\014ModuleDanger\022\036\n\006danger"
      "\030\001 \001(\0132\016.proto.AstNode\022\036\n\006slices\030\002 \003(\0132\016"
      ".proto.AstNode\"\264\001\n\rModuleSummary\022(\n\014pack"
      "age_info\030\001 \001(\0132\022.proto.PackageInfo\022$\n\007so"
      "urces\030\002 \003(\0132\023.proto.ModuleSource\022 \n\005sink"
      "s\030\003 \003(\0132\021.proto.ModuleSink\0221\n\016taint_wrap"
      "pers\030\004 \003(\0132\031.proto.ModuleTaintWrapper\"\200\001"
      "\n\014ModuleResult\022(\n\014package_info\030\001 \001(\0132\022.p"
      "roto.PackageInfo\022 \n\005flows\030\002 \003(\0132\021.proto."
      "ModuleFlow\022$\n\007dangers\030\003 \003(\0132\023.proto.Modu"
      "leDanger\"\373\001\n\014ModuleStatic\022(\n\014package_inf"
      "o\030\001 \001(\0132\022.proto.PackageInfo\022 \n\005flows\030\002 \003"
      "(\0132\021.proto.ModuleFlow\022$\n\007dangers\030\003 \003(\0132\023"
      ".proto.ModuleDanger\022$\n\007sources\030\004 \003(\0132\023.p"
      "roto.ModuleSource\022 \n\005sinks\030\005 \003(\0132\021.proto"
      ".ModuleSink\0221\n\016taint_wrappers\030\006 \003(\0132\031.pr"
      "oto.ModuleTaintWrapperb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1350);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "module.proto", &protobuf_RegisterTypes);
  ::protobuf_ast_2eproto::AddDescriptors();
  ::protobuf_info_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_module_2eproto
namespace proto {

// ===================================================================

void ModuleSource::InitAsDefaultInstance() {
  ::proto::_ModuleSource_default_instance_._instance.get_mutable()->node_ = const_cast< ::proto::AstNode*>(
      ::proto::AstNode::internal_default_instance());
}
void ModuleSource::clear_node() {
  if (GetArenaNoVirtual() == NULL && node_ != NULL) {
    delete node_;
  }
  node_ = NULL;
}
void ModuleSource::clear_reachable_sources() {
  reachable_sources_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ModuleSource::kNodeFieldNumber;
const int ModuleSource::kReachableSourcesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ModuleSource::ModuleSource()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_module_2eproto::scc_info_ModuleSource.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ModuleSource)
}
ModuleSource::ModuleSource(const ModuleSource& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      reachable_sources_(from.reachable_sources_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_node()) {
    node_ = new ::proto::AstNode(*from.node_);
  } else {
    node_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:proto.ModuleSource)
}

void ModuleSource::SharedCtor() {
  node_ = NULL;
}

ModuleSource::~ModuleSource() {
  // @@protoc_insertion_point(destructor:proto.ModuleSource)
  SharedDtor();
}

void ModuleSource::SharedDtor() {
  if (this != internal_default_instance()) delete node_;
}

void ModuleSource::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ModuleSource::descriptor() {
  ::protobuf_module_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_module_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ModuleSource& ModuleSource::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_module_2eproto::scc_info_ModuleSource.base);
  return *internal_default_instance();
}


void ModuleSource::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ModuleSource)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  reachable_sources_.Clear();
  if (GetArenaNoVirtual() == NULL && node_ != NULL) {
    delete node_;
  }
  node_ = NULL;
  _internal_metadata_.Clear();
}

bool ModuleSource::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ModuleSource)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.AstNode node = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_node()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.AstNode reachable_sources = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_reachable_sources()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ModuleSource)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ModuleSource)
  return false;
#undef DO_
}

void ModuleSource::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ModuleSource)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.AstNode node = 1;
  if (this->has_node()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_node(), output);
  }

  // repeated .proto.AstNode reachable_sources = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->reachable_sources_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->reachable_sources(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ModuleSource)
}

::google::protobuf::uint8* ModuleSource::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ModuleSource)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.AstNode node = 1;
  if (this->has_node()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_node(), deterministic, target);
  }

  // repeated .proto.AstNode reachable_sources = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->reachable_sources_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->reachable_sources(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ModuleSource)
  return target;
}

size_t ModuleSource::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ModuleSource)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.AstNode reachable_sources = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->reachable_sources_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->reachable_sources(static_cast<int>(i)));
    }
  }

  // .proto.AstNode node = 1;
  if (this->has_node()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *node_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ModuleSource::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ModuleSource)
  GOOGLE_DCHECK_NE(&from, this);
  const ModuleSource* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ModuleSource>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ModuleSource)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ModuleSource)
    MergeFrom(*source);
  }
}

void ModuleSource::MergeFrom(const ModuleSource& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ModuleSource)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  reachable_sources_.MergeFrom(from.reachable_sources_);
  if (from.has_node()) {
    mutable_node()->::proto::AstNode::MergeFrom(from.node());
  }
}

void ModuleSource::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ModuleSource)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ModuleSource::CopyFrom(const ModuleSource& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ModuleSource)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModuleSource::IsInitialized() const {
  return true;
}

void ModuleSource::Swap(ModuleSource* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ModuleSource::InternalSwap(ModuleSource* other) {
  using std::swap;
  CastToBase(&reachable_sources_)->InternalSwap(CastToBase(&other->reachable_sources_));
  swap(node_, other->node_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ModuleSource::GetMetadata() const {
  protobuf_module_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_module_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ModuleSink::InitAsDefaultInstance() {
  ::proto::_ModuleSink_default_instance_._instance.get_mutable()->node_ = const_cast< ::proto::AstNode*>(
      ::proto::AstNode::internal_default_instance());
}
void ModuleSink::clear_node() {
  if (GetArenaNoVirtual() == NULL && node_ != NULL) {
    delete node_;
  }
  node_ = NULL;
}
void ModuleSink::clear_reachable_sinks() {
  reachable_sinks_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ModuleSink::kNodeFieldNumber;
const int ModuleSink::kReachableSinksFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ModuleSink::ModuleSink()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_module_2eproto::scc_info_ModuleSink.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ModuleSink)
}
ModuleSink::ModuleSink(const ModuleSink& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      reachable_sinks_(from.reachable_sinks_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_node()) {
    node_ = new ::proto::AstNode(*from.node_);
  } else {
    node_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:proto.ModuleSink)
}

void ModuleSink::SharedCtor() {
  node_ = NULL;
}

ModuleSink::~ModuleSink() {
  // @@protoc_insertion_point(destructor:proto.ModuleSink)
  SharedDtor();
}

void ModuleSink::SharedDtor() {
  if (this != internal_default_instance()) delete node_;
}

void ModuleSink::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ModuleSink::descriptor() {
  ::protobuf_module_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_module_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ModuleSink& ModuleSink::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_module_2eproto::scc_info_ModuleSink.base);
  return *internal_default_instance();
}


void ModuleSink::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ModuleSink)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  reachable_sinks_.Clear();
  if (GetArenaNoVirtual() == NULL && node_ != NULL) {
    delete node_;
  }
  node_ = NULL;
  _internal_metadata_.Clear();
}

bool ModuleSink::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ModuleSink)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.AstNode node = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_node()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.AstNode reachable_sinks = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_reachable_sinks()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ModuleSink)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ModuleSink)
  return false;
#undef DO_
}

void ModuleSink::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ModuleSink)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.AstNode node = 1;
  if (this->has_node()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_node(), output);
  }

  // repeated .proto.AstNode reachable_sinks = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->reachable_sinks_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->reachable_sinks(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ModuleSink)
}

::google::protobuf::uint8* ModuleSink::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ModuleSink)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.AstNode node = 1;
  if (this->has_node()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_node(), deterministic, target);
  }

  // repeated .proto.AstNode reachable_sinks = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->reachable_sinks_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->reachable_sinks(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ModuleSink)
  return target;
}

size_t ModuleSink::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ModuleSink)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.AstNode reachable_sinks = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->reachable_sinks_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->reachable_sinks(static_cast<int>(i)));
    }
  }

  // .proto.AstNode node = 1;
  if (this->has_node()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *node_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ModuleSink::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ModuleSink)
  GOOGLE_DCHECK_NE(&from, this);
  const ModuleSink* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ModuleSink>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ModuleSink)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ModuleSink)
    MergeFrom(*source);
  }
}

void ModuleSink::MergeFrom(const ModuleSink& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ModuleSink)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  reachable_sinks_.MergeFrom(from.reachable_sinks_);
  if (from.has_node()) {
    mutable_node()->::proto::AstNode::MergeFrom(from.node());
  }
}

void ModuleSink::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ModuleSink)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ModuleSink::CopyFrom(const ModuleSink& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ModuleSink)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModuleSink::IsInitialized() const {
  return true;
}

void ModuleSink::Swap(ModuleSink* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ModuleSink::InternalSwap(ModuleSink* other) {
  using std::swap;
  CastToBase(&reachable_sinks_)->InternalSwap(CastToBase(&other->reachable_sinks_));
  swap(node_, other->node_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ModuleSink::GetMetadata() const {
  protobuf_module_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_module_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ModuleTaintWrapper_TaintPoint::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ModuleTaintWrapper_TaintPoint::kIdFieldNumber;
const int ModuleTaintWrapper_TaintPoint::kAccessPathsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ModuleTaintWrapper_TaintPoint::ModuleTaintWrapper_TaintPoint()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_module_2eproto::scc_info_ModuleTaintWrapper_TaintPoint.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ModuleTaintWrapper.TaintPoint)
}
ModuleTaintWrapper_TaintPoint::ModuleTaintWrapper_TaintPoint(const ModuleTaintWrapper_TaintPoint& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      access_paths_(from.access_paths_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:proto.ModuleTaintWrapper.TaintPoint)
}

void ModuleTaintWrapper_TaintPoint::SharedCtor() {
  id_ = 0;
}

ModuleTaintWrapper_TaintPoint::~ModuleTaintWrapper_TaintPoint() {
  // @@protoc_insertion_point(destructor:proto.ModuleTaintWrapper.TaintPoint)
  SharedDtor();
}

void ModuleTaintWrapper_TaintPoint::SharedDtor() {
}

void ModuleTaintWrapper_TaintPoint::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ModuleTaintWrapper_TaintPoint::descriptor() {
  ::protobuf_module_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_module_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ModuleTaintWrapper_TaintPoint& ModuleTaintWrapper_TaintPoint::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_module_2eproto::scc_info_ModuleTaintWrapper_TaintPoint.base);
  return *internal_default_instance();
}


void ModuleTaintWrapper_TaintPoint::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ModuleTaintWrapper.TaintPoint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  access_paths_.Clear();
  id_ = 0;
  _internal_metadata_.Clear();
}

bool ModuleTaintWrapper_TaintPoint::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ModuleTaintWrapper.TaintPoint)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string access_paths = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_access_paths()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->access_paths(this->access_paths_size() - 1).data(),
            static_cast<int>(this->access_paths(this->access_paths_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.ModuleTaintWrapper.TaintPoint.access_paths"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ModuleTaintWrapper.TaintPoint)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ModuleTaintWrapper.TaintPoint)
  return false;
#undef DO_
}

void ModuleTaintWrapper_TaintPoint::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ModuleTaintWrapper.TaintPoint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // repeated string access_paths = 2;
  for (int i = 0, n = this->access_paths_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->access_paths(i).data(), static_cast<int>(this->access_paths(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.ModuleTaintWrapper.TaintPoint.access_paths");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->access_paths(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ModuleTaintWrapper.TaintPoint)
}

::google::protobuf::uint8* ModuleTaintWrapper_TaintPoint::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ModuleTaintWrapper.TaintPoint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // repeated string access_paths = 2;
  for (int i = 0, n = this->access_paths_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->access_paths(i).data(), static_cast<int>(this->access_paths(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.ModuleTaintWrapper.TaintPoint.access_paths");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->access_paths(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ModuleTaintWrapper.TaintPoint)
  return target;
}

size_t ModuleTaintWrapper_TaintPoint::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ModuleTaintWrapper.TaintPoint)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string access_paths = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->access_paths_size());
  for (int i = 0, n = this->access_paths_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->access_paths(i));
  }

  // int32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ModuleTaintWrapper_TaintPoint::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ModuleTaintWrapper.TaintPoint)
  GOOGLE_DCHECK_NE(&from, this);
  const ModuleTaintWrapper_TaintPoint* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ModuleTaintWrapper_TaintPoint>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ModuleTaintWrapper.TaintPoint)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ModuleTaintWrapper.TaintPoint)
    MergeFrom(*source);
  }
}

void ModuleTaintWrapper_TaintPoint::MergeFrom(const ModuleTaintWrapper_TaintPoint& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ModuleTaintWrapper.TaintPoint)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  access_paths_.MergeFrom(from.access_paths_);
  if (from.id() != 0) {
    set_id(from.id());
  }
}

void ModuleTaintWrapper_TaintPoint::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ModuleTaintWrapper.TaintPoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ModuleTaintWrapper_TaintPoint::CopyFrom(const ModuleTaintWrapper_TaintPoint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ModuleTaintWrapper.TaintPoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModuleTaintWrapper_TaintPoint::IsInitialized() const {
  return true;
}

void ModuleTaintWrapper_TaintPoint::Swap(ModuleTaintWrapper_TaintPoint* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ModuleTaintWrapper_TaintPoint::InternalSwap(ModuleTaintWrapper_TaintPoint* other) {
  using std::swap;
  access_paths_.InternalSwap(CastToBase(&other->access_paths_));
  swap(id_, other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ModuleTaintWrapper_TaintPoint::GetMetadata() const {
  protobuf_module_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_module_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ModuleTaintWrapper_TaintRule::InitAsDefaultInstance() {
  ::proto::_ModuleTaintWrapper_TaintRule_default_instance_._instance.get_mutable()->cause_ = const_cast< ::proto::ModuleTaintWrapper_TaintPoint*>(
      ::proto::ModuleTaintWrapper_TaintPoint::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ModuleTaintWrapper_TaintRule::kCauseFieldNumber;
const int ModuleTaintWrapper_TaintRule::kEffectsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ModuleTaintWrapper_TaintRule::ModuleTaintWrapper_TaintRule()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_module_2eproto::scc_info_ModuleTaintWrapper_TaintRule.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ModuleTaintWrapper.TaintRule)
}
ModuleTaintWrapper_TaintRule::ModuleTaintWrapper_TaintRule(const ModuleTaintWrapper_TaintRule& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      effects_(from.effects_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_cause()) {
    cause_ = new ::proto::ModuleTaintWrapper_TaintPoint(*from.cause_);
  } else {
    cause_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:proto.ModuleTaintWrapper.TaintRule)
}

void ModuleTaintWrapper_TaintRule::SharedCtor() {
  cause_ = NULL;
}

ModuleTaintWrapper_TaintRule::~ModuleTaintWrapper_TaintRule() {
  // @@protoc_insertion_point(destructor:proto.ModuleTaintWrapper.TaintRule)
  SharedDtor();
}

void ModuleTaintWrapper_TaintRule::SharedDtor() {
  if (this != internal_default_instance()) delete cause_;
}

void ModuleTaintWrapper_TaintRule::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ModuleTaintWrapper_TaintRule::descriptor() {
  ::protobuf_module_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_module_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ModuleTaintWrapper_TaintRule& ModuleTaintWrapper_TaintRule::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_module_2eproto::scc_info_ModuleTaintWrapper_TaintRule.base);
  return *internal_default_instance();
}


void ModuleTaintWrapper_TaintRule::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ModuleTaintWrapper.TaintRule)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  effects_.Clear();
  if (GetArenaNoVirtual() == NULL && cause_ != NULL) {
    delete cause_;
  }
  cause_ = NULL;
  _internal_metadata_.Clear();
}

bool ModuleTaintWrapper_TaintRule::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ModuleTaintWrapper.TaintRule)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.ModuleTaintWrapper.TaintPoint cause = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_cause()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.ModuleTaintWrapper.TaintPoint effects = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_effects()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ModuleTaintWrapper.TaintRule)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ModuleTaintWrapper.TaintRule)
  return false;
#undef DO_
}

void ModuleTaintWrapper_TaintRule::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ModuleTaintWrapper.TaintRule)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.ModuleTaintWrapper.TaintPoint cause = 1;
  if (this->has_cause()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_cause(), output);
  }

  // repeated .proto.ModuleTaintWrapper.TaintPoint effects = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->effects_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->effects(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ModuleTaintWrapper.TaintRule)
}

::google::protobuf::uint8* ModuleTaintWrapper_TaintRule::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ModuleTaintWrapper.TaintRule)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.ModuleTaintWrapper.TaintPoint cause = 1;
  if (this->has_cause()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_cause(), deterministic, target);
  }

  // repeated .proto.ModuleTaintWrapper.TaintPoint effects = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->effects_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->effects(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ModuleTaintWrapper.TaintRule)
  return target;
}

size_t ModuleTaintWrapper_TaintRule::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ModuleTaintWrapper.TaintRule)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.ModuleTaintWrapper.TaintPoint effects = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->effects_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->effects(static_cast<int>(i)));
    }
  }

  // .proto.ModuleTaintWrapper.TaintPoint cause = 1;
  if (this->has_cause()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *cause_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ModuleTaintWrapper_TaintRule::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ModuleTaintWrapper.TaintRule)
  GOOGLE_DCHECK_NE(&from, this);
  const ModuleTaintWrapper_TaintRule* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ModuleTaintWrapper_TaintRule>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ModuleTaintWrapper.TaintRule)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ModuleTaintWrapper.TaintRule)
    MergeFrom(*source);
  }
}

void ModuleTaintWrapper_TaintRule::MergeFrom(const ModuleTaintWrapper_TaintRule& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ModuleTaintWrapper.TaintRule)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  effects_.MergeFrom(from.effects_);
  if (from.has_cause()) {
    mutable_cause()->::proto::ModuleTaintWrapper_TaintPoint::MergeFrom(from.cause());
  }
}

void ModuleTaintWrapper_TaintRule::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ModuleTaintWrapper.TaintRule)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ModuleTaintWrapper_TaintRule::CopyFrom(const ModuleTaintWrapper_TaintRule& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ModuleTaintWrapper.TaintRule)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModuleTaintWrapper_TaintRule::IsInitialized() const {
  return true;
}

void ModuleTaintWrapper_TaintRule::Swap(ModuleTaintWrapper_TaintRule* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ModuleTaintWrapper_TaintRule::InternalSwap(ModuleTaintWrapper_TaintRule* other) {
  using std::swap;
  CastToBase(&effects_)->InternalSwap(CastToBase(&other->effects_));
  swap(cause_, other->cause_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ModuleTaintWrapper_TaintRule::GetMetadata() const {
  protobuf_module_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_module_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ModuleTaintWrapper::InitAsDefaultInstance() {
  ::proto::_ModuleTaintWrapper_default_instance_._instance.get_mutable()->node_ = const_cast< ::proto::AstNode*>(
      ::proto::AstNode::internal_default_instance());
}
void ModuleTaintWrapper::clear_node() {
  if (GetArenaNoVirtual() == NULL && node_ != NULL) {
    delete node_;
  }
  node_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ModuleTaintWrapper::kNodeFieldNumber;
const int ModuleTaintWrapper::kRulesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ModuleTaintWrapper::ModuleTaintWrapper()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_module_2eproto::scc_info_ModuleTaintWrapper.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ModuleTaintWrapper)
}
ModuleTaintWrapper::ModuleTaintWrapper(const ModuleTaintWrapper& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      rules_(from.rules_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_node()) {
    node_ = new ::proto::AstNode(*from.node_);
  } else {
    node_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:proto.ModuleTaintWrapper)
}

void ModuleTaintWrapper::SharedCtor() {
  node_ = NULL;
}

ModuleTaintWrapper::~ModuleTaintWrapper() {
  // @@protoc_insertion_point(destructor:proto.ModuleTaintWrapper)
  SharedDtor();
}

void ModuleTaintWrapper::SharedDtor() {
  if (this != internal_default_instance()) delete node_;
}

void ModuleTaintWrapper::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ModuleTaintWrapper::descriptor() {
  ::protobuf_module_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_module_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ModuleTaintWrapper& ModuleTaintWrapper::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_module_2eproto::scc_info_ModuleTaintWrapper.base);
  return *internal_default_instance();
}


void ModuleTaintWrapper::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ModuleTaintWrapper)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  rules_.Clear();
  if (GetArenaNoVirtual() == NULL && node_ != NULL) {
    delete node_;
  }
  node_ = NULL;
  _internal_metadata_.Clear();
}

bool ModuleTaintWrapper::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ModuleTaintWrapper)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.AstNode node = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_node()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.ModuleTaintWrapper.TaintRule rules = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_rules()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ModuleTaintWrapper)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ModuleTaintWrapper)
  return false;
#undef DO_
}

void ModuleTaintWrapper::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ModuleTaintWrapper)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.AstNode node = 1;
  if (this->has_node()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_node(), output);
  }

  // repeated .proto.ModuleTaintWrapper.TaintRule rules = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->rules_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->rules(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ModuleTaintWrapper)
}

::google::protobuf::uint8* ModuleTaintWrapper::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ModuleTaintWrapper)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.AstNode node = 1;
  if (this->has_node()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_node(), deterministic, target);
  }

  // repeated .proto.ModuleTaintWrapper.TaintRule rules = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->rules_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->rules(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ModuleTaintWrapper)
  return target;
}

size_t ModuleTaintWrapper::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ModuleTaintWrapper)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.ModuleTaintWrapper.TaintRule rules = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->rules_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->rules(static_cast<int>(i)));
    }
  }

  // .proto.AstNode node = 1;
  if (this->has_node()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *node_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ModuleTaintWrapper::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ModuleTaintWrapper)
  GOOGLE_DCHECK_NE(&from, this);
  const ModuleTaintWrapper* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ModuleTaintWrapper>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ModuleTaintWrapper)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ModuleTaintWrapper)
    MergeFrom(*source);
  }
}

void ModuleTaintWrapper::MergeFrom(const ModuleTaintWrapper& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ModuleTaintWrapper)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  rules_.MergeFrom(from.rules_);
  if (from.has_node()) {
    mutable_node()->::proto::AstNode::MergeFrom(from.node());
  }
}

void ModuleTaintWrapper::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ModuleTaintWrapper)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ModuleTaintWrapper::CopyFrom(const ModuleTaintWrapper& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ModuleTaintWrapper)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModuleTaintWrapper::IsInitialized() const {
  return true;
}

void ModuleTaintWrapper::Swap(ModuleTaintWrapper* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ModuleTaintWrapper::InternalSwap(ModuleTaintWrapper* other) {
  using std::swap;
  CastToBase(&rules_)->InternalSwap(CastToBase(&other->rules_));
  swap(node_, other->node_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ModuleTaintWrapper::GetMetadata() const {
  protobuf_module_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_module_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ModuleFlow_FlowInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ModuleFlow_FlowInfo::kNameFieldNumber;
const int ModuleFlow_FlowInfo::kCweFieldNumber;
const int ModuleFlow_FlowInfo::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ModuleFlow_FlowInfo::ModuleFlow_FlowInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_module_2eproto::scc_info_ModuleFlow_FlowInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ModuleFlow.FlowInfo)
}
ModuleFlow_FlowInfo::ModuleFlow_FlowInfo(const ModuleFlow_FlowInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  cwe_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cwe().size() > 0) {
    cwe_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cwe_);
  }
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.type().size() > 0) {
    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.ModuleFlow.FlowInfo)
}

void ModuleFlow_FlowInfo::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cwe_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ModuleFlow_FlowInfo::~ModuleFlow_FlowInfo() {
  // @@protoc_insertion_point(destructor:proto.ModuleFlow.FlowInfo)
  SharedDtor();
}

void ModuleFlow_FlowInfo::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cwe_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ModuleFlow_FlowInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ModuleFlow_FlowInfo::descriptor() {
  ::protobuf_module_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_module_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ModuleFlow_FlowInfo& ModuleFlow_FlowInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_module_2eproto::scc_info_ModuleFlow_FlowInfo.base);
  return *internal_default_instance();
}


void ModuleFlow_FlowInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ModuleFlow.FlowInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cwe_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ModuleFlow_FlowInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ModuleFlow.FlowInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.ModuleFlow.FlowInfo.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cwe = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cwe()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cwe().data(), static_cast<int>(this->cwe().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.ModuleFlow.FlowInfo.cwe"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type().data(), static_cast<int>(this->type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.ModuleFlow.FlowInfo.type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ModuleFlow.FlowInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ModuleFlow.FlowInfo)
  return false;
#undef DO_
}

void ModuleFlow_FlowInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ModuleFlow.FlowInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.ModuleFlow.FlowInfo.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string cwe = 2;
  if (this->cwe().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cwe().data(), static_cast<int>(this->cwe().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.ModuleFlow.FlowInfo.cwe");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->cwe(), output);
  }

  // string type = 3;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), static_cast<int>(this->type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.ModuleFlow.FlowInfo.type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ModuleFlow.FlowInfo)
}

::google::protobuf::uint8* ModuleFlow_FlowInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ModuleFlow.FlowInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.ModuleFlow.FlowInfo.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string cwe = 2;
  if (this->cwe().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cwe().data(), static_cast<int>(this->cwe().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.ModuleFlow.FlowInfo.cwe");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->cwe(), target);
  }

  // string type = 3;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), static_cast<int>(this->type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.ModuleFlow.FlowInfo.type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ModuleFlow.FlowInfo)
  return target;
}

size_t ModuleFlow_FlowInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ModuleFlow.FlowInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string cwe = 2;
  if (this->cwe().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cwe());
  }

  // string type = 3;
  if (this->type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ModuleFlow_FlowInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ModuleFlow.FlowInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const ModuleFlow_FlowInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ModuleFlow_FlowInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ModuleFlow.FlowInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ModuleFlow.FlowInfo)
    MergeFrom(*source);
  }
}

void ModuleFlow_FlowInfo::MergeFrom(const ModuleFlow_FlowInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ModuleFlow.FlowInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.cwe().size() > 0) {

    cwe_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cwe_);
  }
  if (from.type().size() > 0) {

    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
}

void ModuleFlow_FlowInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ModuleFlow.FlowInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ModuleFlow_FlowInfo::CopyFrom(const ModuleFlow_FlowInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ModuleFlow.FlowInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModuleFlow_FlowInfo::IsInitialized() const {
  return true;
}

void ModuleFlow_FlowInfo::Swap(ModuleFlow_FlowInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ModuleFlow_FlowInfo::InternalSwap(ModuleFlow_FlowInfo* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  cwe_.Swap(&other->cwe_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  type_.Swap(&other->type_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ModuleFlow_FlowInfo::GetMetadata() const {
  protobuf_module_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_module_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ModuleFlow::InitAsDefaultInstance() {
  ::proto::_ModuleFlow_default_instance_._instance.get_mutable()->source_ = const_cast< ::proto::AstNode*>(
      ::proto::AstNode::internal_default_instance());
  ::proto::_ModuleFlow_default_instance_._instance.get_mutable()->sink_ = const_cast< ::proto::AstNode*>(
      ::proto::AstNode::internal_default_instance());
  ::proto::_ModuleFlow_default_instance_._instance.get_mutable()->info_ = const_cast< ::proto::ModuleFlow_FlowInfo*>(
      ::proto::ModuleFlow_FlowInfo::internal_default_instance());
}
void ModuleFlow::clear_source() {
  if (GetArenaNoVirtual() == NULL && source_ != NULL) {
    delete source_;
  }
  source_ = NULL;
}
void ModuleFlow::clear_hops() {
  hops_.Clear();
}
void ModuleFlow::clear_sink() {
  if (GetArenaNoVirtual() == NULL && sink_ != NULL) {
    delete sink_;
  }
  sink_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ModuleFlow::kSourceFieldNumber;
const int ModuleFlow::kHopsFieldNumber;
const int ModuleFlow::kSinkFieldNumber;
const int ModuleFlow::kInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ModuleFlow::ModuleFlow()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_module_2eproto::scc_info_ModuleFlow.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ModuleFlow)
}
ModuleFlow::ModuleFlow(const ModuleFlow& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      hops_(from.hops_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_source()) {
    source_ = new ::proto::AstNode(*from.source_);
  } else {
    source_ = NULL;
  }
  if (from.has_sink()) {
    sink_ = new ::proto::AstNode(*from.sink_);
  } else {
    sink_ = NULL;
  }
  if (from.has_info()) {
    info_ = new ::proto::ModuleFlow_FlowInfo(*from.info_);
  } else {
    info_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:proto.ModuleFlow)
}

void ModuleFlow::SharedCtor() {
  ::memset(&source_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&info_) -
      reinterpret_cast<char*>(&source_)) + sizeof(info_));
}

ModuleFlow::~ModuleFlow() {
  // @@protoc_insertion_point(destructor:proto.ModuleFlow)
  SharedDtor();
}

void ModuleFlow::SharedDtor() {
  if (this != internal_default_instance()) delete source_;
  if (this != internal_default_instance()) delete sink_;
  if (this != internal_default_instance()) delete info_;
}

void ModuleFlow::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ModuleFlow::descriptor() {
  ::protobuf_module_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_module_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ModuleFlow& ModuleFlow::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_module_2eproto::scc_info_ModuleFlow.base);
  return *internal_default_instance();
}


void ModuleFlow::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ModuleFlow)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  hops_.Clear();
  if (GetArenaNoVirtual() == NULL && source_ != NULL) {
    delete source_;
  }
  source_ = NULL;
  if (GetArenaNoVirtual() == NULL && sink_ != NULL) {
    delete sink_;
  }
  sink_ = NULL;
  if (GetArenaNoVirtual() == NULL && info_ != NULL) {
    delete info_;
  }
  info_ = NULL;
  _internal_metadata_.Clear();
}

bool ModuleFlow::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ModuleFlow)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.AstNode source = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_source()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.AstNode hops = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_hops()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.AstNode sink = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_sink()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.ModuleFlow.FlowInfo info = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ModuleFlow)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ModuleFlow)
  return false;
#undef DO_
}

void ModuleFlow::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ModuleFlow)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.AstNode source = 1;
  if (this->has_source()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_source(), output);
  }

  // repeated .proto.AstNode hops = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->hops_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->hops(static_cast<int>(i)),
      output);
  }

  // .proto.AstNode sink = 3;
  if (this->has_sink()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_sink(), output);
  }

  // .proto.ModuleFlow.FlowInfo info = 4;
  if (this->has_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_info(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ModuleFlow)
}

::google::protobuf::uint8* ModuleFlow::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ModuleFlow)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.AstNode source = 1;
  if (this->has_source()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_source(), deterministic, target);
  }

  // repeated .proto.AstNode hops = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->hops_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->hops(static_cast<int>(i)), deterministic, target);
  }

  // .proto.AstNode sink = 3;
  if (this->has_sink()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_sink(), deterministic, target);
  }

  // .proto.ModuleFlow.FlowInfo info = 4;
  if (this->has_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_info(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ModuleFlow)
  return target;
}

size_t ModuleFlow::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ModuleFlow)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.AstNode hops = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->hops_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->hops(static_cast<int>(i)));
    }
  }

  // .proto.AstNode source = 1;
  if (this->has_source()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *source_);
  }

  // .proto.AstNode sink = 3;
  if (this->has_sink()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *sink_);
  }

  // .proto.ModuleFlow.FlowInfo info = 4;
  if (this->has_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *info_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ModuleFlow::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ModuleFlow)
  GOOGLE_DCHECK_NE(&from, this);
  const ModuleFlow* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ModuleFlow>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ModuleFlow)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ModuleFlow)
    MergeFrom(*source);
  }
}

void ModuleFlow::MergeFrom(const ModuleFlow& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ModuleFlow)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  hops_.MergeFrom(from.hops_);
  if (from.has_source()) {
    mutable_source()->::proto::AstNode::MergeFrom(from.source());
  }
  if (from.has_sink()) {
    mutable_sink()->::proto::AstNode::MergeFrom(from.sink());
  }
  if (from.has_info()) {
    mutable_info()->::proto::ModuleFlow_FlowInfo::MergeFrom(from.info());
  }
}

void ModuleFlow::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ModuleFlow)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ModuleFlow::CopyFrom(const ModuleFlow& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ModuleFlow)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModuleFlow::IsInitialized() const {
  return true;
}

void ModuleFlow::Swap(ModuleFlow* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ModuleFlow::InternalSwap(ModuleFlow* other) {
  using std::swap;
  CastToBase(&hops_)->InternalSwap(CastToBase(&other->hops_));
  swap(source_, other->source_);
  swap(sink_, other->sink_);
  swap(info_, other->info_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ModuleFlow::GetMetadata() const {
  protobuf_module_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_module_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ModuleDanger::InitAsDefaultInstance() {
  ::proto::_ModuleDanger_default_instance_._instance.get_mutable()->danger_ = const_cast< ::proto::AstNode*>(
      ::proto::AstNode::internal_default_instance());
}
void ModuleDanger::clear_danger() {
  if (GetArenaNoVirtual() == NULL && danger_ != NULL) {
    delete danger_;
  }
  danger_ = NULL;
}
void ModuleDanger::clear_slices() {
  slices_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ModuleDanger::kDangerFieldNumber;
const int ModuleDanger::kSlicesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ModuleDanger::ModuleDanger()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_module_2eproto::scc_info_ModuleDanger.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ModuleDanger)
}
ModuleDanger::ModuleDanger(const ModuleDanger& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      slices_(from.slices_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_danger()) {
    danger_ = new ::proto::AstNode(*from.danger_);
  } else {
    danger_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:proto.ModuleDanger)
}

void ModuleDanger::SharedCtor() {
  danger_ = NULL;
}

ModuleDanger::~ModuleDanger() {
  // @@protoc_insertion_point(destructor:proto.ModuleDanger)
  SharedDtor();
}

void ModuleDanger::SharedDtor() {
  if (this != internal_default_instance()) delete danger_;
}

void ModuleDanger::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ModuleDanger::descriptor() {
  ::protobuf_module_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_module_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ModuleDanger& ModuleDanger::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_module_2eproto::scc_info_ModuleDanger.base);
  return *internal_default_instance();
}


void ModuleDanger::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ModuleDanger)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  slices_.Clear();
  if (GetArenaNoVirtual() == NULL && danger_ != NULL) {
    delete danger_;
  }
  danger_ = NULL;
  _internal_metadata_.Clear();
}

bool ModuleDanger::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ModuleDanger)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.AstNode danger = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_danger()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.AstNode slices = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_slices()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ModuleDanger)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ModuleDanger)
  return false;
#undef DO_
}

void ModuleDanger::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ModuleDanger)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.AstNode danger = 1;
  if (this->has_danger()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_danger(), output);
  }

  // repeated .proto.AstNode slices = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->slices_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->slices(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ModuleDanger)
}

::google::protobuf::uint8* ModuleDanger::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ModuleDanger)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.AstNode danger = 1;
  if (this->has_danger()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_danger(), deterministic, target);
  }

  // repeated .proto.AstNode slices = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->slices_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->slices(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ModuleDanger)
  return target;
}

size_t ModuleDanger::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ModuleDanger)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.AstNode slices = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->slices_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->slices(static_cast<int>(i)));
    }
  }

  // .proto.AstNode danger = 1;
  if (this->has_danger()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *danger_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ModuleDanger::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ModuleDanger)
  GOOGLE_DCHECK_NE(&from, this);
  const ModuleDanger* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ModuleDanger>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ModuleDanger)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ModuleDanger)
    MergeFrom(*source);
  }
}

void ModuleDanger::MergeFrom(const ModuleDanger& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ModuleDanger)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  slices_.MergeFrom(from.slices_);
  if (from.has_danger()) {
    mutable_danger()->::proto::AstNode::MergeFrom(from.danger());
  }
}

void ModuleDanger::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ModuleDanger)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ModuleDanger::CopyFrom(const ModuleDanger& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ModuleDanger)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModuleDanger::IsInitialized() const {
  return true;
}

void ModuleDanger::Swap(ModuleDanger* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ModuleDanger::InternalSwap(ModuleDanger* other) {
  using std::swap;
  CastToBase(&slices_)->InternalSwap(CastToBase(&other->slices_));
  swap(danger_, other->danger_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ModuleDanger::GetMetadata() const {
  protobuf_module_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_module_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ModuleSummary::InitAsDefaultInstance() {
  ::proto::_ModuleSummary_default_instance_._instance.get_mutable()->package_info_ = const_cast< ::proto::PackageInfo*>(
      ::proto::PackageInfo::internal_default_instance());
}
void ModuleSummary::clear_package_info() {
  if (GetArenaNoVirtual() == NULL && package_info_ != NULL) {
    delete package_info_;
  }
  package_info_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ModuleSummary::kPackageInfoFieldNumber;
const int ModuleSummary::kSourcesFieldNumber;
const int ModuleSummary::kSinksFieldNumber;
const int ModuleSummary::kTaintWrappersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ModuleSummary::ModuleSummary()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_module_2eproto::scc_info_ModuleSummary.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ModuleSummary)
}
ModuleSummary::ModuleSummary(const ModuleSummary& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      sources_(from.sources_),
      sinks_(from.sinks_),
      taint_wrappers_(from.taint_wrappers_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_package_info()) {
    package_info_ = new ::proto::PackageInfo(*from.package_info_);
  } else {
    package_info_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:proto.ModuleSummary)
}

void ModuleSummary::SharedCtor() {
  package_info_ = NULL;
}

ModuleSummary::~ModuleSummary() {
  // @@protoc_insertion_point(destructor:proto.ModuleSummary)
  SharedDtor();
}

void ModuleSummary::SharedDtor() {
  if (this != internal_default_instance()) delete package_info_;
}

void ModuleSummary::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ModuleSummary::descriptor() {
  ::protobuf_module_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_module_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ModuleSummary& ModuleSummary::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_module_2eproto::scc_info_ModuleSummary.base);
  return *internal_default_instance();
}


void ModuleSummary::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ModuleSummary)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sources_.Clear();
  sinks_.Clear();
  taint_wrappers_.Clear();
  if (GetArenaNoVirtual() == NULL && package_info_ != NULL) {
    delete package_info_;
  }
  package_info_ = NULL;
  _internal_metadata_.Clear();
}

bool ModuleSummary::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ModuleSummary)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.PackageInfo package_info = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_package_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.ModuleSource sources = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_sources()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.ModuleSink sinks = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_sinks()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.ModuleTaintWrapper taint_wrappers = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_taint_wrappers()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ModuleSummary)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ModuleSummary)
  return false;
#undef DO_
}

void ModuleSummary::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ModuleSummary)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.PackageInfo package_info = 1;
  if (this->has_package_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_package_info(), output);
  }

  // repeated .proto.ModuleSource sources = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->sources_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->sources(static_cast<int>(i)),
      output);
  }

  // repeated .proto.ModuleSink sinks = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->sinks_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->sinks(static_cast<int>(i)),
      output);
  }

  // repeated .proto.ModuleTaintWrapper taint_wrappers = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->taint_wrappers_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->taint_wrappers(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ModuleSummary)
}

::google::protobuf::uint8* ModuleSummary::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ModuleSummary)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.PackageInfo package_info = 1;
  if (this->has_package_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_package_info(), deterministic, target);
  }

  // repeated .proto.ModuleSource sources = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->sources_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->sources(static_cast<int>(i)), deterministic, target);
  }

  // repeated .proto.ModuleSink sinks = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->sinks_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->sinks(static_cast<int>(i)), deterministic, target);
  }

  // repeated .proto.ModuleTaintWrapper taint_wrappers = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->taint_wrappers_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->taint_wrappers(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ModuleSummary)
  return target;
}

size_t ModuleSummary::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ModuleSummary)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.ModuleSource sources = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->sources_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->sources(static_cast<int>(i)));
    }
  }

  // repeated .proto.ModuleSink sinks = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->sinks_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->sinks(static_cast<int>(i)));
    }
  }

  // repeated .proto.ModuleTaintWrapper taint_wrappers = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->taint_wrappers_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->taint_wrappers(static_cast<int>(i)));
    }
  }

  // .proto.PackageInfo package_info = 1;
  if (this->has_package_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *package_info_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ModuleSummary::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ModuleSummary)
  GOOGLE_DCHECK_NE(&from, this);
  const ModuleSummary* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ModuleSummary>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ModuleSummary)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ModuleSummary)
    MergeFrom(*source);
  }
}

void ModuleSummary::MergeFrom(const ModuleSummary& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ModuleSummary)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  sources_.MergeFrom(from.sources_);
  sinks_.MergeFrom(from.sinks_);
  taint_wrappers_.MergeFrom(from.taint_wrappers_);
  if (from.has_package_info()) {
    mutable_package_info()->::proto::PackageInfo::MergeFrom(from.package_info());
  }
}

void ModuleSummary::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ModuleSummary)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ModuleSummary::CopyFrom(const ModuleSummary& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ModuleSummary)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModuleSummary::IsInitialized() const {
  return true;
}

void ModuleSummary::Swap(ModuleSummary* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ModuleSummary::InternalSwap(ModuleSummary* other) {
  using std::swap;
  CastToBase(&sources_)->InternalSwap(CastToBase(&other->sources_));
  CastToBase(&sinks_)->InternalSwap(CastToBase(&other->sinks_));
  CastToBase(&taint_wrappers_)->InternalSwap(CastToBase(&other->taint_wrappers_));
  swap(package_info_, other->package_info_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ModuleSummary::GetMetadata() const {
  protobuf_module_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_module_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ModuleResult::InitAsDefaultInstance() {
  ::proto::_ModuleResult_default_instance_._instance.get_mutable()->package_info_ = const_cast< ::proto::PackageInfo*>(
      ::proto::PackageInfo::internal_default_instance());
}
void ModuleResult::clear_package_info() {
  if (GetArenaNoVirtual() == NULL && package_info_ != NULL) {
    delete package_info_;
  }
  package_info_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ModuleResult::kPackageInfoFieldNumber;
const int ModuleResult::kFlowsFieldNumber;
const int ModuleResult::kDangersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ModuleResult::ModuleResult()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_module_2eproto::scc_info_ModuleResult.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ModuleResult)
}
ModuleResult::ModuleResult(const ModuleResult& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      flows_(from.flows_),
      dangers_(from.dangers_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_package_info()) {
    package_info_ = new ::proto::PackageInfo(*from.package_info_);
  } else {
    package_info_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:proto.ModuleResult)
}

void ModuleResult::SharedCtor() {
  package_info_ = NULL;
}

ModuleResult::~ModuleResult() {
  // @@protoc_insertion_point(destructor:proto.ModuleResult)
  SharedDtor();
}

void ModuleResult::SharedDtor() {
  if (this != internal_default_instance()) delete package_info_;
}

void ModuleResult::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ModuleResult::descriptor() {
  ::protobuf_module_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_module_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ModuleResult& ModuleResult::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_module_2eproto::scc_info_ModuleResult.base);
  return *internal_default_instance();
}


void ModuleResult::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ModuleResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  flows_.Clear();
  dangers_.Clear();
  if (GetArenaNoVirtual() == NULL && package_info_ != NULL) {
    delete package_info_;
  }
  package_info_ = NULL;
  _internal_metadata_.Clear();
}

bool ModuleResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ModuleResult)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.PackageInfo package_info = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_package_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.ModuleFlow flows = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_flows()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.ModuleDanger dangers = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_dangers()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ModuleResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ModuleResult)
  return false;
#undef DO_
}

void ModuleResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ModuleResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.PackageInfo package_info = 1;
  if (this->has_package_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_package_info(), output);
  }

  // repeated .proto.ModuleFlow flows = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->flows_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->flows(static_cast<int>(i)),
      output);
  }

  // repeated .proto.ModuleDanger dangers = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->dangers_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->dangers(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ModuleResult)
}

::google::protobuf::uint8* ModuleResult::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ModuleResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.PackageInfo package_info = 1;
  if (this->has_package_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_package_info(), deterministic, target);
  }

  // repeated .proto.ModuleFlow flows = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->flows_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->flows(static_cast<int>(i)), deterministic, target);
  }

  // repeated .proto.ModuleDanger dangers = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->dangers_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->dangers(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ModuleResult)
  return target;
}

size_t ModuleResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ModuleResult)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.ModuleFlow flows = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->flows_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->flows(static_cast<int>(i)));
    }
  }

  // repeated .proto.ModuleDanger dangers = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->dangers_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->dangers(static_cast<int>(i)));
    }
  }

  // .proto.PackageInfo package_info = 1;
  if (this->has_package_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *package_info_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ModuleResult::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ModuleResult)
  GOOGLE_DCHECK_NE(&from, this);
  const ModuleResult* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ModuleResult>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ModuleResult)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ModuleResult)
    MergeFrom(*source);
  }
}

void ModuleResult::MergeFrom(const ModuleResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ModuleResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  flows_.MergeFrom(from.flows_);
  dangers_.MergeFrom(from.dangers_);
  if (from.has_package_info()) {
    mutable_package_info()->::proto::PackageInfo::MergeFrom(from.package_info());
  }
}

void ModuleResult::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ModuleResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ModuleResult::CopyFrom(const ModuleResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ModuleResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModuleResult::IsInitialized() const {
  return true;
}

void ModuleResult::Swap(ModuleResult* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ModuleResult::InternalSwap(ModuleResult* other) {
  using std::swap;
  CastToBase(&flows_)->InternalSwap(CastToBase(&other->flows_));
  CastToBase(&dangers_)->InternalSwap(CastToBase(&other->dangers_));
  swap(package_info_, other->package_info_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ModuleResult::GetMetadata() const {
  protobuf_module_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_module_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ModuleStatic::InitAsDefaultInstance() {
  ::proto::_ModuleStatic_default_instance_._instance.get_mutable()->package_info_ = const_cast< ::proto::PackageInfo*>(
      ::proto::PackageInfo::internal_default_instance());
}
void ModuleStatic::clear_package_info() {
  if (GetArenaNoVirtual() == NULL && package_info_ != NULL) {
    delete package_info_;
  }
  package_info_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ModuleStatic::kPackageInfoFieldNumber;
const int ModuleStatic::kFlowsFieldNumber;
const int ModuleStatic::kDangersFieldNumber;
const int ModuleStatic::kSourcesFieldNumber;
const int ModuleStatic::kSinksFieldNumber;
const int ModuleStatic::kTaintWrappersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ModuleStatic::ModuleStatic()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_module_2eproto::scc_info_ModuleStatic.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ModuleStatic)
}
ModuleStatic::ModuleStatic(const ModuleStatic& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      flows_(from.flows_),
      dangers_(from.dangers_),
      sources_(from.sources_),
      sinks_(from.sinks_),
      taint_wrappers_(from.taint_wrappers_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_package_info()) {
    package_info_ = new ::proto::PackageInfo(*from.package_info_);
  } else {
    package_info_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:proto.ModuleStatic)
}

void ModuleStatic::SharedCtor() {
  package_info_ = NULL;
}

ModuleStatic::~ModuleStatic() {
  // @@protoc_insertion_point(destructor:proto.ModuleStatic)
  SharedDtor();
}

void ModuleStatic::SharedDtor() {
  if (this != internal_default_instance()) delete package_info_;
}

void ModuleStatic::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ModuleStatic::descriptor() {
  ::protobuf_module_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_module_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ModuleStatic& ModuleStatic::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_module_2eproto::scc_info_ModuleStatic.base);
  return *internal_default_instance();
}


void ModuleStatic::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ModuleStatic)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  flows_.Clear();
  dangers_.Clear();
  sources_.Clear();
  sinks_.Clear();
  taint_wrappers_.Clear();
  if (GetArenaNoVirtual() == NULL && package_info_ != NULL) {
    delete package_info_;
  }
  package_info_ = NULL;
  _internal_metadata_.Clear();
}

bool ModuleStatic::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ModuleStatic)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.PackageInfo package_info = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_package_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.ModuleFlow flows = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_flows()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.ModuleDanger dangers = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_dangers()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.ModuleSource sources = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_sources()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.ModuleSink sinks = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_sinks()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.ModuleTaintWrapper taint_wrappers = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_taint_wrappers()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ModuleStatic)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ModuleStatic)
  return false;
#undef DO_
}

void ModuleStatic::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ModuleStatic)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.PackageInfo package_info = 1;
  if (this->has_package_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_package_info(), output);
  }

  // repeated .proto.ModuleFlow flows = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->flows_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->flows(static_cast<int>(i)),
      output);
  }

  // repeated .proto.ModuleDanger dangers = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->dangers_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->dangers(static_cast<int>(i)),
      output);
  }

  // repeated .proto.ModuleSource sources = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->sources_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->sources(static_cast<int>(i)),
      output);
  }

  // repeated .proto.ModuleSink sinks = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->sinks_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5,
      this->sinks(static_cast<int>(i)),
      output);
  }

  // repeated .proto.ModuleTaintWrapper taint_wrappers = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->taint_wrappers_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6,
      this->taint_wrappers(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ModuleStatic)
}

::google::protobuf::uint8* ModuleStatic::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ModuleStatic)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.PackageInfo package_info = 1;
  if (this->has_package_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_package_info(), deterministic, target);
  }

  // repeated .proto.ModuleFlow flows = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->flows_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->flows(static_cast<int>(i)), deterministic, target);
  }

  // repeated .proto.ModuleDanger dangers = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->dangers_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->dangers(static_cast<int>(i)), deterministic, target);
  }

  // repeated .proto.ModuleSource sources = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->sources_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->sources(static_cast<int>(i)), deterministic, target);
  }

  // repeated .proto.ModuleSink sinks = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->sinks_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->sinks(static_cast<int>(i)), deterministic, target);
  }

  // repeated .proto.ModuleTaintWrapper taint_wrappers = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->taint_wrappers_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->taint_wrappers(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ModuleStatic)
  return target;
}

size_t ModuleStatic::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ModuleStatic)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.ModuleFlow flows = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->flows_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->flows(static_cast<int>(i)));
    }
  }

  // repeated .proto.ModuleDanger dangers = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->dangers_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->dangers(static_cast<int>(i)));
    }
  }

  // repeated .proto.ModuleSource sources = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->sources_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->sources(static_cast<int>(i)));
    }
  }

  // repeated .proto.ModuleSink sinks = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->sinks_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->sinks(static_cast<int>(i)));
    }
  }

  // repeated .proto.ModuleTaintWrapper taint_wrappers = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->taint_wrappers_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->taint_wrappers(static_cast<int>(i)));
    }
  }

  // .proto.PackageInfo package_info = 1;
  if (this->has_package_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *package_info_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ModuleStatic::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ModuleStatic)
  GOOGLE_DCHECK_NE(&from, this);
  const ModuleStatic* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ModuleStatic>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ModuleStatic)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ModuleStatic)
    MergeFrom(*source);
  }
}

void ModuleStatic::MergeFrom(const ModuleStatic& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ModuleStatic)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  flows_.MergeFrom(from.flows_);
  dangers_.MergeFrom(from.dangers_);
  sources_.MergeFrom(from.sources_);
  sinks_.MergeFrom(from.sinks_);
  taint_wrappers_.MergeFrom(from.taint_wrappers_);
  if (from.has_package_info()) {
    mutable_package_info()->::proto::PackageInfo::MergeFrom(from.package_info());
  }
}

void ModuleStatic::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ModuleStatic)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ModuleStatic::CopyFrom(const ModuleStatic& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ModuleStatic)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModuleStatic::IsInitialized() const {
  return true;
}

void ModuleStatic::Swap(ModuleStatic* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ModuleStatic::InternalSwap(ModuleStatic* other) {
  using std::swap;
  CastToBase(&flows_)->InternalSwap(CastToBase(&other->flows_));
  CastToBase(&dangers_)->InternalSwap(CastToBase(&other->dangers_));
  CastToBase(&sources_)->InternalSwap(CastToBase(&other->sources_));
  CastToBase(&sinks_)->InternalSwap(CastToBase(&other->sinks_));
  CastToBase(&taint_wrappers_)->InternalSwap(CastToBase(&other->taint_wrappers_));
  swap(package_info_, other->package_info_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ModuleStatic::GetMetadata() const {
  protobuf_module_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_module_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace proto
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::proto::ModuleSource* Arena::CreateMaybeMessage< ::proto::ModuleSource >(Arena* arena) {
  return Arena::CreateInternal< ::proto::ModuleSource >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::proto::ModuleSink* Arena::CreateMaybeMessage< ::proto::ModuleSink >(Arena* arena) {
  return Arena::CreateInternal< ::proto::ModuleSink >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::proto::ModuleTaintWrapper_TaintPoint* Arena::CreateMaybeMessage< ::proto::ModuleTaintWrapper_TaintPoint >(Arena* arena) {
  return Arena::CreateInternal< ::proto::ModuleTaintWrapper_TaintPoint >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::proto::ModuleTaintWrapper_TaintRule* Arena::CreateMaybeMessage< ::proto::ModuleTaintWrapper_TaintRule >(Arena* arena) {
  return Arena::CreateInternal< ::proto::ModuleTaintWrapper_TaintRule >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::proto::ModuleTaintWrapper* Arena::CreateMaybeMessage< ::proto::ModuleTaintWrapper >(Arena* arena) {
  return Arena::CreateInternal< ::proto::ModuleTaintWrapper >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::proto::ModuleFlow_FlowInfo* Arena::CreateMaybeMessage< ::proto::ModuleFlow_FlowInfo >(Arena* arena) {
  return Arena::CreateInternal< ::proto::ModuleFlow_FlowInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::proto::ModuleFlow* Arena::CreateMaybeMessage< ::proto::ModuleFlow >(Arena* arena) {
  return Arena::CreateInternal< ::proto::ModuleFlow >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::proto::ModuleDanger* Arena::CreateMaybeMessage< ::proto::ModuleDanger >(Arena* arena) {
  return Arena::CreateInternal< ::proto::ModuleDanger >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::proto::ModuleSummary* Arena::CreateMaybeMessage< ::proto::ModuleSummary >(Arena* arena) {
  return Arena::CreateInternal< ::proto::ModuleSummary >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::proto::ModuleResult* Arena::CreateMaybeMessage< ::proto::ModuleResult >(Arena* arena) {
  return Arena::CreateInternal< ::proto::ModuleResult >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::proto::ModuleStatic* Arena::CreateMaybeMessage< ::proto::ModuleStatic >(Arena* arena) {
  return Arena::CreateInternal< ::proto::ModuleStatic >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
