// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: class_sig.proto

#ifndef PROTOBUF_INCLUDED_class_5fsig_2eproto
#define PROTOBUF_INCLUDED_class_5fsig_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "ast.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_class_5fsig_2eproto 

namespace protobuf_class_5fsig_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[11];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_class_5fsig_2eproto
namespace proto {
class BasicBlockProto;
class BasicBlockProtoDefaultTypeInternal;
extern BasicBlockProtoDefaultTypeInternal _BasicBlockProto_default_instance_;
class Centroid;
class CentroidDefaultTypeInternal;
extern CentroidDefaultTypeInternal _Centroid_default_instance_;
class ClassAttributeProto;
class ClassAttributeProtoDefaultTypeInternal;
extern ClassAttributeProtoDefaultTypeInternal _ClassAttributeProto_default_instance_;
class ClassMethodRelationProto;
class ClassMethodRelationProtoDefaultTypeInternal;
extern ClassMethodRelationProtoDefaultTypeInternal _ClassMethodRelationProto_default_instance_;
class ClassRelationProto;
class ClassRelationProtoDefaultTypeInternal;
extern ClassRelationProtoDefaultTypeInternal _ClassRelationProto_default_instance_;
class ClassRelationProto_RelationCounter;
class ClassRelationProto_RelationCounterDefaultTypeInternal;
extern ClassRelationProto_RelationCounterDefaultTypeInternal _ClassRelationProto_RelationCounter_default_instance_;
class MethodAttributeProto;
class MethodAttributeProtoDefaultTypeInternal;
extern MethodAttributeProtoDefaultTypeInternal _MethodAttributeProto_default_instance_;
class MethodClassRelationProto;
class MethodClassRelationProtoDefaultTypeInternal;
extern MethodClassRelationProtoDefaultTypeInternal _MethodClassRelationProto_default_instance_;
class MethodRelationProto;
class MethodRelationProtoDefaultTypeInternal;
extern MethodRelationProtoDefaultTypeInternal _MethodRelationProto_default_instance_;
class PkgClassMethodResult;
class PkgClassMethodResultDefaultTypeInternal;
extern PkgClassMethodResultDefaultTypeInternal _PkgClassMethodResult_default_instance_;
class PkgClassMethodResults;
class PkgClassMethodResultsDefaultTypeInternal;
extern PkgClassMethodResultsDefaultTypeInternal _PkgClassMethodResults_default_instance_;
}  // namespace proto
namespace google {
namespace protobuf {
template<> ::proto::BasicBlockProto* Arena::CreateMaybeMessage<::proto::BasicBlockProto>(Arena*);
template<> ::proto::Centroid* Arena::CreateMaybeMessage<::proto::Centroid>(Arena*);
template<> ::proto::ClassAttributeProto* Arena::CreateMaybeMessage<::proto::ClassAttributeProto>(Arena*);
template<> ::proto::ClassMethodRelationProto* Arena::CreateMaybeMessage<::proto::ClassMethodRelationProto>(Arena*);
template<> ::proto::ClassRelationProto* Arena::CreateMaybeMessage<::proto::ClassRelationProto>(Arena*);
template<> ::proto::ClassRelationProto_RelationCounter* Arena::CreateMaybeMessage<::proto::ClassRelationProto_RelationCounter>(Arena*);
template<> ::proto::MethodAttributeProto* Arena::CreateMaybeMessage<::proto::MethodAttributeProto>(Arena*);
template<> ::proto::MethodClassRelationProto* Arena::CreateMaybeMessage<::proto::MethodClassRelationProto>(Arena*);
template<> ::proto::MethodRelationProto* Arena::CreateMaybeMessage<::proto::MethodRelationProto>(Arena*);
template<> ::proto::PkgClassMethodResult* Arena::CreateMaybeMessage<::proto::PkgClassMethodResult>(Arena*);
template<> ::proto::PkgClassMethodResults* Arena::CreateMaybeMessage<::proto::PkgClassMethodResults>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace proto {

enum ClassRelationProto_RelationType {
  ClassRelationProto_RelationType_INHERITANCE = 0,
  ClassRelationProto_RelationType_STATIC_ARRAY_FIELD = 1,
  ClassRelationProto_RelationType_STATIC__FIELD = 2,
  ClassRelationProto_RelationType_INSTANCE_ARRAY_FIELD = 3,
  ClassRelationProto_RelationType_INSTANCE_FIELD = 4,
  ClassRelationProto_RelationType_METHOD_ARRAY_PARAMERTER = 5,
  ClassRelationProto_RelationType_METHOD_PARAMETER = 6,
  ClassRelationProto_RelationType_METHOD_ARRAY_RETURN = 7,
  ClassRelationProto_RelationType_METHOD_RETURN = 8,
  ClassRelationProto_RelationType_METHOD_ARRAY_LOCAL = 9,
  ClassRelationProto_RelationType_METHOD_LOCAL = 10,
  ClassRelationProto_RelationType_STMT_ARRAY_REF = 11,
  ClassRelationProto_RelationType_STMT_INSTANCE_FIELD_REF = 12,
  ClassRelationProto_RelationType_STMT_STATIC_FIELD_REF = 13,
  ClassRelationProto_RelationType_STMT_LOCAL_REF = 14,
  ClassRelationProto_RelationType_CAST_EXPR = 15,
  ClassRelationProto_RelationType_INSTANCE_OF_EXPR = 16,
  ClassRelationProto_RelationType_NEW_EXPR = 17,
  ClassRelationProto_RelationType_NEW_ARRAY_EXPR = 18,
  ClassRelationProto_RelationType_NEW_MULTI_ARRAY_EXPR = 19,
  ClassRelationProto_RelationType_INVOKE_EXPR = 20,
  ClassRelationProto_RelationType_ICC = 21,
  ClassRelationProto_RelationType_IMPL = 22,
  ClassRelationProto_RelationType_OUTER_CLASS = 23,
  ClassRelationProto_RelationType_ClassRelationNone = 24,
  ClassRelationProto_RelationType_ClassRelationProto_RelationType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ClassRelationProto_RelationType_ClassRelationProto_RelationType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ClassRelationProto_RelationType_IsValid(int value);
const ClassRelationProto_RelationType ClassRelationProto_RelationType_RelationType_MIN = ClassRelationProto_RelationType_INHERITANCE;
const ClassRelationProto_RelationType ClassRelationProto_RelationType_RelationType_MAX = ClassRelationProto_RelationType_ClassRelationNone;
const int ClassRelationProto_RelationType_RelationType_ARRAYSIZE = ClassRelationProto_RelationType_RelationType_MAX + 1;

const ::google::protobuf::EnumDescriptor* ClassRelationProto_RelationType_descriptor();
inline const ::std::string& ClassRelationProto_RelationType_Name(ClassRelationProto_RelationType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ClassRelationProto_RelationType_descriptor(), value);
}
inline bool ClassRelationProto_RelationType_Parse(
    const ::std::string& name, ClassRelationProto_RelationType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ClassRelationProto_RelationType>(
    ClassRelationProto_RelationType_descriptor(), name, value);
}
// ===================================================================

class Centroid : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.Centroid) */ {
 public:
  Centroid();
  virtual ~Centroid();

  Centroid(const Centroid& from);

  inline Centroid& operator=(const Centroid& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Centroid(Centroid&& from) noexcept
    : Centroid() {
    *this = ::std::move(from);
  }

  inline Centroid& operator=(Centroid&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Centroid& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Centroid* internal_default_instance() {
    return reinterpret_cast<const Centroid*>(
               &_Centroid_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(Centroid* other);
  friend void swap(Centroid& a, Centroid& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Centroid* New() const final {
    return CreateMaybeMessage<Centroid>(NULL);
  }

  Centroid* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Centroid>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Centroid& from);
  void MergeFrom(const Centroid& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Centroid* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double x = 1;
  void clear_x();
  static const int kXFieldNumber = 1;
  double x() const;
  void set_x(double value);

  // double y = 2;
  void clear_y();
  static const int kYFieldNumber = 2;
  double y() const;
  void set_y(double value);

  // double z = 3;
  void clear_z();
  static const int kZFieldNumber = 3;
  double z() const;
  void set_z(double value);

  // int32 w = 4;
  void clear_w();
  static const int kWFieldNumber = 4;
  ::google::protobuf::int32 w() const;
  void set_w(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.Centroid)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  double x_;
  double y_;
  double z_;
  ::google::protobuf::int32 w_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_class_5fsig_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BasicBlockProto : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.BasicBlockProto) */ {
 public:
  BasicBlockProto();
  virtual ~BasicBlockProto();

  BasicBlockProto(const BasicBlockProto& from);

  inline BasicBlockProto& operator=(const BasicBlockProto& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BasicBlockProto(BasicBlockProto&& from) noexcept
    : BasicBlockProto() {
    *this = ::std::move(from);
  }

  inline BasicBlockProto& operator=(BasicBlockProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BasicBlockProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BasicBlockProto* internal_default_instance() {
    return reinterpret_cast<const BasicBlockProto*>(
               &_BasicBlockProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(BasicBlockProto* other);
  friend void swap(BasicBlockProto& a, BasicBlockProto& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BasicBlockProto* New() const final {
    return CreateMaybeMessage<BasicBlockProto>(NULL);
  }

  BasicBlockProto* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<BasicBlockProto>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const BasicBlockProto& from);
  void MergeFrom(const BasicBlockProto& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BasicBlockProto* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string invoked_method_signatures = 8;
  int invoked_method_signatures_size() const;
  void clear_invoked_method_signatures();
  static const int kInvokedMethodSignaturesFieldNumber = 8;
  const ::std::string& invoked_method_signatures(int index) const;
  ::std::string* mutable_invoked_method_signatures(int index);
  void set_invoked_method_signatures(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_invoked_method_signatures(int index, ::std::string&& value);
  #endif
  void set_invoked_method_signatures(int index, const char* value);
  void set_invoked_method_signatures(int index, const char* value, size_t size);
  ::std::string* add_invoked_method_signatures();
  void add_invoked_method_signatures(const ::std::string& value);
  #if LANG_CXX11
  void add_invoked_method_signatures(::std::string&& value);
  #endif
  void add_invoked_method_signatures(const char* value);
  void add_invoked_method_signatures(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& invoked_method_signatures() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_invoked_method_signatures();

  // repeated int32 predecessors = 9;
  int predecessors_size() const;
  void clear_predecessors();
  static const int kPredecessorsFieldNumber = 9;
  ::google::protobuf::int32 predecessors(int index) const;
  void set_predecessors(int index, ::google::protobuf::int32 value);
  void add_predecessors(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      predecessors() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_predecessors();

  // repeated int32 successors = 10;
  int successors_size() const;
  void clear_successors();
  static const int kSuccessorsFieldNumber = 10;
  ::google::protobuf::int32 successors(int index) const;
  void set_successors(int index, ::google::protobuf::int32 value);
  void add_successors(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      successors() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_successors();

  // int32 sequence_number = 1;
  void clear_sequence_number();
  static const int kSequenceNumberFieldNumber = 1;
  ::google::protobuf::int32 sequence_number() const;
  void set_sequence_number(::google::protobuf::int32 value);

  // int32 in_degree = 2;
  void clear_in_degree();
  static const int kInDegreeFieldNumber = 2;
  ::google::protobuf::int32 in_degree() const;
  void set_in_degree(::google::protobuf::int32 value);

  // int32 out_degree = 3;
  void clear_out_degree();
  static const int kOutDegreeFieldNumber = 3;
  ::google::protobuf::int32 out_degree() const;
  void set_out_degree(::google::protobuf::int32 value);

  // int32 in_degree_unexceptional = 4;
  void clear_in_degree_unexceptional();
  static const int kInDegreeUnexceptionalFieldNumber = 4;
  ::google::protobuf::int32 in_degree_unexceptional() const;
  void set_in_degree_unexceptional(::google::protobuf::int32 value);

  // int32 out_degree_unexceptional = 5;
  void clear_out_degree_unexceptional();
  static const int kOutDegreeUnexceptionalFieldNumber = 5;
  ::google::protobuf::int32 out_degree_unexceptional() const;
  void set_out_degree_unexceptional(::google::protobuf::int32 value);

  // int32 loop_depth = 6;
  void clear_loop_depth();
  static const int kLoopDepthFieldNumber = 6;
  ::google::protobuf::int32 loop_depth() const;
  void set_loop_depth(::google::protobuf::int32 value);

  // int32 stmt_count = 7;
  void clear_stmt_count();
  static const int kStmtCountFieldNumber = 7;
  ::google::protobuf::int32 stmt_count() const;
  void set_stmt_count(::google::protobuf::int32 value);

  // int32 dominator_sequence_number = 11;
  void clear_dominator_sequence_number();
  static const int kDominatorSequenceNumberFieldNumber = 11;
  ::google::protobuf::int32 dominator_sequence_number() const;
  void set_dominator_sequence_number(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.BasicBlockProto)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> invoked_method_signatures_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > predecessors_;
  mutable int _predecessors_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > successors_;
  mutable int _successors_cached_byte_size_;
  ::google::protobuf::int32 sequence_number_;
  ::google::protobuf::int32 in_degree_;
  ::google::protobuf::int32 out_degree_;
  ::google::protobuf::int32 in_degree_unexceptional_;
  ::google::protobuf::int32 out_degree_unexceptional_;
  ::google::protobuf::int32 loop_depth_;
  ::google::protobuf::int32 stmt_count_;
  ::google::protobuf::int32 dominator_sequence_number_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_class_5fsig_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MethodAttributeProto : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.MethodAttributeProto) */ {
 public:
  MethodAttributeProto();
  virtual ~MethodAttributeProto();

  MethodAttributeProto(const MethodAttributeProto& from);

  inline MethodAttributeProto& operator=(const MethodAttributeProto& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MethodAttributeProto(MethodAttributeProto&& from) noexcept
    : MethodAttributeProto() {
    *this = ::std::move(from);
  }

  inline MethodAttributeProto& operator=(MethodAttributeProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MethodAttributeProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MethodAttributeProto* internal_default_instance() {
    return reinterpret_cast<const MethodAttributeProto*>(
               &_MethodAttributeProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(MethodAttributeProto* other);
  friend void swap(MethodAttributeProto& a, MethodAttributeProto& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MethodAttributeProto* New() const final {
    return CreateMaybeMessage<MethodAttributeProto>(NULL);
  }

  MethodAttributeProto* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MethodAttributeProto>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MethodAttributeProto& from);
  void MergeFrom(const MethodAttributeProto& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MethodAttributeProto* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string paramter_types = 5;
  int paramter_types_size() const;
  void clear_paramter_types();
  static const int kParamterTypesFieldNumber = 5;
  const ::std::string& paramter_types(int index) const;
  ::std::string* mutable_paramter_types(int index);
  void set_paramter_types(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_paramter_types(int index, ::std::string&& value);
  #endif
  void set_paramter_types(int index, const char* value);
  void set_paramter_types(int index, const char* value, size_t size);
  ::std::string* add_paramter_types();
  void add_paramter_types(const ::std::string& value);
  #if LANG_CXX11
  void add_paramter_types(::std::string&& value);
  #endif
  void add_paramter_types(const char* value);
  void add_paramter_types(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& paramter_types() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_paramter_types();

  // repeated string local_types = 7;
  int local_types_size() const;
  void clear_local_types();
  static const int kLocalTypesFieldNumber = 7;
  const ::std::string& local_types(int index) const;
  ::std::string* mutable_local_types(int index);
  void set_local_types(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_local_types(int index, ::std::string&& value);
  #endif
  void set_local_types(int index, const char* value);
  void set_local_types(int index, const char* value, size_t size);
  ::std::string* add_local_types();
  void add_local_types(const ::std::string& value);
  #if LANG_CXX11
  void add_local_types(::std::string&& value);
  #endif
  void add_local_types(const char* value);
  void add_local_types(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& local_types() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_local_types();

  // repeated string string_constants = 8;
  int string_constants_size() const;
  void clear_string_constants();
  static const int kStringConstantsFieldNumber = 8;
  const ::std::string& string_constants(int index) const;
  ::std::string* mutable_string_constants(int index);
  void set_string_constants(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_string_constants(int index, ::std::string&& value);
  #endif
  void set_string_constants(int index, const char* value);
  void set_string_constants(int index, const char* value, size_t size);
  ::std::string* add_string_constants();
  void add_string_constants(const ::std::string& value);
  #if LANG_CXX11
  void add_string_constants(::std::string&& value);
  #endif
  void add_string_constants(const char* value);
  void add_string_constants(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& string_constants() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_string_constants();

  // repeated string invoked_method_signatures = 9;
  int invoked_method_signatures_size() const;
  void clear_invoked_method_signatures();
  static const int kInvokedMethodSignaturesFieldNumber = 9;
  const ::std::string& invoked_method_signatures(int index) const;
  ::std::string* mutable_invoked_method_signatures(int index);
  void set_invoked_method_signatures(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_invoked_method_signatures(int index, ::std::string&& value);
  #endif
  void set_invoked_method_signatures(int index, const char* value);
  void set_invoked_method_signatures(int index, const char* value, size_t size);
  ::std::string* add_invoked_method_signatures();
  void add_invoked_method_signatures(const ::std::string& value);
  #if LANG_CXX11
  void add_invoked_method_signatures(::std::string&& value);
  #endif
  void add_invoked_method_signatures(const char* value);
  void add_invoked_method_signatures(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& invoked_method_signatures() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_invoked_method_signatures();

  // repeated string resource_refs = 10;
  int resource_refs_size() const;
  void clear_resource_refs();
  static const int kResourceRefsFieldNumber = 10;
  const ::std::string& resource_refs(int index) const;
  ::std::string* mutable_resource_refs(int index);
  void set_resource_refs(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_resource_refs(int index, ::std::string&& value);
  #endif
  void set_resource_refs(int index, const char* value);
  void set_resource_refs(int index, const char* value, size_t size);
  ::std::string* add_resource_refs();
  void add_resource_refs(const ::std::string& value);
  #if LANG_CXX11
  void add_resource_refs(::std::string&& value);
  #endif
  void add_resource_refs(const char* value);
  void add_resource_refs(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& resource_refs() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_resource_refs();

  // repeated string statements = 11;
  int statements_size() const;
  void clear_statements();
  static const int kStatementsFieldNumber = 11;
  const ::std::string& statements(int index) const;
  ::std::string* mutable_statements(int index);
  void set_statements(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_statements(int index, ::std::string&& value);
  #endif
  void set_statements(int index, const char* value);
  void set_statements(int index, const char* value, size_t size);
  ::std::string* add_statements();
  void add_statements(const ::std::string& value);
  #if LANG_CXX11
  void add_statements(::std::string&& value);
  #endif
  void add_statements(const char* value);
  void add_statements(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& statements() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_statements();

  // repeated .proto.BasicBlockProto blocks = 15;
  int blocks_size() const;
  void clear_blocks();
  static const int kBlocksFieldNumber = 15;
  ::proto::BasicBlockProto* mutable_blocks(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::BasicBlockProto >*
      mutable_blocks();
  const ::proto::BasicBlockProto& blocks(int index) const;
  ::proto::BasicBlockProto* add_blocks();
  const ::google::protobuf::RepeatedPtrField< ::proto::BasicBlockProto >&
      blocks() const;

  // string class_name = 1;
  void clear_class_name();
  static const int kClassNameFieldNumber = 1;
  const ::std::string& class_name() const;
  void set_class_name(const ::std::string& value);
  #if LANG_CXX11
  void set_class_name(::std::string&& value);
  #endif
  void set_class_name(const char* value);
  void set_class_name(const char* value, size_t size);
  ::std::string* mutable_class_name();
  ::std::string* release_class_name();
  void set_allocated_class_name(::std::string* class_name);

  // string method_name = 2;
  void clear_method_name();
  static const int kMethodNameFieldNumber = 2;
  const ::std::string& method_name() const;
  void set_method_name(const ::std::string& value);
  #if LANG_CXX11
  void set_method_name(::std::string&& value);
  #endif
  void set_method_name(const char* value);
  void set_method_name(const char* value, size_t size);
  ::std::string* mutable_method_name();
  ::std::string* release_method_name();
  void set_allocated_method_name(::std::string* method_name);

  // string method_signature = 3;
  void clear_method_signature();
  static const int kMethodSignatureFieldNumber = 3;
  const ::std::string& method_signature() const;
  void set_method_signature(const ::std::string& value);
  #if LANG_CXX11
  void set_method_signature(::std::string&& value);
  #endif
  void set_method_signature(const char* value);
  void set_method_signature(const char* value, size_t size);
  ::std::string* mutable_method_signature();
  ::std::string* release_method_signature();
  void set_allocated_method_signature(::std::string* method_signature);

  // string method_subsignature = 4;
  void clear_method_subsignature();
  static const int kMethodSubsignatureFieldNumber = 4;
  const ::std::string& method_subsignature() const;
  void set_method_subsignature(const ::std::string& value);
  #if LANG_CXX11
  void set_method_subsignature(::std::string&& value);
  #endif
  void set_method_subsignature(const char* value);
  void set_method_subsignature(const char* value, size_t size);
  ::std::string* mutable_method_subsignature();
  ::std::string* release_method_subsignature();
  void set_allocated_method_subsignature(::std::string* method_subsignature);

  // string return_type = 6;
  void clear_return_type();
  static const int kReturnTypeFieldNumber = 6;
  const ::std::string& return_type() const;
  void set_return_type(const ::std::string& value);
  #if LANG_CXX11
  void set_return_type(::std::string&& value);
  #endif
  void set_return_type(const char* value);
  void set_return_type(const char* value, size_t size);
  ::std::string* mutable_return_type();
  ::std::string* release_return_type();
  void set_allocated_return_type(::std::string* return_type);

  // string modifiers = 12;
  void clear_modifiers();
  static const int kModifiersFieldNumber = 12;
  const ::std::string& modifiers() const;
  void set_modifiers(const ::std::string& value);
  #if LANG_CXX11
  void set_modifiers(::std::string&& value);
  #endif
  void set_modifiers(const char* value);
  void set_modifiers(const char* value, size_t size);
  ::std::string* mutable_modifiers();
  ::std::string* release_modifiers();
  void set_allocated_modifiers(::std::string* modifiers);

  // .proto.Centroid centroid = 13;
  bool has_centroid() const;
  void clear_centroid();
  static const int kCentroidFieldNumber = 13;
  private:
  const ::proto::Centroid& _internal_centroid() const;
  public:
  const ::proto::Centroid& centroid() const;
  ::proto::Centroid* release_centroid();
  ::proto::Centroid* mutable_centroid();
  void set_allocated_centroid(::proto::Centroid* centroid);

  // .proto.Centroid centroid_with_invoke = 14;
  bool has_centroid_with_invoke() const;
  void clear_centroid_with_invoke();
  static const int kCentroidWithInvokeFieldNumber = 14;
  private:
  const ::proto::Centroid& _internal_centroid_with_invoke() const;
  public:
  const ::proto::Centroid& centroid_with_invoke() const;
  ::proto::Centroid* release_centroid_with_invoke();
  ::proto::Centroid* mutable_centroid_with_invoke();
  void set_allocated_centroid_with_invoke(::proto::Centroid* centroid_with_invoke);

  // @@protoc_insertion_point(class_scope:proto.MethodAttributeProto)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> paramter_types_;
  ::google::protobuf::RepeatedPtrField< ::std::string> local_types_;
  ::google::protobuf::RepeatedPtrField< ::std::string> string_constants_;
  ::google::protobuf::RepeatedPtrField< ::std::string> invoked_method_signatures_;
  ::google::protobuf::RepeatedPtrField< ::std::string> resource_refs_;
  ::google::protobuf::RepeatedPtrField< ::std::string> statements_;
  ::google::protobuf::RepeatedPtrField< ::proto::BasicBlockProto > blocks_;
  ::google::protobuf::internal::ArenaStringPtr class_name_;
  ::google::protobuf::internal::ArenaStringPtr method_name_;
  ::google::protobuf::internal::ArenaStringPtr method_signature_;
  ::google::protobuf::internal::ArenaStringPtr method_subsignature_;
  ::google::protobuf::internal::ArenaStringPtr return_type_;
  ::google::protobuf::internal::ArenaStringPtr modifiers_;
  ::proto::Centroid* centroid_;
  ::proto::Centroid* centroid_with_invoke_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_class_5fsig_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ClassAttributeProto : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ClassAttributeProto) */ {
 public:
  ClassAttributeProto();
  virtual ~ClassAttributeProto();

  ClassAttributeProto(const ClassAttributeProto& from);

  inline ClassAttributeProto& operator=(const ClassAttributeProto& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ClassAttributeProto(ClassAttributeProto&& from) noexcept
    : ClassAttributeProto() {
    *this = ::std::move(from);
  }

  inline ClassAttributeProto& operator=(ClassAttributeProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ClassAttributeProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ClassAttributeProto* internal_default_instance() {
    return reinterpret_cast<const ClassAttributeProto*>(
               &_ClassAttributeProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(ClassAttributeProto* other);
  friend void swap(ClassAttributeProto& a, ClassAttributeProto& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ClassAttributeProto* New() const final {
    return CreateMaybeMessage<ClassAttributeProto>(NULL);
  }

  ClassAttributeProto* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ClassAttributeProto>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ClassAttributeProto& from);
  void MergeFrom(const ClassAttributeProto& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ClassAttributeProto* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string interface_class_names = 3;
  int interface_class_names_size() const;
  void clear_interface_class_names();
  static const int kInterfaceClassNamesFieldNumber = 3;
  const ::std::string& interface_class_names(int index) const;
  ::std::string* mutable_interface_class_names(int index);
  void set_interface_class_names(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_interface_class_names(int index, ::std::string&& value);
  #endif
  void set_interface_class_names(int index, const char* value);
  void set_interface_class_names(int index, const char* value, size_t size);
  ::std::string* add_interface_class_names();
  void add_interface_class_names(const ::std::string& value);
  #if LANG_CXX11
  void add_interface_class_names(::std::string&& value);
  #endif
  void add_interface_class_names(const char* value);
  void add_interface_class_names(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& interface_class_names() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_interface_class_names();

  // repeated string static_field_strings = 6;
  int static_field_strings_size() const;
  void clear_static_field_strings();
  static const int kStaticFieldStringsFieldNumber = 6;
  const ::std::string& static_field_strings(int index) const;
  ::std::string* mutable_static_field_strings(int index);
  void set_static_field_strings(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_static_field_strings(int index, ::std::string&& value);
  #endif
  void set_static_field_strings(int index, const char* value);
  void set_static_field_strings(int index, const char* value, size_t size);
  ::std::string* add_static_field_strings();
  void add_static_field_strings(const ::std::string& value);
  #if LANG_CXX11
  void add_static_field_strings(::std::string&& value);
  #endif
  void add_static_field_strings(const char* value);
  void add_static_field_strings(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& static_field_strings() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_static_field_strings();

  // repeated string instance_field_strings = 7;
  int instance_field_strings_size() const;
  void clear_instance_field_strings();
  static const int kInstanceFieldStringsFieldNumber = 7;
  const ::std::string& instance_field_strings(int index) const;
  ::std::string* mutable_instance_field_strings(int index);
  void set_instance_field_strings(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_instance_field_strings(int index, ::std::string&& value);
  #endif
  void set_instance_field_strings(int index, const char* value);
  void set_instance_field_strings(int index, const char* value, size_t size);
  ::std::string* add_instance_field_strings();
  void add_instance_field_strings(const ::std::string& value);
  #if LANG_CXX11
  void add_instance_field_strings(::std::string&& value);
  #endif
  void add_instance_field_strings(const char* value);
  void add_instance_field_strings(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& instance_field_strings() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_instance_field_strings();

  // repeated string permission_strings = 8;
  int permission_strings_size() const;
  void clear_permission_strings();
  static const int kPermissionStringsFieldNumber = 8;
  const ::std::string& permission_strings(int index) const;
  ::std::string* mutable_permission_strings(int index);
  void set_permission_strings(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_permission_strings(int index, ::std::string&& value);
  #endif
  void set_permission_strings(int index, const char* value);
  void set_permission_strings(int index, const char* value, size_t size);
  ::std::string* add_permission_strings();
  void add_permission_strings(const ::std::string& value);
  #if LANG_CXX11
  void add_permission_strings(::std::string&& value);
  #endif
  void add_permission_strings(const char* value);
  void add_permission_strings(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& permission_strings() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_permission_strings();

  // repeated .proto.MethodAttributeProto methods = 9;
  int methods_size() const;
  void clear_methods();
  static const int kMethodsFieldNumber = 9;
  ::proto::MethodAttributeProto* mutable_methods(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::MethodAttributeProto >*
      mutable_methods();
  const ::proto::MethodAttributeProto& methods(int index) const;
  ::proto::MethodAttributeProto* add_methods();
  const ::google::protobuf::RepeatedPtrField< ::proto::MethodAttributeProto >&
      methods() const;

  // string class_name = 1;
  void clear_class_name();
  static const int kClassNameFieldNumber = 1;
  const ::std::string& class_name() const;
  void set_class_name(const ::std::string& value);
  #if LANG_CXX11
  void set_class_name(::std::string&& value);
  #endif
  void set_class_name(const char* value);
  void set_class_name(const char* value, size_t size);
  ::std::string* mutable_class_name();
  ::std::string* release_class_name();
  void set_allocated_class_name(::std::string* class_name);

  // string super_class_name = 2;
  void clear_super_class_name();
  static const int kSuperClassNameFieldNumber = 2;
  const ::std::string& super_class_name() const;
  void set_super_class_name(const ::std::string& value);
  #if LANG_CXX11
  void set_super_class_name(::std::string&& value);
  #endif
  void set_super_class_name(const char* value);
  void set_super_class_name(const char* value, size_t size);
  ::std::string* mutable_super_class_name();
  ::std::string* release_super_class_name();
  void set_allocated_super_class_name(::std::string* super_class_name);

  // string package_name = 4;
  void clear_package_name();
  static const int kPackageNameFieldNumber = 4;
  const ::std::string& package_name() const;
  void set_package_name(const ::std::string& value);
  #if LANG_CXX11
  void set_package_name(::std::string&& value);
  #endif
  void set_package_name(const char* value);
  void set_package_name(const char* value, size_t size);
  ::std::string* mutable_package_name();
  ::std::string* release_package_name();
  void set_allocated_package_name(::std::string* package_name);

  // string outer_class_name = 10;
  void clear_outer_class_name();
  static const int kOuterClassNameFieldNumber = 10;
  const ::std::string& outer_class_name() const;
  void set_outer_class_name(const ::std::string& value);
  #if LANG_CXX11
  void set_outer_class_name(::std::string&& value);
  #endif
  void set_outer_class_name(const char* value);
  void set_outer_class_name(const char* value, size_t size);
  ::std::string* mutable_outer_class_name();
  ::std::string* release_outer_class_name();
  void set_allocated_outer_class_name(::std::string* outer_class_name);

  // string modifiers = 11;
  void clear_modifiers();
  static const int kModifiersFieldNumber = 11;
  const ::std::string& modifiers() const;
  void set_modifiers(const ::std::string& value);
  #if LANG_CXX11
  void set_modifiers(::std::string&& value);
  #endif
  void set_modifiers(const char* value);
  void set_modifiers(const char* value, size_t size);
  ::std::string* mutable_modifiers();
  ::std::string* release_modifiers();
  void set_allocated_modifiers(::std::string* modifiers);

  // bool is_entry_point = 5;
  void clear_is_entry_point();
  static const int kIsEntryPointFieldNumber = 5;
  bool is_entry_point() const;
  void set_is_entry_point(bool value);

  // @@protoc_insertion_point(class_scope:proto.ClassAttributeProto)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> interface_class_names_;
  ::google::protobuf::RepeatedPtrField< ::std::string> static_field_strings_;
  ::google::protobuf::RepeatedPtrField< ::std::string> instance_field_strings_;
  ::google::protobuf::RepeatedPtrField< ::std::string> permission_strings_;
  ::google::protobuf::RepeatedPtrField< ::proto::MethodAttributeProto > methods_;
  ::google::protobuf::internal::ArenaStringPtr class_name_;
  ::google::protobuf::internal::ArenaStringPtr super_class_name_;
  ::google::protobuf::internal::ArenaStringPtr package_name_;
  ::google::protobuf::internal::ArenaStringPtr outer_class_name_;
  ::google::protobuf::internal::ArenaStringPtr modifiers_;
  bool is_entry_point_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_class_5fsig_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ClassRelationProto_RelationCounter : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ClassRelationProto.RelationCounter) */ {
 public:
  ClassRelationProto_RelationCounter();
  virtual ~ClassRelationProto_RelationCounter();

  ClassRelationProto_RelationCounter(const ClassRelationProto_RelationCounter& from);

  inline ClassRelationProto_RelationCounter& operator=(const ClassRelationProto_RelationCounter& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ClassRelationProto_RelationCounter(ClassRelationProto_RelationCounter&& from) noexcept
    : ClassRelationProto_RelationCounter() {
    *this = ::std::move(from);
  }

  inline ClassRelationProto_RelationCounter& operator=(ClassRelationProto_RelationCounter&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ClassRelationProto_RelationCounter& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ClassRelationProto_RelationCounter* internal_default_instance() {
    return reinterpret_cast<const ClassRelationProto_RelationCounter*>(
               &_ClassRelationProto_RelationCounter_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(ClassRelationProto_RelationCounter* other);
  friend void swap(ClassRelationProto_RelationCounter& a, ClassRelationProto_RelationCounter& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ClassRelationProto_RelationCounter* New() const final {
    return CreateMaybeMessage<ClassRelationProto_RelationCounter>(NULL);
  }

  ClassRelationProto_RelationCounter* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ClassRelationProto_RelationCounter>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ClassRelationProto_RelationCounter& from);
  void MergeFrom(const ClassRelationProto_RelationCounter& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ClassRelationProto_RelationCounter* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.ClassRelationProto.RelationType relation_type = 1;
  void clear_relation_type();
  static const int kRelationTypeFieldNumber = 1;
  ::proto::ClassRelationProto_RelationType relation_type() const;
  void set_relation_type(::proto::ClassRelationProto_RelationType value);

  // int32 relation_count = 2;
  void clear_relation_count();
  static const int kRelationCountFieldNumber = 2;
  ::google::protobuf::int32 relation_count() const;
  void set_relation_count(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.ClassRelationProto.RelationCounter)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int relation_type_;
  ::google::protobuf::int32 relation_count_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_class_5fsig_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ClassRelationProto : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ClassRelationProto) */ {
 public:
  ClassRelationProto();
  virtual ~ClassRelationProto();

  ClassRelationProto(const ClassRelationProto& from);

  inline ClassRelationProto& operator=(const ClassRelationProto& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ClassRelationProto(ClassRelationProto&& from) noexcept
    : ClassRelationProto() {
    *this = ::std::move(from);
  }

  inline ClassRelationProto& operator=(ClassRelationProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ClassRelationProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ClassRelationProto* internal_default_instance() {
    return reinterpret_cast<const ClassRelationProto*>(
               &_ClassRelationProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(ClassRelationProto* other);
  friend void swap(ClassRelationProto& a, ClassRelationProto& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ClassRelationProto* New() const final {
    return CreateMaybeMessage<ClassRelationProto>(NULL);
  }

  ClassRelationProto* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ClassRelationProto>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ClassRelationProto& from);
  void MergeFrom(const ClassRelationProto& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ClassRelationProto* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef ClassRelationProto_RelationCounter RelationCounter;

  typedef ClassRelationProto_RelationType RelationType;
  static const RelationType INHERITANCE =
    ClassRelationProto_RelationType_INHERITANCE;
  static const RelationType STATIC_ARRAY_FIELD =
    ClassRelationProto_RelationType_STATIC_ARRAY_FIELD;
  static const RelationType STATIC__FIELD =
    ClassRelationProto_RelationType_STATIC__FIELD;
  static const RelationType INSTANCE_ARRAY_FIELD =
    ClassRelationProto_RelationType_INSTANCE_ARRAY_FIELD;
  static const RelationType INSTANCE_FIELD =
    ClassRelationProto_RelationType_INSTANCE_FIELD;
  static const RelationType METHOD_ARRAY_PARAMERTER =
    ClassRelationProto_RelationType_METHOD_ARRAY_PARAMERTER;
  static const RelationType METHOD_PARAMETER =
    ClassRelationProto_RelationType_METHOD_PARAMETER;
  static const RelationType METHOD_ARRAY_RETURN =
    ClassRelationProto_RelationType_METHOD_ARRAY_RETURN;
  static const RelationType METHOD_RETURN =
    ClassRelationProto_RelationType_METHOD_RETURN;
  static const RelationType METHOD_ARRAY_LOCAL =
    ClassRelationProto_RelationType_METHOD_ARRAY_LOCAL;
  static const RelationType METHOD_LOCAL =
    ClassRelationProto_RelationType_METHOD_LOCAL;
  static const RelationType STMT_ARRAY_REF =
    ClassRelationProto_RelationType_STMT_ARRAY_REF;
  static const RelationType STMT_INSTANCE_FIELD_REF =
    ClassRelationProto_RelationType_STMT_INSTANCE_FIELD_REF;
  static const RelationType STMT_STATIC_FIELD_REF =
    ClassRelationProto_RelationType_STMT_STATIC_FIELD_REF;
  static const RelationType STMT_LOCAL_REF =
    ClassRelationProto_RelationType_STMT_LOCAL_REF;
  static const RelationType CAST_EXPR =
    ClassRelationProto_RelationType_CAST_EXPR;
  static const RelationType INSTANCE_OF_EXPR =
    ClassRelationProto_RelationType_INSTANCE_OF_EXPR;
  static const RelationType NEW_EXPR =
    ClassRelationProto_RelationType_NEW_EXPR;
  static const RelationType NEW_ARRAY_EXPR =
    ClassRelationProto_RelationType_NEW_ARRAY_EXPR;
  static const RelationType NEW_MULTI_ARRAY_EXPR =
    ClassRelationProto_RelationType_NEW_MULTI_ARRAY_EXPR;
  static const RelationType INVOKE_EXPR =
    ClassRelationProto_RelationType_INVOKE_EXPR;
  static const RelationType ICC =
    ClassRelationProto_RelationType_ICC;
  static const RelationType IMPL =
    ClassRelationProto_RelationType_IMPL;
  static const RelationType OUTER_CLASS =
    ClassRelationProto_RelationType_OUTER_CLASS;
  static const RelationType ClassRelationNone =
    ClassRelationProto_RelationType_ClassRelationNone;
  static inline bool RelationType_IsValid(int value) {
    return ClassRelationProto_RelationType_IsValid(value);
  }
  static const RelationType RelationType_MIN =
    ClassRelationProto_RelationType_RelationType_MIN;
  static const RelationType RelationType_MAX =
    ClassRelationProto_RelationType_RelationType_MAX;
  static const int RelationType_ARRAYSIZE =
    ClassRelationProto_RelationType_RelationType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  RelationType_descriptor() {
    return ClassRelationProto_RelationType_descriptor();
  }
  static inline const ::std::string& RelationType_Name(RelationType value) {
    return ClassRelationProto_RelationType_Name(value);
  }
  static inline bool RelationType_Parse(const ::std::string& name,
      RelationType* value) {
    return ClassRelationProto_RelationType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .proto.ClassRelationProto.RelationCounter relation_counters = 3;
  int relation_counters_size() const;
  void clear_relation_counters();
  static const int kRelationCountersFieldNumber = 3;
  ::proto::ClassRelationProto_RelationCounter* mutable_relation_counters(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::ClassRelationProto_RelationCounter >*
      mutable_relation_counters();
  const ::proto::ClassRelationProto_RelationCounter& relation_counters(int index) const;
  ::proto::ClassRelationProto_RelationCounter* add_relation_counters();
  const ::google::protobuf::RepeatedPtrField< ::proto::ClassRelationProto_RelationCounter >&
      relation_counters() const;

  // repeated string classname2_permissions = 5;
  int classname2_permissions_size() const;
  void clear_classname2_permissions();
  static const int kClassname2PermissionsFieldNumber = 5;
  const ::std::string& classname2_permissions(int index) const;
  ::std::string* mutable_classname2_permissions(int index);
  void set_classname2_permissions(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_classname2_permissions(int index, ::std::string&& value);
  #endif
  void set_classname2_permissions(int index, const char* value);
  void set_classname2_permissions(int index, const char* value, size_t size);
  ::std::string* add_classname2_permissions();
  void add_classname2_permissions(const ::std::string& value);
  #if LANG_CXX11
  void add_classname2_permissions(::std::string&& value);
  #endif
  void add_classname2_permissions(const char* value);
  void add_classname2_permissions(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& classname2_permissions() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_classname2_permissions();

  // string classname1 = 1;
  void clear_classname1();
  static const int kClassname1FieldNumber = 1;
  const ::std::string& classname1() const;
  void set_classname1(const ::std::string& value);
  #if LANG_CXX11
  void set_classname1(::std::string&& value);
  #endif
  void set_classname1(const char* value);
  void set_classname1(const char* value, size_t size);
  ::std::string* mutable_classname1();
  ::std::string* release_classname1();
  void set_allocated_classname1(::std::string* classname1);

  // string classname2 = 2;
  void clear_classname2();
  static const int kClassname2FieldNumber = 2;
  const ::std::string& classname2() const;
  void set_classname2(const ::std::string& value);
  #if LANG_CXX11
  void set_classname2(::std::string&& value);
  #endif
  void set_classname2(const char* value);
  void set_classname2(const char* value, size_t size);
  ::std::string* mutable_classname2();
  ::std::string* release_classname2();
  void set_allocated_classname2(::std::string* classname2);

  // bool classname2_is_application_class = 4;
  void clear_classname2_is_application_class();
  static const int kClassname2IsApplicationClassFieldNumber = 4;
  bool classname2_is_application_class() const;
  void set_classname2_is_application_class(bool value);

  // @@protoc_insertion_point(class_scope:proto.ClassRelationProto)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::ClassRelationProto_RelationCounter > relation_counters_;
  ::google::protobuf::RepeatedPtrField< ::std::string> classname2_permissions_;
  ::google::protobuf::internal::ArenaStringPtr classname1_;
  ::google::protobuf::internal::ArenaStringPtr classname2_;
  bool classname2_is_application_class_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_class_5fsig_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MethodRelationProto : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.MethodRelationProto) */ {
 public:
  MethodRelationProto();
  virtual ~MethodRelationProto();

  MethodRelationProto(const MethodRelationProto& from);

  inline MethodRelationProto& operator=(const MethodRelationProto& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MethodRelationProto(MethodRelationProto&& from) noexcept
    : MethodRelationProto() {
    *this = ::std::move(from);
  }

  inline MethodRelationProto& operator=(MethodRelationProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MethodRelationProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MethodRelationProto* internal_default_instance() {
    return reinterpret_cast<const MethodRelationProto*>(
               &_MethodRelationProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(MethodRelationProto* other);
  friend void swap(MethodRelationProto& a, MethodRelationProto& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MethodRelationProto* New() const final {
    return CreateMaybeMessage<MethodRelationProto>(NULL);
  }

  MethodRelationProto* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MethodRelationProto>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MethodRelationProto& from);
  void MergeFrom(const MethodRelationProto& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MethodRelationProto* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string methodname1 = 1;
  void clear_methodname1();
  static const int kMethodname1FieldNumber = 1;
  const ::std::string& methodname1() const;
  void set_methodname1(const ::std::string& value);
  #if LANG_CXX11
  void set_methodname1(::std::string&& value);
  #endif
  void set_methodname1(const char* value);
  void set_methodname1(const char* value, size_t size);
  ::std::string* mutable_methodname1();
  ::std::string* release_methodname1();
  void set_allocated_methodname1(::std::string* methodname1);

  // string methodname2 = 2;
  void clear_methodname2();
  static const int kMethodname2FieldNumber = 2;
  const ::std::string& methodname2() const;
  void set_methodname2(const ::std::string& value);
  #if LANG_CXX11
  void set_methodname2(::std::string&& value);
  #endif
  void set_methodname2(const char* value);
  void set_methodname2(const char* value, size_t size);
  ::std::string* mutable_methodname2();
  ::std::string* release_methodname2();
  void set_allocated_methodname2(::std::string* methodname2);

  // @@protoc_insertion_point(class_scope:proto.MethodRelationProto)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr methodname1_;
  ::google::protobuf::internal::ArenaStringPtr methodname2_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_class_5fsig_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ClassMethodRelationProto : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ClassMethodRelationProto) */ {
 public:
  ClassMethodRelationProto();
  virtual ~ClassMethodRelationProto();

  ClassMethodRelationProto(const ClassMethodRelationProto& from);

  inline ClassMethodRelationProto& operator=(const ClassMethodRelationProto& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ClassMethodRelationProto(ClassMethodRelationProto&& from) noexcept
    : ClassMethodRelationProto() {
    *this = ::std::move(from);
  }

  inline ClassMethodRelationProto& operator=(ClassMethodRelationProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ClassMethodRelationProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ClassMethodRelationProto* internal_default_instance() {
    return reinterpret_cast<const ClassMethodRelationProto*>(
               &_ClassMethodRelationProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(ClassMethodRelationProto* other);
  friend void swap(ClassMethodRelationProto& a, ClassMethodRelationProto& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ClassMethodRelationProto* New() const final {
    return CreateMaybeMessage<ClassMethodRelationProto>(NULL);
  }

  ClassMethodRelationProto* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ClassMethodRelationProto>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ClassMethodRelationProto& from);
  void MergeFrom(const ClassMethodRelationProto& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ClassMethodRelationProto* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string classname1 = 1;
  void clear_classname1();
  static const int kClassname1FieldNumber = 1;
  const ::std::string& classname1() const;
  void set_classname1(const ::std::string& value);
  #if LANG_CXX11
  void set_classname1(::std::string&& value);
  #endif
  void set_classname1(const char* value);
  void set_classname1(const char* value, size_t size);
  ::std::string* mutable_classname1();
  ::std::string* release_classname1();
  void set_allocated_classname1(::std::string* classname1);

  // string methodname2 = 2;
  void clear_methodname2();
  static const int kMethodname2FieldNumber = 2;
  const ::std::string& methodname2() const;
  void set_methodname2(const ::std::string& value);
  #if LANG_CXX11
  void set_methodname2(::std::string&& value);
  #endif
  void set_methodname2(const char* value);
  void set_methodname2(const char* value, size_t size);
  ::std::string* mutable_methodname2();
  ::std::string* release_methodname2();
  void set_allocated_methodname2(::std::string* methodname2);

  // @@protoc_insertion_point(class_scope:proto.ClassMethodRelationProto)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr classname1_;
  ::google::protobuf::internal::ArenaStringPtr methodname2_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_class_5fsig_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MethodClassRelationProto : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.MethodClassRelationProto) */ {
 public:
  MethodClassRelationProto();
  virtual ~MethodClassRelationProto();

  MethodClassRelationProto(const MethodClassRelationProto& from);

  inline MethodClassRelationProto& operator=(const MethodClassRelationProto& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MethodClassRelationProto(MethodClassRelationProto&& from) noexcept
    : MethodClassRelationProto() {
    *this = ::std::move(from);
  }

  inline MethodClassRelationProto& operator=(MethodClassRelationProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MethodClassRelationProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MethodClassRelationProto* internal_default_instance() {
    return reinterpret_cast<const MethodClassRelationProto*>(
               &_MethodClassRelationProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(MethodClassRelationProto* other);
  friend void swap(MethodClassRelationProto& a, MethodClassRelationProto& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MethodClassRelationProto* New() const final {
    return CreateMaybeMessage<MethodClassRelationProto>(NULL);
  }

  MethodClassRelationProto* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MethodClassRelationProto>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MethodClassRelationProto& from);
  void MergeFrom(const MethodClassRelationProto& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MethodClassRelationProto* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string methodname1 = 1;
  void clear_methodname1();
  static const int kMethodname1FieldNumber = 1;
  const ::std::string& methodname1() const;
  void set_methodname1(const ::std::string& value);
  #if LANG_CXX11
  void set_methodname1(::std::string&& value);
  #endif
  void set_methodname1(const char* value);
  void set_methodname1(const char* value, size_t size);
  ::std::string* mutable_methodname1();
  ::std::string* release_methodname1();
  void set_allocated_methodname1(::std::string* methodname1);

  // string classname2 = 2;
  void clear_classname2();
  static const int kClassname2FieldNumber = 2;
  const ::std::string& classname2() const;
  void set_classname2(const ::std::string& value);
  #if LANG_CXX11
  void set_classname2(::std::string&& value);
  #endif
  void set_classname2(const char* value);
  void set_classname2(const char* value, size_t size);
  ::std::string* mutable_classname2();
  ::std::string* release_classname2();
  void set_allocated_classname2(::std::string* classname2);

  // @@protoc_insertion_point(class_scope:proto.MethodClassRelationProto)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr methodname1_;
  ::google::protobuf::internal::ArenaStringPtr classname2_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_class_5fsig_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PkgClassMethodResult : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PkgClassMethodResult) */ {
 public:
  PkgClassMethodResult();
  virtual ~PkgClassMethodResult();

  PkgClassMethodResult(const PkgClassMethodResult& from);

  inline PkgClassMethodResult& operator=(const PkgClassMethodResult& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PkgClassMethodResult(PkgClassMethodResult&& from) noexcept
    : PkgClassMethodResult() {
    *this = ::std::move(from);
  }

  inline PkgClassMethodResult& operator=(PkgClassMethodResult&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PkgClassMethodResult& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PkgClassMethodResult* internal_default_instance() {
    return reinterpret_cast<const PkgClassMethodResult*>(
               &_PkgClassMethodResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(PkgClassMethodResult* other);
  friend void swap(PkgClassMethodResult& a, PkgClassMethodResult& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PkgClassMethodResult* New() const final {
    return CreateMaybeMessage<PkgClassMethodResult>(NULL);
  }

  PkgClassMethodResult* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PkgClassMethodResult>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PkgClassMethodResult& from);
  void MergeFrom(const PkgClassMethodResult& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PkgClassMethodResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.ClassAttributeProto classes = 5;
  int classes_size() const;
  void clear_classes();
  static const int kClassesFieldNumber = 5;
  ::proto::ClassAttributeProto* mutable_classes(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::ClassAttributeProto >*
      mutable_classes();
  const ::proto::ClassAttributeProto& classes(int index) const;
  ::proto::ClassAttributeProto* add_classes();
  const ::google::protobuf::RepeatedPtrField< ::proto::ClassAttributeProto >&
      classes() const;

  // repeated .proto.MethodAttributeProto methods = 6;
  int methods_size() const;
  void clear_methods();
  static const int kMethodsFieldNumber = 6;
  ::proto::MethodAttributeProto* mutable_methods(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::MethodAttributeProto >*
      mutable_methods();
  const ::proto::MethodAttributeProto& methods(int index) const;
  ::proto::MethodAttributeProto* add_methods();
  const ::google::protobuf::RepeatedPtrField< ::proto::MethodAttributeProto >&
      methods() const;

  // repeated .proto.ClassRelationProto class_pairs = 7;
  int class_pairs_size() const;
  void clear_class_pairs();
  static const int kClassPairsFieldNumber = 7;
  ::proto::ClassRelationProto* mutable_class_pairs(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::ClassRelationProto >*
      mutable_class_pairs();
  const ::proto::ClassRelationProto& class_pairs(int index) const;
  ::proto::ClassRelationProto* add_class_pairs();
  const ::google::protobuf::RepeatedPtrField< ::proto::ClassRelationProto >&
      class_pairs() const;

  // repeated .proto.MethodRelationProto method_pairs = 8;
  int method_pairs_size() const;
  void clear_method_pairs();
  static const int kMethodPairsFieldNumber = 8;
  ::proto::MethodRelationProto* mutable_method_pairs(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::MethodRelationProto >*
      mutable_method_pairs();
  const ::proto::MethodRelationProto& method_pairs(int index) const;
  ::proto::MethodRelationProto* add_method_pairs();
  const ::google::protobuf::RepeatedPtrField< ::proto::MethodRelationProto >&
      method_pairs() const;

  // repeated .proto.ClassMethodRelationProto class_method_pairs = 9;
  int class_method_pairs_size() const;
  void clear_class_method_pairs();
  static const int kClassMethodPairsFieldNumber = 9;
  ::proto::ClassMethodRelationProto* mutable_class_method_pairs(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::ClassMethodRelationProto >*
      mutable_class_method_pairs();
  const ::proto::ClassMethodRelationProto& class_method_pairs(int index) const;
  ::proto::ClassMethodRelationProto* add_class_method_pairs();
  const ::google::protobuf::RepeatedPtrField< ::proto::ClassMethodRelationProto >&
      class_method_pairs() const;

  // repeated .proto.MethodClassRelationProto method_class_pairs = 10;
  int method_class_pairs_size() const;
  void clear_method_class_pairs();
  static const int kMethodClassPairsFieldNumber = 10;
  ::proto::MethodClassRelationProto* mutable_method_class_pairs(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::MethodClassRelationProto >*
      mutable_method_class_pairs();
  const ::proto::MethodClassRelationProto& method_class_pairs(int index) const;
  ::proto::MethodClassRelationProto* add_method_class_pairs();
  const ::google::protobuf::RepeatedPtrField< ::proto::MethodClassRelationProto >&
      method_class_pairs() const;

  // string pkg_name = 1;
  void clear_pkg_name();
  static const int kPkgNameFieldNumber = 1;
  const ::std::string& pkg_name() const;
  void set_pkg_name(const ::std::string& value);
  #if LANG_CXX11
  void set_pkg_name(::std::string&& value);
  #endif
  void set_pkg_name(const char* value);
  void set_pkg_name(const char* value, size_t size);
  ::std::string* mutable_pkg_name();
  ::std::string* release_pkg_name();
  void set_allocated_pkg_name(::std::string* pkg_name);

  // string pkg_version = 2;
  void clear_pkg_version();
  static const int kPkgVersionFieldNumber = 2;
  const ::std::string& pkg_version() const;
  void set_pkg_version(const ::std::string& value);
  #if LANG_CXX11
  void set_pkg_version(::std::string&& value);
  #endif
  void set_pkg_version(const char* value);
  void set_pkg_version(const char* value, size_t size);
  ::std::string* mutable_pkg_version();
  ::std::string* release_pkg_version();
  void set_allocated_pkg_version(::std::string* pkg_version);

  // string input_path = 4;
  void clear_input_path();
  static const int kInputPathFieldNumber = 4;
  const ::std::string& input_path() const;
  void set_input_path(const ::std::string& value);
  #if LANG_CXX11
  void set_input_path(::std::string&& value);
  #endif
  void set_input_path(const char* value);
  void set_input_path(const char* value, size_t size);
  ::std::string* mutable_input_path();
  ::std::string* release_input_path();
  void set_allocated_input_path(::std::string* input_path);

  // uint64 timestamp = 11;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 11;
  ::google::protobuf::uint64 timestamp() const;
  void set_timestamp(::google::protobuf::uint64 value);

  // .proto.Language language = 3;
  void clear_language();
  static const int kLanguageFieldNumber = 3;
  ::proto::Language language() const;
  void set_language(::proto::Language value);

  // @@protoc_insertion_point(class_scope:proto.PkgClassMethodResult)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::ClassAttributeProto > classes_;
  ::google::protobuf::RepeatedPtrField< ::proto::MethodAttributeProto > methods_;
  ::google::protobuf::RepeatedPtrField< ::proto::ClassRelationProto > class_pairs_;
  ::google::protobuf::RepeatedPtrField< ::proto::MethodRelationProto > method_pairs_;
  ::google::protobuf::RepeatedPtrField< ::proto::ClassMethodRelationProto > class_method_pairs_;
  ::google::protobuf::RepeatedPtrField< ::proto::MethodClassRelationProto > method_class_pairs_;
  ::google::protobuf::internal::ArenaStringPtr pkg_name_;
  ::google::protobuf::internal::ArenaStringPtr pkg_version_;
  ::google::protobuf::internal::ArenaStringPtr input_path_;
  ::google::protobuf::uint64 timestamp_;
  int language_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_class_5fsig_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PkgClassMethodResults : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PkgClassMethodResults) */ {
 public:
  PkgClassMethodResults();
  virtual ~PkgClassMethodResults();

  PkgClassMethodResults(const PkgClassMethodResults& from);

  inline PkgClassMethodResults& operator=(const PkgClassMethodResults& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PkgClassMethodResults(PkgClassMethodResults&& from) noexcept
    : PkgClassMethodResults() {
    *this = ::std::move(from);
  }

  inline PkgClassMethodResults& operator=(PkgClassMethodResults&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PkgClassMethodResults& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PkgClassMethodResults* internal_default_instance() {
    return reinterpret_cast<const PkgClassMethodResults*>(
               &_PkgClassMethodResults_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  void Swap(PkgClassMethodResults* other);
  friend void swap(PkgClassMethodResults& a, PkgClassMethodResults& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PkgClassMethodResults* New() const final {
    return CreateMaybeMessage<PkgClassMethodResults>(NULL);
  }

  PkgClassMethodResults* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PkgClassMethodResults>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PkgClassMethodResults& from);
  void MergeFrom(const PkgClassMethodResults& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PkgClassMethodResults* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.PkgClassMethodResult pkgs = 1;
  int pkgs_size() const;
  void clear_pkgs();
  static const int kPkgsFieldNumber = 1;
  ::proto::PkgClassMethodResult* mutable_pkgs(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::PkgClassMethodResult >*
      mutable_pkgs();
  const ::proto::PkgClassMethodResult& pkgs(int index) const;
  ::proto::PkgClassMethodResult* add_pkgs();
  const ::google::protobuf::RepeatedPtrField< ::proto::PkgClassMethodResult >&
      pkgs() const;

  // uint64 timestamp = 2;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 2;
  ::google::protobuf::uint64 timestamp() const;
  void set_timestamp(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.PkgClassMethodResults)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::PkgClassMethodResult > pkgs_;
  ::google::protobuf::uint64 timestamp_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_class_5fsig_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Centroid

// double x = 1;
inline void Centroid::clear_x() {
  x_ = 0;
}
inline double Centroid::x() const {
  // @@protoc_insertion_point(field_get:proto.Centroid.x)
  return x_;
}
inline void Centroid::set_x(double value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:proto.Centroid.x)
}

// double y = 2;
inline void Centroid::clear_y() {
  y_ = 0;
}
inline double Centroid::y() const {
  // @@protoc_insertion_point(field_get:proto.Centroid.y)
  return y_;
}
inline void Centroid::set_y(double value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:proto.Centroid.y)
}

// double z = 3;
inline void Centroid::clear_z() {
  z_ = 0;
}
inline double Centroid::z() const {
  // @@protoc_insertion_point(field_get:proto.Centroid.z)
  return z_;
}
inline void Centroid::set_z(double value) {
  
  z_ = value;
  // @@protoc_insertion_point(field_set:proto.Centroid.z)
}

// int32 w = 4;
inline void Centroid::clear_w() {
  w_ = 0;
}
inline ::google::protobuf::int32 Centroid::w() const {
  // @@protoc_insertion_point(field_get:proto.Centroid.w)
  return w_;
}
inline void Centroid::set_w(::google::protobuf::int32 value) {
  
  w_ = value;
  // @@protoc_insertion_point(field_set:proto.Centroid.w)
}

// -------------------------------------------------------------------

// BasicBlockProto

// int32 sequence_number = 1;
inline void BasicBlockProto::clear_sequence_number() {
  sequence_number_ = 0;
}
inline ::google::protobuf::int32 BasicBlockProto::sequence_number() const {
  // @@protoc_insertion_point(field_get:proto.BasicBlockProto.sequence_number)
  return sequence_number_;
}
inline void BasicBlockProto::set_sequence_number(::google::protobuf::int32 value) {
  
  sequence_number_ = value;
  // @@protoc_insertion_point(field_set:proto.BasicBlockProto.sequence_number)
}

// int32 in_degree = 2;
inline void BasicBlockProto::clear_in_degree() {
  in_degree_ = 0;
}
inline ::google::protobuf::int32 BasicBlockProto::in_degree() const {
  // @@protoc_insertion_point(field_get:proto.BasicBlockProto.in_degree)
  return in_degree_;
}
inline void BasicBlockProto::set_in_degree(::google::protobuf::int32 value) {
  
  in_degree_ = value;
  // @@protoc_insertion_point(field_set:proto.BasicBlockProto.in_degree)
}

// int32 out_degree = 3;
inline void BasicBlockProto::clear_out_degree() {
  out_degree_ = 0;
}
inline ::google::protobuf::int32 BasicBlockProto::out_degree() const {
  // @@protoc_insertion_point(field_get:proto.BasicBlockProto.out_degree)
  return out_degree_;
}
inline void BasicBlockProto::set_out_degree(::google::protobuf::int32 value) {
  
  out_degree_ = value;
  // @@protoc_insertion_point(field_set:proto.BasicBlockProto.out_degree)
}

// int32 in_degree_unexceptional = 4;
inline void BasicBlockProto::clear_in_degree_unexceptional() {
  in_degree_unexceptional_ = 0;
}
inline ::google::protobuf::int32 BasicBlockProto::in_degree_unexceptional() const {
  // @@protoc_insertion_point(field_get:proto.BasicBlockProto.in_degree_unexceptional)
  return in_degree_unexceptional_;
}
inline void BasicBlockProto::set_in_degree_unexceptional(::google::protobuf::int32 value) {
  
  in_degree_unexceptional_ = value;
  // @@protoc_insertion_point(field_set:proto.BasicBlockProto.in_degree_unexceptional)
}

// int32 out_degree_unexceptional = 5;
inline void BasicBlockProto::clear_out_degree_unexceptional() {
  out_degree_unexceptional_ = 0;
}
inline ::google::protobuf::int32 BasicBlockProto::out_degree_unexceptional() const {
  // @@protoc_insertion_point(field_get:proto.BasicBlockProto.out_degree_unexceptional)
  return out_degree_unexceptional_;
}
inline void BasicBlockProto::set_out_degree_unexceptional(::google::protobuf::int32 value) {
  
  out_degree_unexceptional_ = value;
  // @@protoc_insertion_point(field_set:proto.BasicBlockProto.out_degree_unexceptional)
}

// int32 loop_depth = 6;
inline void BasicBlockProto::clear_loop_depth() {
  loop_depth_ = 0;
}
inline ::google::protobuf::int32 BasicBlockProto::loop_depth() const {
  // @@protoc_insertion_point(field_get:proto.BasicBlockProto.loop_depth)
  return loop_depth_;
}
inline void BasicBlockProto::set_loop_depth(::google::protobuf::int32 value) {
  
  loop_depth_ = value;
  // @@protoc_insertion_point(field_set:proto.BasicBlockProto.loop_depth)
}

// int32 stmt_count = 7;
inline void BasicBlockProto::clear_stmt_count() {
  stmt_count_ = 0;
}
inline ::google::protobuf::int32 BasicBlockProto::stmt_count() const {
  // @@protoc_insertion_point(field_get:proto.BasicBlockProto.stmt_count)
  return stmt_count_;
}
inline void BasicBlockProto::set_stmt_count(::google::protobuf::int32 value) {
  
  stmt_count_ = value;
  // @@protoc_insertion_point(field_set:proto.BasicBlockProto.stmt_count)
}

// repeated string invoked_method_signatures = 8;
inline int BasicBlockProto::invoked_method_signatures_size() const {
  return invoked_method_signatures_.size();
}
inline void BasicBlockProto::clear_invoked_method_signatures() {
  invoked_method_signatures_.Clear();
}
inline const ::std::string& BasicBlockProto::invoked_method_signatures(int index) const {
  // @@protoc_insertion_point(field_get:proto.BasicBlockProto.invoked_method_signatures)
  return invoked_method_signatures_.Get(index);
}
inline ::std::string* BasicBlockProto::mutable_invoked_method_signatures(int index) {
  // @@protoc_insertion_point(field_mutable:proto.BasicBlockProto.invoked_method_signatures)
  return invoked_method_signatures_.Mutable(index);
}
inline void BasicBlockProto::set_invoked_method_signatures(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:proto.BasicBlockProto.invoked_method_signatures)
  invoked_method_signatures_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void BasicBlockProto::set_invoked_method_signatures(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:proto.BasicBlockProto.invoked_method_signatures)
  invoked_method_signatures_.Mutable(index)->assign(std::move(value));
}
#endif
inline void BasicBlockProto::set_invoked_method_signatures(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  invoked_method_signatures_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:proto.BasicBlockProto.invoked_method_signatures)
}
inline void BasicBlockProto::set_invoked_method_signatures(int index, const char* value, size_t size) {
  invoked_method_signatures_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:proto.BasicBlockProto.invoked_method_signatures)
}
inline ::std::string* BasicBlockProto::add_invoked_method_signatures() {
  // @@protoc_insertion_point(field_add_mutable:proto.BasicBlockProto.invoked_method_signatures)
  return invoked_method_signatures_.Add();
}
inline void BasicBlockProto::add_invoked_method_signatures(const ::std::string& value) {
  invoked_method_signatures_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:proto.BasicBlockProto.invoked_method_signatures)
}
#if LANG_CXX11
inline void BasicBlockProto::add_invoked_method_signatures(::std::string&& value) {
  invoked_method_signatures_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:proto.BasicBlockProto.invoked_method_signatures)
}
#endif
inline void BasicBlockProto::add_invoked_method_signatures(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  invoked_method_signatures_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:proto.BasicBlockProto.invoked_method_signatures)
}
inline void BasicBlockProto::add_invoked_method_signatures(const char* value, size_t size) {
  invoked_method_signatures_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:proto.BasicBlockProto.invoked_method_signatures)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
BasicBlockProto::invoked_method_signatures() const {
  // @@protoc_insertion_point(field_list:proto.BasicBlockProto.invoked_method_signatures)
  return invoked_method_signatures_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
BasicBlockProto::mutable_invoked_method_signatures() {
  // @@protoc_insertion_point(field_mutable_list:proto.BasicBlockProto.invoked_method_signatures)
  return &invoked_method_signatures_;
}

// repeated int32 predecessors = 9;
inline int BasicBlockProto::predecessors_size() const {
  return predecessors_.size();
}
inline void BasicBlockProto::clear_predecessors() {
  predecessors_.Clear();
}
inline ::google::protobuf::int32 BasicBlockProto::predecessors(int index) const {
  // @@protoc_insertion_point(field_get:proto.BasicBlockProto.predecessors)
  return predecessors_.Get(index);
}
inline void BasicBlockProto::set_predecessors(int index, ::google::protobuf::int32 value) {
  predecessors_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.BasicBlockProto.predecessors)
}
inline void BasicBlockProto::add_predecessors(::google::protobuf::int32 value) {
  predecessors_.Add(value);
  // @@protoc_insertion_point(field_add:proto.BasicBlockProto.predecessors)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
BasicBlockProto::predecessors() const {
  // @@protoc_insertion_point(field_list:proto.BasicBlockProto.predecessors)
  return predecessors_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
BasicBlockProto::mutable_predecessors() {
  // @@protoc_insertion_point(field_mutable_list:proto.BasicBlockProto.predecessors)
  return &predecessors_;
}

// repeated int32 successors = 10;
inline int BasicBlockProto::successors_size() const {
  return successors_.size();
}
inline void BasicBlockProto::clear_successors() {
  successors_.Clear();
}
inline ::google::protobuf::int32 BasicBlockProto::successors(int index) const {
  // @@protoc_insertion_point(field_get:proto.BasicBlockProto.successors)
  return successors_.Get(index);
}
inline void BasicBlockProto::set_successors(int index, ::google::protobuf::int32 value) {
  successors_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.BasicBlockProto.successors)
}
inline void BasicBlockProto::add_successors(::google::protobuf::int32 value) {
  successors_.Add(value);
  // @@protoc_insertion_point(field_add:proto.BasicBlockProto.successors)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
BasicBlockProto::successors() const {
  // @@protoc_insertion_point(field_list:proto.BasicBlockProto.successors)
  return successors_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
BasicBlockProto::mutable_successors() {
  // @@protoc_insertion_point(field_mutable_list:proto.BasicBlockProto.successors)
  return &successors_;
}

// int32 dominator_sequence_number = 11;
inline void BasicBlockProto::clear_dominator_sequence_number() {
  dominator_sequence_number_ = 0;
}
inline ::google::protobuf::int32 BasicBlockProto::dominator_sequence_number() const {
  // @@protoc_insertion_point(field_get:proto.BasicBlockProto.dominator_sequence_number)
  return dominator_sequence_number_;
}
inline void BasicBlockProto::set_dominator_sequence_number(::google::protobuf::int32 value) {
  
  dominator_sequence_number_ = value;
  // @@protoc_insertion_point(field_set:proto.BasicBlockProto.dominator_sequence_number)
}

// -------------------------------------------------------------------

// MethodAttributeProto

// string class_name = 1;
inline void MethodAttributeProto::clear_class_name() {
  class_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MethodAttributeProto::class_name() const {
  // @@protoc_insertion_point(field_get:proto.MethodAttributeProto.class_name)
  return class_name_.GetNoArena();
}
inline void MethodAttributeProto::set_class_name(const ::std::string& value) {
  
  class_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.MethodAttributeProto.class_name)
}
#if LANG_CXX11
inline void MethodAttributeProto::set_class_name(::std::string&& value) {
  
  class_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.MethodAttributeProto.class_name)
}
#endif
inline void MethodAttributeProto::set_class_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  class_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.MethodAttributeProto.class_name)
}
inline void MethodAttributeProto::set_class_name(const char* value, size_t size) {
  
  class_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.MethodAttributeProto.class_name)
}
inline ::std::string* MethodAttributeProto::mutable_class_name() {
  
  // @@protoc_insertion_point(field_mutable:proto.MethodAttributeProto.class_name)
  return class_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MethodAttributeProto::release_class_name() {
  // @@protoc_insertion_point(field_release:proto.MethodAttributeProto.class_name)
  
  return class_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MethodAttributeProto::set_allocated_class_name(::std::string* class_name) {
  if (class_name != NULL) {
    
  } else {
    
  }
  class_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), class_name);
  // @@protoc_insertion_point(field_set_allocated:proto.MethodAttributeProto.class_name)
}

// string method_name = 2;
inline void MethodAttributeProto::clear_method_name() {
  method_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MethodAttributeProto::method_name() const {
  // @@protoc_insertion_point(field_get:proto.MethodAttributeProto.method_name)
  return method_name_.GetNoArena();
}
inline void MethodAttributeProto::set_method_name(const ::std::string& value) {
  
  method_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.MethodAttributeProto.method_name)
}
#if LANG_CXX11
inline void MethodAttributeProto::set_method_name(::std::string&& value) {
  
  method_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.MethodAttributeProto.method_name)
}
#endif
inline void MethodAttributeProto::set_method_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  method_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.MethodAttributeProto.method_name)
}
inline void MethodAttributeProto::set_method_name(const char* value, size_t size) {
  
  method_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.MethodAttributeProto.method_name)
}
inline ::std::string* MethodAttributeProto::mutable_method_name() {
  
  // @@protoc_insertion_point(field_mutable:proto.MethodAttributeProto.method_name)
  return method_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MethodAttributeProto::release_method_name() {
  // @@protoc_insertion_point(field_release:proto.MethodAttributeProto.method_name)
  
  return method_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MethodAttributeProto::set_allocated_method_name(::std::string* method_name) {
  if (method_name != NULL) {
    
  } else {
    
  }
  method_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), method_name);
  // @@protoc_insertion_point(field_set_allocated:proto.MethodAttributeProto.method_name)
}

// string method_signature = 3;
inline void MethodAttributeProto::clear_method_signature() {
  method_signature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MethodAttributeProto::method_signature() const {
  // @@protoc_insertion_point(field_get:proto.MethodAttributeProto.method_signature)
  return method_signature_.GetNoArena();
}
inline void MethodAttributeProto::set_method_signature(const ::std::string& value) {
  
  method_signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.MethodAttributeProto.method_signature)
}
#if LANG_CXX11
inline void MethodAttributeProto::set_method_signature(::std::string&& value) {
  
  method_signature_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.MethodAttributeProto.method_signature)
}
#endif
inline void MethodAttributeProto::set_method_signature(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  method_signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.MethodAttributeProto.method_signature)
}
inline void MethodAttributeProto::set_method_signature(const char* value, size_t size) {
  
  method_signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.MethodAttributeProto.method_signature)
}
inline ::std::string* MethodAttributeProto::mutable_method_signature() {
  
  // @@protoc_insertion_point(field_mutable:proto.MethodAttributeProto.method_signature)
  return method_signature_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MethodAttributeProto::release_method_signature() {
  // @@protoc_insertion_point(field_release:proto.MethodAttributeProto.method_signature)
  
  return method_signature_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MethodAttributeProto::set_allocated_method_signature(::std::string* method_signature) {
  if (method_signature != NULL) {
    
  } else {
    
  }
  method_signature_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), method_signature);
  // @@protoc_insertion_point(field_set_allocated:proto.MethodAttributeProto.method_signature)
}

// string method_subsignature = 4;
inline void MethodAttributeProto::clear_method_subsignature() {
  method_subsignature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MethodAttributeProto::method_subsignature() const {
  // @@protoc_insertion_point(field_get:proto.MethodAttributeProto.method_subsignature)
  return method_subsignature_.GetNoArena();
}
inline void MethodAttributeProto::set_method_subsignature(const ::std::string& value) {
  
  method_subsignature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.MethodAttributeProto.method_subsignature)
}
#if LANG_CXX11
inline void MethodAttributeProto::set_method_subsignature(::std::string&& value) {
  
  method_subsignature_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.MethodAttributeProto.method_subsignature)
}
#endif
inline void MethodAttributeProto::set_method_subsignature(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  method_subsignature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.MethodAttributeProto.method_subsignature)
}
inline void MethodAttributeProto::set_method_subsignature(const char* value, size_t size) {
  
  method_subsignature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.MethodAttributeProto.method_subsignature)
}
inline ::std::string* MethodAttributeProto::mutable_method_subsignature() {
  
  // @@protoc_insertion_point(field_mutable:proto.MethodAttributeProto.method_subsignature)
  return method_subsignature_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MethodAttributeProto::release_method_subsignature() {
  // @@protoc_insertion_point(field_release:proto.MethodAttributeProto.method_subsignature)
  
  return method_subsignature_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MethodAttributeProto::set_allocated_method_subsignature(::std::string* method_subsignature) {
  if (method_subsignature != NULL) {
    
  } else {
    
  }
  method_subsignature_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), method_subsignature);
  // @@protoc_insertion_point(field_set_allocated:proto.MethodAttributeProto.method_subsignature)
}

// repeated string paramter_types = 5;
inline int MethodAttributeProto::paramter_types_size() const {
  return paramter_types_.size();
}
inline void MethodAttributeProto::clear_paramter_types() {
  paramter_types_.Clear();
}
inline const ::std::string& MethodAttributeProto::paramter_types(int index) const {
  // @@protoc_insertion_point(field_get:proto.MethodAttributeProto.paramter_types)
  return paramter_types_.Get(index);
}
inline ::std::string* MethodAttributeProto::mutable_paramter_types(int index) {
  // @@protoc_insertion_point(field_mutable:proto.MethodAttributeProto.paramter_types)
  return paramter_types_.Mutable(index);
}
inline void MethodAttributeProto::set_paramter_types(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:proto.MethodAttributeProto.paramter_types)
  paramter_types_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void MethodAttributeProto::set_paramter_types(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:proto.MethodAttributeProto.paramter_types)
  paramter_types_.Mutable(index)->assign(std::move(value));
}
#endif
inline void MethodAttributeProto::set_paramter_types(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  paramter_types_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:proto.MethodAttributeProto.paramter_types)
}
inline void MethodAttributeProto::set_paramter_types(int index, const char* value, size_t size) {
  paramter_types_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:proto.MethodAttributeProto.paramter_types)
}
inline ::std::string* MethodAttributeProto::add_paramter_types() {
  // @@protoc_insertion_point(field_add_mutable:proto.MethodAttributeProto.paramter_types)
  return paramter_types_.Add();
}
inline void MethodAttributeProto::add_paramter_types(const ::std::string& value) {
  paramter_types_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:proto.MethodAttributeProto.paramter_types)
}
#if LANG_CXX11
inline void MethodAttributeProto::add_paramter_types(::std::string&& value) {
  paramter_types_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:proto.MethodAttributeProto.paramter_types)
}
#endif
inline void MethodAttributeProto::add_paramter_types(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  paramter_types_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:proto.MethodAttributeProto.paramter_types)
}
inline void MethodAttributeProto::add_paramter_types(const char* value, size_t size) {
  paramter_types_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:proto.MethodAttributeProto.paramter_types)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
MethodAttributeProto::paramter_types() const {
  // @@protoc_insertion_point(field_list:proto.MethodAttributeProto.paramter_types)
  return paramter_types_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
MethodAttributeProto::mutable_paramter_types() {
  // @@protoc_insertion_point(field_mutable_list:proto.MethodAttributeProto.paramter_types)
  return &paramter_types_;
}

// string return_type = 6;
inline void MethodAttributeProto::clear_return_type() {
  return_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MethodAttributeProto::return_type() const {
  // @@protoc_insertion_point(field_get:proto.MethodAttributeProto.return_type)
  return return_type_.GetNoArena();
}
inline void MethodAttributeProto::set_return_type(const ::std::string& value) {
  
  return_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.MethodAttributeProto.return_type)
}
#if LANG_CXX11
inline void MethodAttributeProto::set_return_type(::std::string&& value) {
  
  return_type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.MethodAttributeProto.return_type)
}
#endif
inline void MethodAttributeProto::set_return_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  return_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.MethodAttributeProto.return_type)
}
inline void MethodAttributeProto::set_return_type(const char* value, size_t size) {
  
  return_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.MethodAttributeProto.return_type)
}
inline ::std::string* MethodAttributeProto::mutable_return_type() {
  
  // @@protoc_insertion_point(field_mutable:proto.MethodAttributeProto.return_type)
  return return_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MethodAttributeProto::release_return_type() {
  // @@protoc_insertion_point(field_release:proto.MethodAttributeProto.return_type)
  
  return return_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MethodAttributeProto::set_allocated_return_type(::std::string* return_type) {
  if (return_type != NULL) {
    
  } else {
    
  }
  return_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), return_type);
  // @@protoc_insertion_point(field_set_allocated:proto.MethodAttributeProto.return_type)
}

// repeated string local_types = 7;
inline int MethodAttributeProto::local_types_size() const {
  return local_types_.size();
}
inline void MethodAttributeProto::clear_local_types() {
  local_types_.Clear();
}
inline const ::std::string& MethodAttributeProto::local_types(int index) const {
  // @@protoc_insertion_point(field_get:proto.MethodAttributeProto.local_types)
  return local_types_.Get(index);
}
inline ::std::string* MethodAttributeProto::mutable_local_types(int index) {
  // @@protoc_insertion_point(field_mutable:proto.MethodAttributeProto.local_types)
  return local_types_.Mutable(index);
}
inline void MethodAttributeProto::set_local_types(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:proto.MethodAttributeProto.local_types)
  local_types_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void MethodAttributeProto::set_local_types(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:proto.MethodAttributeProto.local_types)
  local_types_.Mutable(index)->assign(std::move(value));
}
#endif
inline void MethodAttributeProto::set_local_types(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  local_types_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:proto.MethodAttributeProto.local_types)
}
inline void MethodAttributeProto::set_local_types(int index, const char* value, size_t size) {
  local_types_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:proto.MethodAttributeProto.local_types)
}
inline ::std::string* MethodAttributeProto::add_local_types() {
  // @@protoc_insertion_point(field_add_mutable:proto.MethodAttributeProto.local_types)
  return local_types_.Add();
}
inline void MethodAttributeProto::add_local_types(const ::std::string& value) {
  local_types_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:proto.MethodAttributeProto.local_types)
}
#if LANG_CXX11
inline void MethodAttributeProto::add_local_types(::std::string&& value) {
  local_types_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:proto.MethodAttributeProto.local_types)
}
#endif
inline void MethodAttributeProto::add_local_types(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  local_types_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:proto.MethodAttributeProto.local_types)
}
inline void MethodAttributeProto::add_local_types(const char* value, size_t size) {
  local_types_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:proto.MethodAttributeProto.local_types)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
MethodAttributeProto::local_types() const {
  // @@protoc_insertion_point(field_list:proto.MethodAttributeProto.local_types)
  return local_types_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
MethodAttributeProto::mutable_local_types() {
  // @@protoc_insertion_point(field_mutable_list:proto.MethodAttributeProto.local_types)
  return &local_types_;
}

// repeated string string_constants = 8;
inline int MethodAttributeProto::string_constants_size() const {
  return string_constants_.size();
}
inline void MethodAttributeProto::clear_string_constants() {
  string_constants_.Clear();
}
inline const ::std::string& MethodAttributeProto::string_constants(int index) const {
  // @@protoc_insertion_point(field_get:proto.MethodAttributeProto.string_constants)
  return string_constants_.Get(index);
}
inline ::std::string* MethodAttributeProto::mutable_string_constants(int index) {
  // @@protoc_insertion_point(field_mutable:proto.MethodAttributeProto.string_constants)
  return string_constants_.Mutable(index);
}
inline void MethodAttributeProto::set_string_constants(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:proto.MethodAttributeProto.string_constants)
  string_constants_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void MethodAttributeProto::set_string_constants(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:proto.MethodAttributeProto.string_constants)
  string_constants_.Mutable(index)->assign(std::move(value));
}
#endif
inline void MethodAttributeProto::set_string_constants(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  string_constants_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:proto.MethodAttributeProto.string_constants)
}
inline void MethodAttributeProto::set_string_constants(int index, const char* value, size_t size) {
  string_constants_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:proto.MethodAttributeProto.string_constants)
}
inline ::std::string* MethodAttributeProto::add_string_constants() {
  // @@protoc_insertion_point(field_add_mutable:proto.MethodAttributeProto.string_constants)
  return string_constants_.Add();
}
inline void MethodAttributeProto::add_string_constants(const ::std::string& value) {
  string_constants_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:proto.MethodAttributeProto.string_constants)
}
#if LANG_CXX11
inline void MethodAttributeProto::add_string_constants(::std::string&& value) {
  string_constants_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:proto.MethodAttributeProto.string_constants)
}
#endif
inline void MethodAttributeProto::add_string_constants(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  string_constants_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:proto.MethodAttributeProto.string_constants)
}
inline void MethodAttributeProto::add_string_constants(const char* value, size_t size) {
  string_constants_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:proto.MethodAttributeProto.string_constants)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
MethodAttributeProto::string_constants() const {
  // @@protoc_insertion_point(field_list:proto.MethodAttributeProto.string_constants)
  return string_constants_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
MethodAttributeProto::mutable_string_constants() {
  // @@protoc_insertion_point(field_mutable_list:proto.MethodAttributeProto.string_constants)
  return &string_constants_;
}

// repeated string invoked_method_signatures = 9;
inline int MethodAttributeProto::invoked_method_signatures_size() const {
  return invoked_method_signatures_.size();
}
inline void MethodAttributeProto::clear_invoked_method_signatures() {
  invoked_method_signatures_.Clear();
}
inline const ::std::string& MethodAttributeProto::invoked_method_signatures(int index) const {
  // @@protoc_insertion_point(field_get:proto.MethodAttributeProto.invoked_method_signatures)
  return invoked_method_signatures_.Get(index);
}
inline ::std::string* MethodAttributeProto::mutable_invoked_method_signatures(int index) {
  // @@protoc_insertion_point(field_mutable:proto.MethodAttributeProto.invoked_method_signatures)
  return invoked_method_signatures_.Mutable(index);
}
inline void MethodAttributeProto::set_invoked_method_signatures(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:proto.MethodAttributeProto.invoked_method_signatures)
  invoked_method_signatures_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void MethodAttributeProto::set_invoked_method_signatures(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:proto.MethodAttributeProto.invoked_method_signatures)
  invoked_method_signatures_.Mutable(index)->assign(std::move(value));
}
#endif
inline void MethodAttributeProto::set_invoked_method_signatures(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  invoked_method_signatures_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:proto.MethodAttributeProto.invoked_method_signatures)
}
inline void MethodAttributeProto::set_invoked_method_signatures(int index, const char* value, size_t size) {
  invoked_method_signatures_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:proto.MethodAttributeProto.invoked_method_signatures)
}
inline ::std::string* MethodAttributeProto::add_invoked_method_signatures() {
  // @@protoc_insertion_point(field_add_mutable:proto.MethodAttributeProto.invoked_method_signatures)
  return invoked_method_signatures_.Add();
}
inline void MethodAttributeProto::add_invoked_method_signatures(const ::std::string& value) {
  invoked_method_signatures_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:proto.MethodAttributeProto.invoked_method_signatures)
}
#if LANG_CXX11
inline void MethodAttributeProto::add_invoked_method_signatures(::std::string&& value) {
  invoked_method_signatures_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:proto.MethodAttributeProto.invoked_method_signatures)
}
#endif
inline void MethodAttributeProto::add_invoked_method_signatures(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  invoked_method_signatures_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:proto.MethodAttributeProto.invoked_method_signatures)
}
inline void MethodAttributeProto::add_invoked_method_signatures(const char* value, size_t size) {
  invoked_method_signatures_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:proto.MethodAttributeProto.invoked_method_signatures)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
MethodAttributeProto::invoked_method_signatures() const {
  // @@protoc_insertion_point(field_list:proto.MethodAttributeProto.invoked_method_signatures)
  return invoked_method_signatures_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
MethodAttributeProto::mutable_invoked_method_signatures() {
  // @@protoc_insertion_point(field_mutable_list:proto.MethodAttributeProto.invoked_method_signatures)
  return &invoked_method_signatures_;
}

// repeated string resource_refs = 10;
inline int MethodAttributeProto::resource_refs_size() const {
  return resource_refs_.size();
}
inline void MethodAttributeProto::clear_resource_refs() {
  resource_refs_.Clear();
}
inline const ::std::string& MethodAttributeProto::resource_refs(int index) const {
  // @@protoc_insertion_point(field_get:proto.MethodAttributeProto.resource_refs)
  return resource_refs_.Get(index);
}
inline ::std::string* MethodAttributeProto::mutable_resource_refs(int index) {
  // @@protoc_insertion_point(field_mutable:proto.MethodAttributeProto.resource_refs)
  return resource_refs_.Mutable(index);
}
inline void MethodAttributeProto::set_resource_refs(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:proto.MethodAttributeProto.resource_refs)
  resource_refs_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void MethodAttributeProto::set_resource_refs(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:proto.MethodAttributeProto.resource_refs)
  resource_refs_.Mutable(index)->assign(std::move(value));
}
#endif
inline void MethodAttributeProto::set_resource_refs(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  resource_refs_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:proto.MethodAttributeProto.resource_refs)
}
inline void MethodAttributeProto::set_resource_refs(int index, const char* value, size_t size) {
  resource_refs_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:proto.MethodAttributeProto.resource_refs)
}
inline ::std::string* MethodAttributeProto::add_resource_refs() {
  // @@protoc_insertion_point(field_add_mutable:proto.MethodAttributeProto.resource_refs)
  return resource_refs_.Add();
}
inline void MethodAttributeProto::add_resource_refs(const ::std::string& value) {
  resource_refs_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:proto.MethodAttributeProto.resource_refs)
}
#if LANG_CXX11
inline void MethodAttributeProto::add_resource_refs(::std::string&& value) {
  resource_refs_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:proto.MethodAttributeProto.resource_refs)
}
#endif
inline void MethodAttributeProto::add_resource_refs(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  resource_refs_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:proto.MethodAttributeProto.resource_refs)
}
inline void MethodAttributeProto::add_resource_refs(const char* value, size_t size) {
  resource_refs_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:proto.MethodAttributeProto.resource_refs)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
MethodAttributeProto::resource_refs() const {
  // @@protoc_insertion_point(field_list:proto.MethodAttributeProto.resource_refs)
  return resource_refs_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
MethodAttributeProto::mutable_resource_refs() {
  // @@protoc_insertion_point(field_mutable_list:proto.MethodAttributeProto.resource_refs)
  return &resource_refs_;
}

// repeated string statements = 11;
inline int MethodAttributeProto::statements_size() const {
  return statements_.size();
}
inline void MethodAttributeProto::clear_statements() {
  statements_.Clear();
}
inline const ::std::string& MethodAttributeProto::statements(int index) const {
  // @@protoc_insertion_point(field_get:proto.MethodAttributeProto.statements)
  return statements_.Get(index);
}
inline ::std::string* MethodAttributeProto::mutable_statements(int index) {
  // @@protoc_insertion_point(field_mutable:proto.MethodAttributeProto.statements)
  return statements_.Mutable(index);
}
inline void MethodAttributeProto::set_statements(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:proto.MethodAttributeProto.statements)
  statements_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void MethodAttributeProto::set_statements(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:proto.MethodAttributeProto.statements)
  statements_.Mutable(index)->assign(std::move(value));
}
#endif
inline void MethodAttributeProto::set_statements(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  statements_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:proto.MethodAttributeProto.statements)
}
inline void MethodAttributeProto::set_statements(int index, const char* value, size_t size) {
  statements_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:proto.MethodAttributeProto.statements)
}
inline ::std::string* MethodAttributeProto::add_statements() {
  // @@protoc_insertion_point(field_add_mutable:proto.MethodAttributeProto.statements)
  return statements_.Add();
}
inline void MethodAttributeProto::add_statements(const ::std::string& value) {
  statements_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:proto.MethodAttributeProto.statements)
}
#if LANG_CXX11
inline void MethodAttributeProto::add_statements(::std::string&& value) {
  statements_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:proto.MethodAttributeProto.statements)
}
#endif
inline void MethodAttributeProto::add_statements(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  statements_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:proto.MethodAttributeProto.statements)
}
inline void MethodAttributeProto::add_statements(const char* value, size_t size) {
  statements_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:proto.MethodAttributeProto.statements)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
MethodAttributeProto::statements() const {
  // @@protoc_insertion_point(field_list:proto.MethodAttributeProto.statements)
  return statements_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
MethodAttributeProto::mutable_statements() {
  // @@protoc_insertion_point(field_mutable_list:proto.MethodAttributeProto.statements)
  return &statements_;
}

// string modifiers = 12;
inline void MethodAttributeProto::clear_modifiers() {
  modifiers_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MethodAttributeProto::modifiers() const {
  // @@protoc_insertion_point(field_get:proto.MethodAttributeProto.modifiers)
  return modifiers_.GetNoArena();
}
inline void MethodAttributeProto::set_modifiers(const ::std::string& value) {
  
  modifiers_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.MethodAttributeProto.modifiers)
}
#if LANG_CXX11
inline void MethodAttributeProto::set_modifiers(::std::string&& value) {
  
  modifiers_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.MethodAttributeProto.modifiers)
}
#endif
inline void MethodAttributeProto::set_modifiers(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  modifiers_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.MethodAttributeProto.modifiers)
}
inline void MethodAttributeProto::set_modifiers(const char* value, size_t size) {
  
  modifiers_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.MethodAttributeProto.modifiers)
}
inline ::std::string* MethodAttributeProto::mutable_modifiers() {
  
  // @@protoc_insertion_point(field_mutable:proto.MethodAttributeProto.modifiers)
  return modifiers_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MethodAttributeProto::release_modifiers() {
  // @@protoc_insertion_point(field_release:proto.MethodAttributeProto.modifiers)
  
  return modifiers_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MethodAttributeProto::set_allocated_modifiers(::std::string* modifiers) {
  if (modifiers != NULL) {
    
  } else {
    
  }
  modifiers_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), modifiers);
  // @@protoc_insertion_point(field_set_allocated:proto.MethodAttributeProto.modifiers)
}

// .proto.Centroid centroid = 13;
inline bool MethodAttributeProto::has_centroid() const {
  return this != internal_default_instance() && centroid_ != NULL;
}
inline void MethodAttributeProto::clear_centroid() {
  if (GetArenaNoVirtual() == NULL && centroid_ != NULL) {
    delete centroid_;
  }
  centroid_ = NULL;
}
inline const ::proto::Centroid& MethodAttributeProto::_internal_centroid() const {
  return *centroid_;
}
inline const ::proto::Centroid& MethodAttributeProto::centroid() const {
  const ::proto::Centroid* p = centroid_;
  // @@protoc_insertion_point(field_get:proto.MethodAttributeProto.centroid)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Centroid*>(
      &::proto::_Centroid_default_instance_);
}
inline ::proto::Centroid* MethodAttributeProto::release_centroid() {
  // @@protoc_insertion_point(field_release:proto.MethodAttributeProto.centroid)
  
  ::proto::Centroid* temp = centroid_;
  centroid_ = NULL;
  return temp;
}
inline ::proto::Centroid* MethodAttributeProto::mutable_centroid() {
  
  if (centroid_ == NULL) {
    auto* p = CreateMaybeMessage<::proto::Centroid>(GetArenaNoVirtual());
    centroid_ = p;
  }
  // @@protoc_insertion_point(field_mutable:proto.MethodAttributeProto.centroid)
  return centroid_;
}
inline void MethodAttributeProto::set_allocated_centroid(::proto::Centroid* centroid) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete centroid_;
  }
  if (centroid) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      centroid = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, centroid, submessage_arena);
    }
    
  } else {
    
  }
  centroid_ = centroid;
  // @@protoc_insertion_point(field_set_allocated:proto.MethodAttributeProto.centroid)
}

// .proto.Centroid centroid_with_invoke = 14;
inline bool MethodAttributeProto::has_centroid_with_invoke() const {
  return this != internal_default_instance() && centroid_with_invoke_ != NULL;
}
inline void MethodAttributeProto::clear_centroid_with_invoke() {
  if (GetArenaNoVirtual() == NULL && centroid_with_invoke_ != NULL) {
    delete centroid_with_invoke_;
  }
  centroid_with_invoke_ = NULL;
}
inline const ::proto::Centroid& MethodAttributeProto::_internal_centroid_with_invoke() const {
  return *centroid_with_invoke_;
}
inline const ::proto::Centroid& MethodAttributeProto::centroid_with_invoke() const {
  const ::proto::Centroid* p = centroid_with_invoke_;
  // @@protoc_insertion_point(field_get:proto.MethodAttributeProto.centroid_with_invoke)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Centroid*>(
      &::proto::_Centroid_default_instance_);
}
inline ::proto::Centroid* MethodAttributeProto::release_centroid_with_invoke() {
  // @@protoc_insertion_point(field_release:proto.MethodAttributeProto.centroid_with_invoke)
  
  ::proto::Centroid* temp = centroid_with_invoke_;
  centroid_with_invoke_ = NULL;
  return temp;
}
inline ::proto::Centroid* MethodAttributeProto::mutable_centroid_with_invoke() {
  
  if (centroid_with_invoke_ == NULL) {
    auto* p = CreateMaybeMessage<::proto::Centroid>(GetArenaNoVirtual());
    centroid_with_invoke_ = p;
  }
  // @@protoc_insertion_point(field_mutable:proto.MethodAttributeProto.centroid_with_invoke)
  return centroid_with_invoke_;
}
inline void MethodAttributeProto::set_allocated_centroid_with_invoke(::proto::Centroid* centroid_with_invoke) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete centroid_with_invoke_;
  }
  if (centroid_with_invoke) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      centroid_with_invoke = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, centroid_with_invoke, submessage_arena);
    }
    
  } else {
    
  }
  centroid_with_invoke_ = centroid_with_invoke;
  // @@protoc_insertion_point(field_set_allocated:proto.MethodAttributeProto.centroid_with_invoke)
}

// repeated .proto.BasicBlockProto blocks = 15;
inline int MethodAttributeProto::blocks_size() const {
  return blocks_.size();
}
inline void MethodAttributeProto::clear_blocks() {
  blocks_.Clear();
}
inline ::proto::BasicBlockProto* MethodAttributeProto::mutable_blocks(int index) {
  // @@protoc_insertion_point(field_mutable:proto.MethodAttributeProto.blocks)
  return blocks_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::BasicBlockProto >*
MethodAttributeProto::mutable_blocks() {
  // @@protoc_insertion_point(field_mutable_list:proto.MethodAttributeProto.blocks)
  return &blocks_;
}
inline const ::proto::BasicBlockProto& MethodAttributeProto::blocks(int index) const {
  // @@protoc_insertion_point(field_get:proto.MethodAttributeProto.blocks)
  return blocks_.Get(index);
}
inline ::proto::BasicBlockProto* MethodAttributeProto::add_blocks() {
  // @@protoc_insertion_point(field_add:proto.MethodAttributeProto.blocks)
  return blocks_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::BasicBlockProto >&
MethodAttributeProto::blocks() const {
  // @@protoc_insertion_point(field_list:proto.MethodAttributeProto.blocks)
  return blocks_;
}

// -------------------------------------------------------------------

// ClassAttributeProto

// string class_name = 1;
inline void ClassAttributeProto::clear_class_name() {
  class_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ClassAttributeProto::class_name() const {
  // @@protoc_insertion_point(field_get:proto.ClassAttributeProto.class_name)
  return class_name_.GetNoArena();
}
inline void ClassAttributeProto::set_class_name(const ::std::string& value) {
  
  class_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.ClassAttributeProto.class_name)
}
#if LANG_CXX11
inline void ClassAttributeProto::set_class_name(::std::string&& value) {
  
  class_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.ClassAttributeProto.class_name)
}
#endif
inline void ClassAttributeProto::set_class_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  class_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.ClassAttributeProto.class_name)
}
inline void ClassAttributeProto::set_class_name(const char* value, size_t size) {
  
  class_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.ClassAttributeProto.class_name)
}
inline ::std::string* ClassAttributeProto::mutable_class_name() {
  
  // @@protoc_insertion_point(field_mutable:proto.ClassAttributeProto.class_name)
  return class_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClassAttributeProto::release_class_name() {
  // @@protoc_insertion_point(field_release:proto.ClassAttributeProto.class_name)
  
  return class_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClassAttributeProto::set_allocated_class_name(::std::string* class_name) {
  if (class_name != NULL) {
    
  } else {
    
  }
  class_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), class_name);
  // @@protoc_insertion_point(field_set_allocated:proto.ClassAttributeProto.class_name)
}

// string super_class_name = 2;
inline void ClassAttributeProto::clear_super_class_name() {
  super_class_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ClassAttributeProto::super_class_name() const {
  // @@protoc_insertion_point(field_get:proto.ClassAttributeProto.super_class_name)
  return super_class_name_.GetNoArena();
}
inline void ClassAttributeProto::set_super_class_name(const ::std::string& value) {
  
  super_class_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.ClassAttributeProto.super_class_name)
}
#if LANG_CXX11
inline void ClassAttributeProto::set_super_class_name(::std::string&& value) {
  
  super_class_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.ClassAttributeProto.super_class_name)
}
#endif
inline void ClassAttributeProto::set_super_class_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  super_class_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.ClassAttributeProto.super_class_name)
}
inline void ClassAttributeProto::set_super_class_name(const char* value, size_t size) {
  
  super_class_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.ClassAttributeProto.super_class_name)
}
inline ::std::string* ClassAttributeProto::mutable_super_class_name() {
  
  // @@protoc_insertion_point(field_mutable:proto.ClassAttributeProto.super_class_name)
  return super_class_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClassAttributeProto::release_super_class_name() {
  // @@protoc_insertion_point(field_release:proto.ClassAttributeProto.super_class_name)
  
  return super_class_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClassAttributeProto::set_allocated_super_class_name(::std::string* super_class_name) {
  if (super_class_name != NULL) {
    
  } else {
    
  }
  super_class_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), super_class_name);
  // @@protoc_insertion_point(field_set_allocated:proto.ClassAttributeProto.super_class_name)
}

// repeated string interface_class_names = 3;
inline int ClassAttributeProto::interface_class_names_size() const {
  return interface_class_names_.size();
}
inline void ClassAttributeProto::clear_interface_class_names() {
  interface_class_names_.Clear();
}
inline const ::std::string& ClassAttributeProto::interface_class_names(int index) const {
  // @@protoc_insertion_point(field_get:proto.ClassAttributeProto.interface_class_names)
  return interface_class_names_.Get(index);
}
inline ::std::string* ClassAttributeProto::mutable_interface_class_names(int index) {
  // @@protoc_insertion_point(field_mutable:proto.ClassAttributeProto.interface_class_names)
  return interface_class_names_.Mutable(index);
}
inline void ClassAttributeProto::set_interface_class_names(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:proto.ClassAttributeProto.interface_class_names)
  interface_class_names_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void ClassAttributeProto::set_interface_class_names(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:proto.ClassAttributeProto.interface_class_names)
  interface_class_names_.Mutable(index)->assign(std::move(value));
}
#endif
inline void ClassAttributeProto::set_interface_class_names(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  interface_class_names_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:proto.ClassAttributeProto.interface_class_names)
}
inline void ClassAttributeProto::set_interface_class_names(int index, const char* value, size_t size) {
  interface_class_names_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:proto.ClassAttributeProto.interface_class_names)
}
inline ::std::string* ClassAttributeProto::add_interface_class_names() {
  // @@protoc_insertion_point(field_add_mutable:proto.ClassAttributeProto.interface_class_names)
  return interface_class_names_.Add();
}
inline void ClassAttributeProto::add_interface_class_names(const ::std::string& value) {
  interface_class_names_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:proto.ClassAttributeProto.interface_class_names)
}
#if LANG_CXX11
inline void ClassAttributeProto::add_interface_class_names(::std::string&& value) {
  interface_class_names_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:proto.ClassAttributeProto.interface_class_names)
}
#endif
inline void ClassAttributeProto::add_interface_class_names(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  interface_class_names_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:proto.ClassAttributeProto.interface_class_names)
}
inline void ClassAttributeProto::add_interface_class_names(const char* value, size_t size) {
  interface_class_names_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:proto.ClassAttributeProto.interface_class_names)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ClassAttributeProto::interface_class_names() const {
  // @@protoc_insertion_point(field_list:proto.ClassAttributeProto.interface_class_names)
  return interface_class_names_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ClassAttributeProto::mutable_interface_class_names() {
  // @@protoc_insertion_point(field_mutable_list:proto.ClassAttributeProto.interface_class_names)
  return &interface_class_names_;
}

// string package_name = 4;
inline void ClassAttributeProto::clear_package_name() {
  package_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ClassAttributeProto::package_name() const {
  // @@protoc_insertion_point(field_get:proto.ClassAttributeProto.package_name)
  return package_name_.GetNoArena();
}
inline void ClassAttributeProto::set_package_name(const ::std::string& value) {
  
  package_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.ClassAttributeProto.package_name)
}
#if LANG_CXX11
inline void ClassAttributeProto::set_package_name(::std::string&& value) {
  
  package_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.ClassAttributeProto.package_name)
}
#endif
inline void ClassAttributeProto::set_package_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  package_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.ClassAttributeProto.package_name)
}
inline void ClassAttributeProto::set_package_name(const char* value, size_t size) {
  
  package_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.ClassAttributeProto.package_name)
}
inline ::std::string* ClassAttributeProto::mutable_package_name() {
  
  // @@protoc_insertion_point(field_mutable:proto.ClassAttributeProto.package_name)
  return package_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClassAttributeProto::release_package_name() {
  // @@protoc_insertion_point(field_release:proto.ClassAttributeProto.package_name)
  
  return package_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClassAttributeProto::set_allocated_package_name(::std::string* package_name) {
  if (package_name != NULL) {
    
  } else {
    
  }
  package_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), package_name);
  // @@protoc_insertion_point(field_set_allocated:proto.ClassAttributeProto.package_name)
}

// bool is_entry_point = 5;
inline void ClassAttributeProto::clear_is_entry_point() {
  is_entry_point_ = false;
}
inline bool ClassAttributeProto::is_entry_point() const {
  // @@protoc_insertion_point(field_get:proto.ClassAttributeProto.is_entry_point)
  return is_entry_point_;
}
inline void ClassAttributeProto::set_is_entry_point(bool value) {
  
  is_entry_point_ = value;
  // @@protoc_insertion_point(field_set:proto.ClassAttributeProto.is_entry_point)
}

// repeated string static_field_strings = 6;
inline int ClassAttributeProto::static_field_strings_size() const {
  return static_field_strings_.size();
}
inline void ClassAttributeProto::clear_static_field_strings() {
  static_field_strings_.Clear();
}
inline const ::std::string& ClassAttributeProto::static_field_strings(int index) const {
  // @@protoc_insertion_point(field_get:proto.ClassAttributeProto.static_field_strings)
  return static_field_strings_.Get(index);
}
inline ::std::string* ClassAttributeProto::mutable_static_field_strings(int index) {
  // @@protoc_insertion_point(field_mutable:proto.ClassAttributeProto.static_field_strings)
  return static_field_strings_.Mutable(index);
}
inline void ClassAttributeProto::set_static_field_strings(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:proto.ClassAttributeProto.static_field_strings)
  static_field_strings_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void ClassAttributeProto::set_static_field_strings(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:proto.ClassAttributeProto.static_field_strings)
  static_field_strings_.Mutable(index)->assign(std::move(value));
}
#endif
inline void ClassAttributeProto::set_static_field_strings(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  static_field_strings_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:proto.ClassAttributeProto.static_field_strings)
}
inline void ClassAttributeProto::set_static_field_strings(int index, const char* value, size_t size) {
  static_field_strings_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:proto.ClassAttributeProto.static_field_strings)
}
inline ::std::string* ClassAttributeProto::add_static_field_strings() {
  // @@protoc_insertion_point(field_add_mutable:proto.ClassAttributeProto.static_field_strings)
  return static_field_strings_.Add();
}
inline void ClassAttributeProto::add_static_field_strings(const ::std::string& value) {
  static_field_strings_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:proto.ClassAttributeProto.static_field_strings)
}
#if LANG_CXX11
inline void ClassAttributeProto::add_static_field_strings(::std::string&& value) {
  static_field_strings_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:proto.ClassAttributeProto.static_field_strings)
}
#endif
inline void ClassAttributeProto::add_static_field_strings(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  static_field_strings_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:proto.ClassAttributeProto.static_field_strings)
}
inline void ClassAttributeProto::add_static_field_strings(const char* value, size_t size) {
  static_field_strings_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:proto.ClassAttributeProto.static_field_strings)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ClassAttributeProto::static_field_strings() const {
  // @@protoc_insertion_point(field_list:proto.ClassAttributeProto.static_field_strings)
  return static_field_strings_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ClassAttributeProto::mutable_static_field_strings() {
  // @@protoc_insertion_point(field_mutable_list:proto.ClassAttributeProto.static_field_strings)
  return &static_field_strings_;
}

// repeated string instance_field_strings = 7;
inline int ClassAttributeProto::instance_field_strings_size() const {
  return instance_field_strings_.size();
}
inline void ClassAttributeProto::clear_instance_field_strings() {
  instance_field_strings_.Clear();
}
inline const ::std::string& ClassAttributeProto::instance_field_strings(int index) const {
  // @@protoc_insertion_point(field_get:proto.ClassAttributeProto.instance_field_strings)
  return instance_field_strings_.Get(index);
}
inline ::std::string* ClassAttributeProto::mutable_instance_field_strings(int index) {
  // @@protoc_insertion_point(field_mutable:proto.ClassAttributeProto.instance_field_strings)
  return instance_field_strings_.Mutable(index);
}
inline void ClassAttributeProto::set_instance_field_strings(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:proto.ClassAttributeProto.instance_field_strings)
  instance_field_strings_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void ClassAttributeProto::set_instance_field_strings(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:proto.ClassAttributeProto.instance_field_strings)
  instance_field_strings_.Mutable(index)->assign(std::move(value));
}
#endif
inline void ClassAttributeProto::set_instance_field_strings(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  instance_field_strings_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:proto.ClassAttributeProto.instance_field_strings)
}
inline void ClassAttributeProto::set_instance_field_strings(int index, const char* value, size_t size) {
  instance_field_strings_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:proto.ClassAttributeProto.instance_field_strings)
}
inline ::std::string* ClassAttributeProto::add_instance_field_strings() {
  // @@protoc_insertion_point(field_add_mutable:proto.ClassAttributeProto.instance_field_strings)
  return instance_field_strings_.Add();
}
inline void ClassAttributeProto::add_instance_field_strings(const ::std::string& value) {
  instance_field_strings_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:proto.ClassAttributeProto.instance_field_strings)
}
#if LANG_CXX11
inline void ClassAttributeProto::add_instance_field_strings(::std::string&& value) {
  instance_field_strings_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:proto.ClassAttributeProto.instance_field_strings)
}
#endif
inline void ClassAttributeProto::add_instance_field_strings(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  instance_field_strings_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:proto.ClassAttributeProto.instance_field_strings)
}
inline void ClassAttributeProto::add_instance_field_strings(const char* value, size_t size) {
  instance_field_strings_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:proto.ClassAttributeProto.instance_field_strings)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ClassAttributeProto::instance_field_strings() const {
  // @@protoc_insertion_point(field_list:proto.ClassAttributeProto.instance_field_strings)
  return instance_field_strings_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ClassAttributeProto::mutable_instance_field_strings() {
  // @@protoc_insertion_point(field_mutable_list:proto.ClassAttributeProto.instance_field_strings)
  return &instance_field_strings_;
}

// repeated string permission_strings = 8;
inline int ClassAttributeProto::permission_strings_size() const {
  return permission_strings_.size();
}
inline void ClassAttributeProto::clear_permission_strings() {
  permission_strings_.Clear();
}
inline const ::std::string& ClassAttributeProto::permission_strings(int index) const {
  // @@protoc_insertion_point(field_get:proto.ClassAttributeProto.permission_strings)
  return permission_strings_.Get(index);
}
inline ::std::string* ClassAttributeProto::mutable_permission_strings(int index) {
  // @@protoc_insertion_point(field_mutable:proto.ClassAttributeProto.permission_strings)
  return permission_strings_.Mutable(index);
}
inline void ClassAttributeProto::set_permission_strings(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:proto.ClassAttributeProto.permission_strings)
  permission_strings_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void ClassAttributeProto::set_permission_strings(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:proto.ClassAttributeProto.permission_strings)
  permission_strings_.Mutable(index)->assign(std::move(value));
}
#endif
inline void ClassAttributeProto::set_permission_strings(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  permission_strings_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:proto.ClassAttributeProto.permission_strings)
}
inline void ClassAttributeProto::set_permission_strings(int index, const char* value, size_t size) {
  permission_strings_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:proto.ClassAttributeProto.permission_strings)
}
inline ::std::string* ClassAttributeProto::add_permission_strings() {
  // @@protoc_insertion_point(field_add_mutable:proto.ClassAttributeProto.permission_strings)
  return permission_strings_.Add();
}
inline void ClassAttributeProto::add_permission_strings(const ::std::string& value) {
  permission_strings_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:proto.ClassAttributeProto.permission_strings)
}
#if LANG_CXX11
inline void ClassAttributeProto::add_permission_strings(::std::string&& value) {
  permission_strings_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:proto.ClassAttributeProto.permission_strings)
}
#endif
inline void ClassAttributeProto::add_permission_strings(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  permission_strings_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:proto.ClassAttributeProto.permission_strings)
}
inline void ClassAttributeProto::add_permission_strings(const char* value, size_t size) {
  permission_strings_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:proto.ClassAttributeProto.permission_strings)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ClassAttributeProto::permission_strings() const {
  // @@protoc_insertion_point(field_list:proto.ClassAttributeProto.permission_strings)
  return permission_strings_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ClassAttributeProto::mutable_permission_strings() {
  // @@protoc_insertion_point(field_mutable_list:proto.ClassAttributeProto.permission_strings)
  return &permission_strings_;
}

// repeated .proto.MethodAttributeProto methods = 9;
inline int ClassAttributeProto::methods_size() const {
  return methods_.size();
}
inline void ClassAttributeProto::clear_methods() {
  methods_.Clear();
}
inline ::proto::MethodAttributeProto* ClassAttributeProto::mutable_methods(int index) {
  // @@protoc_insertion_point(field_mutable:proto.ClassAttributeProto.methods)
  return methods_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::MethodAttributeProto >*
ClassAttributeProto::mutable_methods() {
  // @@protoc_insertion_point(field_mutable_list:proto.ClassAttributeProto.methods)
  return &methods_;
}
inline const ::proto::MethodAttributeProto& ClassAttributeProto::methods(int index) const {
  // @@protoc_insertion_point(field_get:proto.ClassAttributeProto.methods)
  return methods_.Get(index);
}
inline ::proto::MethodAttributeProto* ClassAttributeProto::add_methods() {
  // @@protoc_insertion_point(field_add:proto.ClassAttributeProto.methods)
  return methods_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::MethodAttributeProto >&
ClassAttributeProto::methods() const {
  // @@protoc_insertion_point(field_list:proto.ClassAttributeProto.methods)
  return methods_;
}

// string outer_class_name = 10;
inline void ClassAttributeProto::clear_outer_class_name() {
  outer_class_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ClassAttributeProto::outer_class_name() const {
  // @@protoc_insertion_point(field_get:proto.ClassAttributeProto.outer_class_name)
  return outer_class_name_.GetNoArena();
}
inline void ClassAttributeProto::set_outer_class_name(const ::std::string& value) {
  
  outer_class_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.ClassAttributeProto.outer_class_name)
}
#if LANG_CXX11
inline void ClassAttributeProto::set_outer_class_name(::std::string&& value) {
  
  outer_class_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.ClassAttributeProto.outer_class_name)
}
#endif
inline void ClassAttributeProto::set_outer_class_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  outer_class_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.ClassAttributeProto.outer_class_name)
}
inline void ClassAttributeProto::set_outer_class_name(const char* value, size_t size) {
  
  outer_class_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.ClassAttributeProto.outer_class_name)
}
inline ::std::string* ClassAttributeProto::mutable_outer_class_name() {
  
  // @@protoc_insertion_point(field_mutable:proto.ClassAttributeProto.outer_class_name)
  return outer_class_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClassAttributeProto::release_outer_class_name() {
  // @@protoc_insertion_point(field_release:proto.ClassAttributeProto.outer_class_name)
  
  return outer_class_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClassAttributeProto::set_allocated_outer_class_name(::std::string* outer_class_name) {
  if (outer_class_name != NULL) {
    
  } else {
    
  }
  outer_class_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), outer_class_name);
  // @@protoc_insertion_point(field_set_allocated:proto.ClassAttributeProto.outer_class_name)
}

// string modifiers = 11;
inline void ClassAttributeProto::clear_modifiers() {
  modifiers_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ClassAttributeProto::modifiers() const {
  // @@protoc_insertion_point(field_get:proto.ClassAttributeProto.modifiers)
  return modifiers_.GetNoArena();
}
inline void ClassAttributeProto::set_modifiers(const ::std::string& value) {
  
  modifiers_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.ClassAttributeProto.modifiers)
}
#if LANG_CXX11
inline void ClassAttributeProto::set_modifiers(::std::string&& value) {
  
  modifiers_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.ClassAttributeProto.modifiers)
}
#endif
inline void ClassAttributeProto::set_modifiers(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  modifiers_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.ClassAttributeProto.modifiers)
}
inline void ClassAttributeProto::set_modifiers(const char* value, size_t size) {
  
  modifiers_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.ClassAttributeProto.modifiers)
}
inline ::std::string* ClassAttributeProto::mutable_modifiers() {
  
  // @@protoc_insertion_point(field_mutable:proto.ClassAttributeProto.modifiers)
  return modifiers_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClassAttributeProto::release_modifiers() {
  // @@protoc_insertion_point(field_release:proto.ClassAttributeProto.modifiers)
  
  return modifiers_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClassAttributeProto::set_allocated_modifiers(::std::string* modifiers) {
  if (modifiers != NULL) {
    
  } else {
    
  }
  modifiers_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), modifiers);
  // @@protoc_insertion_point(field_set_allocated:proto.ClassAttributeProto.modifiers)
}

// -------------------------------------------------------------------

// ClassRelationProto_RelationCounter

// .proto.ClassRelationProto.RelationType relation_type = 1;
inline void ClassRelationProto_RelationCounter::clear_relation_type() {
  relation_type_ = 0;
}
inline ::proto::ClassRelationProto_RelationType ClassRelationProto_RelationCounter::relation_type() const {
  // @@protoc_insertion_point(field_get:proto.ClassRelationProto.RelationCounter.relation_type)
  return static_cast< ::proto::ClassRelationProto_RelationType >(relation_type_);
}
inline void ClassRelationProto_RelationCounter::set_relation_type(::proto::ClassRelationProto_RelationType value) {
  
  relation_type_ = value;
  // @@protoc_insertion_point(field_set:proto.ClassRelationProto.RelationCounter.relation_type)
}

// int32 relation_count = 2;
inline void ClassRelationProto_RelationCounter::clear_relation_count() {
  relation_count_ = 0;
}
inline ::google::protobuf::int32 ClassRelationProto_RelationCounter::relation_count() const {
  // @@protoc_insertion_point(field_get:proto.ClassRelationProto.RelationCounter.relation_count)
  return relation_count_;
}
inline void ClassRelationProto_RelationCounter::set_relation_count(::google::protobuf::int32 value) {
  
  relation_count_ = value;
  // @@protoc_insertion_point(field_set:proto.ClassRelationProto.RelationCounter.relation_count)
}

// -------------------------------------------------------------------

// ClassRelationProto

// string classname1 = 1;
inline void ClassRelationProto::clear_classname1() {
  classname1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ClassRelationProto::classname1() const {
  // @@protoc_insertion_point(field_get:proto.ClassRelationProto.classname1)
  return classname1_.GetNoArena();
}
inline void ClassRelationProto::set_classname1(const ::std::string& value) {
  
  classname1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.ClassRelationProto.classname1)
}
#if LANG_CXX11
inline void ClassRelationProto::set_classname1(::std::string&& value) {
  
  classname1_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.ClassRelationProto.classname1)
}
#endif
inline void ClassRelationProto::set_classname1(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  classname1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.ClassRelationProto.classname1)
}
inline void ClassRelationProto::set_classname1(const char* value, size_t size) {
  
  classname1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.ClassRelationProto.classname1)
}
inline ::std::string* ClassRelationProto::mutable_classname1() {
  
  // @@protoc_insertion_point(field_mutable:proto.ClassRelationProto.classname1)
  return classname1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClassRelationProto::release_classname1() {
  // @@protoc_insertion_point(field_release:proto.ClassRelationProto.classname1)
  
  return classname1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClassRelationProto::set_allocated_classname1(::std::string* classname1) {
  if (classname1 != NULL) {
    
  } else {
    
  }
  classname1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), classname1);
  // @@protoc_insertion_point(field_set_allocated:proto.ClassRelationProto.classname1)
}

// string classname2 = 2;
inline void ClassRelationProto::clear_classname2() {
  classname2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ClassRelationProto::classname2() const {
  // @@protoc_insertion_point(field_get:proto.ClassRelationProto.classname2)
  return classname2_.GetNoArena();
}
inline void ClassRelationProto::set_classname2(const ::std::string& value) {
  
  classname2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.ClassRelationProto.classname2)
}
#if LANG_CXX11
inline void ClassRelationProto::set_classname2(::std::string&& value) {
  
  classname2_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.ClassRelationProto.classname2)
}
#endif
inline void ClassRelationProto::set_classname2(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  classname2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.ClassRelationProto.classname2)
}
inline void ClassRelationProto::set_classname2(const char* value, size_t size) {
  
  classname2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.ClassRelationProto.classname2)
}
inline ::std::string* ClassRelationProto::mutable_classname2() {
  
  // @@protoc_insertion_point(field_mutable:proto.ClassRelationProto.classname2)
  return classname2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClassRelationProto::release_classname2() {
  // @@protoc_insertion_point(field_release:proto.ClassRelationProto.classname2)
  
  return classname2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClassRelationProto::set_allocated_classname2(::std::string* classname2) {
  if (classname2 != NULL) {
    
  } else {
    
  }
  classname2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), classname2);
  // @@protoc_insertion_point(field_set_allocated:proto.ClassRelationProto.classname2)
}

// repeated .proto.ClassRelationProto.RelationCounter relation_counters = 3;
inline int ClassRelationProto::relation_counters_size() const {
  return relation_counters_.size();
}
inline void ClassRelationProto::clear_relation_counters() {
  relation_counters_.Clear();
}
inline ::proto::ClassRelationProto_RelationCounter* ClassRelationProto::mutable_relation_counters(int index) {
  // @@protoc_insertion_point(field_mutable:proto.ClassRelationProto.relation_counters)
  return relation_counters_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::ClassRelationProto_RelationCounter >*
ClassRelationProto::mutable_relation_counters() {
  // @@protoc_insertion_point(field_mutable_list:proto.ClassRelationProto.relation_counters)
  return &relation_counters_;
}
inline const ::proto::ClassRelationProto_RelationCounter& ClassRelationProto::relation_counters(int index) const {
  // @@protoc_insertion_point(field_get:proto.ClassRelationProto.relation_counters)
  return relation_counters_.Get(index);
}
inline ::proto::ClassRelationProto_RelationCounter* ClassRelationProto::add_relation_counters() {
  // @@protoc_insertion_point(field_add:proto.ClassRelationProto.relation_counters)
  return relation_counters_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::ClassRelationProto_RelationCounter >&
ClassRelationProto::relation_counters() const {
  // @@protoc_insertion_point(field_list:proto.ClassRelationProto.relation_counters)
  return relation_counters_;
}

// bool classname2_is_application_class = 4;
inline void ClassRelationProto::clear_classname2_is_application_class() {
  classname2_is_application_class_ = false;
}
inline bool ClassRelationProto::classname2_is_application_class() const {
  // @@protoc_insertion_point(field_get:proto.ClassRelationProto.classname2_is_application_class)
  return classname2_is_application_class_;
}
inline void ClassRelationProto::set_classname2_is_application_class(bool value) {
  
  classname2_is_application_class_ = value;
  // @@protoc_insertion_point(field_set:proto.ClassRelationProto.classname2_is_application_class)
}

// repeated string classname2_permissions = 5;
inline int ClassRelationProto::classname2_permissions_size() const {
  return classname2_permissions_.size();
}
inline void ClassRelationProto::clear_classname2_permissions() {
  classname2_permissions_.Clear();
}
inline const ::std::string& ClassRelationProto::classname2_permissions(int index) const {
  // @@protoc_insertion_point(field_get:proto.ClassRelationProto.classname2_permissions)
  return classname2_permissions_.Get(index);
}
inline ::std::string* ClassRelationProto::mutable_classname2_permissions(int index) {
  // @@protoc_insertion_point(field_mutable:proto.ClassRelationProto.classname2_permissions)
  return classname2_permissions_.Mutable(index);
}
inline void ClassRelationProto::set_classname2_permissions(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:proto.ClassRelationProto.classname2_permissions)
  classname2_permissions_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void ClassRelationProto::set_classname2_permissions(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:proto.ClassRelationProto.classname2_permissions)
  classname2_permissions_.Mutable(index)->assign(std::move(value));
}
#endif
inline void ClassRelationProto::set_classname2_permissions(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  classname2_permissions_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:proto.ClassRelationProto.classname2_permissions)
}
inline void ClassRelationProto::set_classname2_permissions(int index, const char* value, size_t size) {
  classname2_permissions_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:proto.ClassRelationProto.classname2_permissions)
}
inline ::std::string* ClassRelationProto::add_classname2_permissions() {
  // @@protoc_insertion_point(field_add_mutable:proto.ClassRelationProto.classname2_permissions)
  return classname2_permissions_.Add();
}
inline void ClassRelationProto::add_classname2_permissions(const ::std::string& value) {
  classname2_permissions_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:proto.ClassRelationProto.classname2_permissions)
}
#if LANG_CXX11
inline void ClassRelationProto::add_classname2_permissions(::std::string&& value) {
  classname2_permissions_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:proto.ClassRelationProto.classname2_permissions)
}
#endif
inline void ClassRelationProto::add_classname2_permissions(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  classname2_permissions_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:proto.ClassRelationProto.classname2_permissions)
}
inline void ClassRelationProto::add_classname2_permissions(const char* value, size_t size) {
  classname2_permissions_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:proto.ClassRelationProto.classname2_permissions)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ClassRelationProto::classname2_permissions() const {
  // @@protoc_insertion_point(field_list:proto.ClassRelationProto.classname2_permissions)
  return classname2_permissions_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ClassRelationProto::mutable_classname2_permissions() {
  // @@protoc_insertion_point(field_mutable_list:proto.ClassRelationProto.classname2_permissions)
  return &classname2_permissions_;
}

// -------------------------------------------------------------------

// MethodRelationProto

// string methodname1 = 1;
inline void MethodRelationProto::clear_methodname1() {
  methodname1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MethodRelationProto::methodname1() const {
  // @@protoc_insertion_point(field_get:proto.MethodRelationProto.methodname1)
  return methodname1_.GetNoArena();
}
inline void MethodRelationProto::set_methodname1(const ::std::string& value) {
  
  methodname1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.MethodRelationProto.methodname1)
}
#if LANG_CXX11
inline void MethodRelationProto::set_methodname1(::std::string&& value) {
  
  methodname1_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.MethodRelationProto.methodname1)
}
#endif
inline void MethodRelationProto::set_methodname1(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  methodname1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.MethodRelationProto.methodname1)
}
inline void MethodRelationProto::set_methodname1(const char* value, size_t size) {
  
  methodname1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.MethodRelationProto.methodname1)
}
inline ::std::string* MethodRelationProto::mutable_methodname1() {
  
  // @@protoc_insertion_point(field_mutable:proto.MethodRelationProto.methodname1)
  return methodname1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MethodRelationProto::release_methodname1() {
  // @@protoc_insertion_point(field_release:proto.MethodRelationProto.methodname1)
  
  return methodname1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MethodRelationProto::set_allocated_methodname1(::std::string* methodname1) {
  if (methodname1 != NULL) {
    
  } else {
    
  }
  methodname1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), methodname1);
  // @@protoc_insertion_point(field_set_allocated:proto.MethodRelationProto.methodname1)
}

// string methodname2 = 2;
inline void MethodRelationProto::clear_methodname2() {
  methodname2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MethodRelationProto::methodname2() const {
  // @@protoc_insertion_point(field_get:proto.MethodRelationProto.methodname2)
  return methodname2_.GetNoArena();
}
inline void MethodRelationProto::set_methodname2(const ::std::string& value) {
  
  methodname2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.MethodRelationProto.methodname2)
}
#if LANG_CXX11
inline void MethodRelationProto::set_methodname2(::std::string&& value) {
  
  methodname2_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.MethodRelationProto.methodname2)
}
#endif
inline void MethodRelationProto::set_methodname2(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  methodname2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.MethodRelationProto.methodname2)
}
inline void MethodRelationProto::set_methodname2(const char* value, size_t size) {
  
  methodname2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.MethodRelationProto.methodname2)
}
inline ::std::string* MethodRelationProto::mutable_methodname2() {
  
  // @@protoc_insertion_point(field_mutable:proto.MethodRelationProto.methodname2)
  return methodname2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MethodRelationProto::release_methodname2() {
  // @@protoc_insertion_point(field_release:proto.MethodRelationProto.methodname2)
  
  return methodname2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MethodRelationProto::set_allocated_methodname2(::std::string* methodname2) {
  if (methodname2 != NULL) {
    
  } else {
    
  }
  methodname2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), methodname2);
  // @@protoc_insertion_point(field_set_allocated:proto.MethodRelationProto.methodname2)
}

// -------------------------------------------------------------------

// ClassMethodRelationProto

// string classname1 = 1;
inline void ClassMethodRelationProto::clear_classname1() {
  classname1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ClassMethodRelationProto::classname1() const {
  // @@protoc_insertion_point(field_get:proto.ClassMethodRelationProto.classname1)
  return classname1_.GetNoArena();
}
inline void ClassMethodRelationProto::set_classname1(const ::std::string& value) {
  
  classname1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.ClassMethodRelationProto.classname1)
}
#if LANG_CXX11
inline void ClassMethodRelationProto::set_classname1(::std::string&& value) {
  
  classname1_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.ClassMethodRelationProto.classname1)
}
#endif
inline void ClassMethodRelationProto::set_classname1(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  classname1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.ClassMethodRelationProto.classname1)
}
inline void ClassMethodRelationProto::set_classname1(const char* value, size_t size) {
  
  classname1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.ClassMethodRelationProto.classname1)
}
inline ::std::string* ClassMethodRelationProto::mutable_classname1() {
  
  // @@protoc_insertion_point(field_mutable:proto.ClassMethodRelationProto.classname1)
  return classname1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClassMethodRelationProto::release_classname1() {
  // @@protoc_insertion_point(field_release:proto.ClassMethodRelationProto.classname1)
  
  return classname1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClassMethodRelationProto::set_allocated_classname1(::std::string* classname1) {
  if (classname1 != NULL) {
    
  } else {
    
  }
  classname1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), classname1);
  // @@protoc_insertion_point(field_set_allocated:proto.ClassMethodRelationProto.classname1)
}

// string methodname2 = 2;
inline void ClassMethodRelationProto::clear_methodname2() {
  methodname2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ClassMethodRelationProto::methodname2() const {
  // @@protoc_insertion_point(field_get:proto.ClassMethodRelationProto.methodname2)
  return methodname2_.GetNoArena();
}
inline void ClassMethodRelationProto::set_methodname2(const ::std::string& value) {
  
  methodname2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.ClassMethodRelationProto.methodname2)
}
#if LANG_CXX11
inline void ClassMethodRelationProto::set_methodname2(::std::string&& value) {
  
  methodname2_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.ClassMethodRelationProto.methodname2)
}
#endif
inline void ClassMethodRelationProto::set_methodname2(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  methodname2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.ClassMethodRelationProto.methodname2)
}
inline void ClassMethodRelationProto::set_methodname2(const char* value, size_t size) {
  
  methodname2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.ClassMethodRelationProto.methodname2)
}
inline ::std::string* ClassMethodRelationProto::mutable_methodname2() {
  
  // @@protoc_insertion_point(field_mutable:proto.ClassMethodRelationProto.methodname2)
  return methodname2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClassMethodRelationProto::release_methodname2() {
  // @@protoc_insertion_point(field_release:proto.ClassMethodRelationProto.methodname2)
  
  return methodname2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClassMethodRelationProto::set_allocated_methodname2(::std::string* methodname2) {
  if (methodname2 != NULL) {
    
  } else {
    
  }
  methodname2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), methodname2);
  // @@protoc_insertion_point(field_set_allocated:proto.ClassMethodRelationProto.methodname2)
}

// -------------------------------------------------------------------

// MethodClassRelationProto

// string methodname1 = 1;
inline void MethodClassRelationProto::clear_methodname1() {
  methodname1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MethodClassRelationProto::methodname1() const {
  // @@protoc_insertion_point(field_get:proto.MethodClassRelationProto.methodname1)
  return methodname1_.GetNoArena();
}
inline void MethodClassRelationProto::set_methodname1(const ::std::string& value) {
  
  methodname1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.MethodClassRelationProto.methodname1)
}
#if LANG_CXX11
inline void MethodClassRelationProto::set_methodname1(::std::string&& value) {
  
  methodname1_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.MethodClassRelationProto.methodname1)
}
#endif
inline void MethodClassRelationProto::set_methodname1(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  methodname1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.MethodClassRelationProto.methodname1)
}
inline void MethodClassRelationProto::set_methodname1(const char* value, size_t size) {
  
  methodname1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.MethodClassRelationProto.methodname1)
}
inline ::std::string* MethodClassRelationProto::mutable_methodname1() {
  
  // @@protoc_insertion_point(field_mutable:proto.MethodClassRelationProto.methodname1)
  return methodname1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MethodClassRelationProto::release_methodname1() {
  // @@protoc_insertion_point(field_release:proto.MethodClassRelationProto.methodname1)
  
  return methodname1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MethodClassRelationProto::set_allocated_methodname1(::std::string* methodname1) {
  if (methodname1 != NULL) {
    
  } else {
    
  }
  methodname1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), methodname1);
  // @@protoc_insertion_point(field_set_allocated:proto.MethodClassRelationProto.methodname1)
}

// string classname2 = 2;
inline void MethodClassRelationProto::clear_classname2() {
  classname2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MethodClassRelationProto::classname2() const {
  // @@protoc_insertion_point(field_get:proto.MethodClassRelationProto.classname2)
  return classname2_.GetNoArena();
}
inline void MethodClassRelationProto::set_classname2(const ::std::string& value) {
  
  classname2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.MethodClassRelationProto.classname2)
}
#if LANG_CXX11
inline void MethodClassRelationProto::set_classname2(::std::string&& value) {
  
  classname2_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.MethodClassRelationProto.classname2)
}
#endif
inline void MethodClassRelationProto::set_classname2(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  classname2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.MethodClassRelationProto.classname2)
}
inline void MethodClassRelationProto::set_classname2(const char* value, size_t size) {
  
  classname2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.MethodClassRelationProto.classname2)
}
inline ::std::string* MethodClassRelationProto::mutable_classname2() {
  
  // @@protoc_insertion_point(field_mutable:proto.MethodClassRelationProto.classname2)
  return classname2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MethodClassRelationProto::release_classname2() {
  // @@protoc_insertion_point(field_release:proto.MethodClassRelationProto.classname2)
  
  return classname2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MethodClassRelationProto::set_allocated_classname2(::std::string* classname2) {
  if (classname2 != NULL) {
    
  } else {
    
  }
  classname2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), classname2);
  // @@protoc_insertion_point(field_set_allocated:proto.MethodClassRelationProto.classname2)
}

// -------------------------------------------------------------------

// PkgClassMethodResult

// string pkg_name = 1;
inline void PkgClassMethodResult::clear_pkg_name() {
  pkg_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PkgClassMethodResult::pkg_name() const {
  // @@protoc_insertion_point(field_get:proto.PkgClassMethodResult.pkg_name)
  return pkg_name_.GetNoArena();
}
inline void PkgClassMethodResult::set_pkg_name(const ::std::string& value) {
  
  pkg_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.PkgClassMethodResult.pkg_name)
}
#if LANG_CXX11
inline void PkgClassMethodResult::set_pkg_name(::std::string&& value) {
  
  pkg_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.PkgClassMethodResult.pkg_name)
}
#endif
inline void PkgClassMethodResult::set_pkg_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  pkg_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.PkgClassMethodResult.pkg_name)
}
inline void PkgClassMethodResult::set_pkg_name(const char* value, size_t size) {
  
  pkg_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.PkgClassMethodResult.pkg_name)
}
inline ::std::string* PkgClassMethodResult::mutable_pkg_name() {
  
  // @@protoc_insertion_point(field_mutable:proto.PkgClassMethodResult.pkg_name)
  return pkg_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgClassMethodResult::release_pkg_name() {
  // @@protoc_insertion_point(field_release:proto.PkgClassMethodResult.pkg_name)
  
  return pkg_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgClassMethodResult::set_allocated_pkg_name(::std::string* pkg_name) {
  if (pkg_name != NULL) {
    
  } else {
    
  }
  pkg_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pkg_name);
  // @@protoc_insertion_point(field_set_allocated:proto.PkgClassMethodResult.pkg_name)
}

// string pkg_version = 2;
inline void PkgClassMethodResult::clear_pkg_version() {
  pkg_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PkgClassMethodResult::pkg_version() const {
  // @@protoc_insertion_point(field_get:proto.PkgClassMethodResult.pkg_version)
  return pkg_version_.GetNoArena();
}
inline void PkgClassMethodResult::set_pkg_version(const ::std::string& value) {
  
  pkg_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.PkgClassMethodResult.pkg_version)
}
#if LANG_CXX11
inline void PkgClassMethodResult::set_pkg_version(::std::string&& value) {
  
  pkg_version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.PkgClassMethodResult.pkg_version)
}
#endif
inline void PkgClassMethodResult::set_pkg_version(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  pkg_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.PkgClassMethodResult.pkg_version)
}
inline void PkgClassMethodResult::set_pkg_version(const char* value, size_t size) {
  
  pkg_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.PkgClassMethodResult.pkg_version)
}
inline ::std::string* PkgClassMethodResult::mutable_pkg_version() {
  
  // @@protoc_insertion_point(field_mutable:proto.PkgClassMethodResult.pkg_version)
  return pkg_version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgClassMethodResult::release_pkg_version() {
  // @@protoc_insertion_point(field_release:proto.PkgClassMethodResult.pkg_version)
  
  return pkg_version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgClassMethodResult::set_allocated_pkg_version(::std::string* pkg_version) {
  if (pkg_version != NULL) {
    
  } else {
    
  }
  pkg_version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pkg_version);
  // @@protoc_insertion_point(field_set_allocated:proto.PkgClassMethodResult.pkg_version)
}

// .proto.Language language = 3;
inline void PkgClassMethodResult::clear_language() {
  language_ = 0;
}
inline ::proto::Language PkgClassMethodResult::language() const {
  // @@protoc_insertion_point(field_get:proto.PkgClassMethodResult.language)
  return static_cast< ::proto::Language >(language_);
}
inline void PkgClassMethodResult::set_language(::proto::Language value) {
  
  language_ = value;
  // @@protoc_insertion_point(field_set:proto.PkgClassMethodResult.language)
}

// string input_path = 4;
inline void PkgClassMethodResult::clear_input_path() {
  input_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PkgClassMethodResult::input_path() const {
  // @@protoc_insertion_point(field_get:proto.PkgClassMethodResult.input_path)
  return input_path_.GetNoArena();
}
inline void PkgClassMethodResult::set_input_path(const ::std::string& value) {
  
  input_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.PkgClassMethodResult.input_path)
}
#if LANG_CXX11
inline void PkgClassMethodResult::set_input_path(::std::string&& value) {
  
  input_path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.PkgClassMethodResult.input_path)
}
#endif
inline void PkgClassMethodResult::set_input_path(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  input_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.PkgClassMethodResult.input_path)
}
inline void PkgClassMethodResult::set_input_path(const char* value, size_t size) {
  
  input_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.PkgClassMethodResult.input_path)
}
inline ::std::string* PkgClassMethodResult::mutable_input_path() {
  
  // @@protoc_insertion_point(field_mutable:proto.PkgClassMethodResult.input_path)
  return input_path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgClassMethodResult::release_input_path() {
  // @@protoc_insertion_point(field_release:proto.PkgClassMethodResult.input_path)
  
  return input_path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgClassMethodResult::set_allocated_input_path(::std::string* input_path) {
  if (input_path != NULL) {
    
  } else {
    
  }
  input_path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), input_path);
  // @@protoc_insertion_point(field_set_allocated:proto.PkgClassMethodResult.input_path)
}

// repeated .proto.ClassAttributeProto classes = 5;
inline int PkgClassMethodResult::classes_size() const {
  return classes_.size();
}
inline void PkgClassMethodResult::clear_classes() {
  classes_.Clear();
}
inline ::proto::ClassAttributeProto* PkgClassMethodResult::mutable_classes(int index) {
  // @@protoc_insertion_point(field_mutable:proto.PkgClassMethodResult.classes)
  return classes_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::ClassAttributeProto >*
PkgClassMethodResult::mutable_classes() {
  // @@protoc_insertion_point(field_mutable_list:proto.PkgClassMethodResult.classes)
  return &classes_;
}
inline const ::proto::ClassAttributeProto& PkgClassMethodResult::classes(int index) const {
  // @@protoc_insertion_point(field_get:proto.PkgClassMethodResult.classes)
  return classes_.Get(index);
}
inline ::proto::ClassAttributeProto* PkgClassMethodResult::add_classes() {
  // @@protoc_insertion_point(field_add:proto.PkgClassMethodResult.classes)
  return classes_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::ClassAttributeProto >&
PkgClassMethodResult::classes() const {
  // @@protoc_insertion_point(field_list:proto.PkgClassMethodResult.classes)
  return classes_;
}

// repeated .proto.MethodAttributeProto methods = 6;
inline int PkgClassMethodResult::methods_size() const {
  return methods_.size();
}
inline void PkgClassMethodResult::clear_methods() {
  methods_.Clear();
}
inline ::proto::MethodAttributeProto* PkgClassMethodResult::mutable_methods(int index) {
  // @@protoc_insertion_point(field_mutable:proto.PkgClassMethodResult.methods)
  return methods_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::MethodAttributeProto >*
PkgClassMethodResult::mutable_methods() {
  // @@protoc_insertion_point(field_mutable_list:proto.PkgClassMethodResult.methods)
  return &methods_;
}
inline const ::proto::MethodAttributeProto& PkgClassMethodResult::methods(int index) const {
  // @@protoc_insertion_point(field_get:proto.PkgClassMethodResult.methods)
  return methods_.Get(index);
}
inline ::proto::MethodAttributeProto* PkgClassMethodResult::add_methods() {
  // @@protoc_insertion_point(field_add:proto.PkgClassMethodResult.methods)
  return methods_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::MethodAttributeProto >&
PkgClassMethodResult::methods() const {
  // @@protoc_insertion_point(field_list:proto.PkgClassMethodResult.methods)
  return methods_;
}

// repeated .proto.ClassRelationProto class_pairs = 7;
inline int PkgClassMethodResult::class_pairs_size() const {
  return class_pairs_.size();
}
inline void PkgClassMethodResult::clear_class_pairs() {
  class_pairs_.Clear();
}
inline ::proto::ClassRelationProto* PkgClassMethodResult::mutable_class_pairs(int index) {
  // @@protoc_insertion_point(field_mutable:proto.PkgClassMethodResult.class_pairs)
  return class_pairs_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::ClassRelationProto >*
PkgClassMethodResult::mutable_class_pairs() {
  // @@protoc_insertion_point(field_mutable_list:proto.PkgClassMethodResult.class_pairs)
  return &class_pairs_;
}
inline const ::proto::ClassRelationProto& PkgClassMethodResult::class_pairs(int index) const {
  // @@protoc_insertion_point(field_get:proto.PkgClassMethodResult.class_pairs)
  return class_pairs_.Get(index);
}
inline ::proto::ClassRelationProto* PkgClassMethodResult::add_class_pairs() {
  // @@protoc_insertion_point(field_add:proto.PkgClassMethodResult.class_pairs)
  return class_pairs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::ClassRelationProto >&
PkgClassMethodResult::class_pairs() const {
  // @@protoc_insertion_point(field_list:proto.PkgClassMethodResult.class_pairs)
  return class_pairs_;
}

// repeated .proto.MethodRelationProto method_pairs = 8;
inline int PkgClassMethodResult::method_pairs_size() const {
  return method_pairs_.size();
}
inline void PkgClassMethodResult::clear_method_pairs() {
  method_pairs_.Clear();
}
inline ::proto::MethodRelationProto* PkgClassMethodResult::mutable_method_pairs(int index) {
  // @@protoc_insertion_point(field_mutable:proto.PkgClassMethodResult.method_pairs)
  return method_pairs_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::MethodRelationProto >*
PkgClassMethodResult::mutable_method_pairs() {
  // @@protoc_insertion_point(field_mutable_list:proto.PkgClassMethodResult.method_pairs)
  return &method_pairs_;
}
inline const ::proto::MethodRelationProto& PkgClassMethodResult::method_pairs(int index) const {
  // @@protoc_insertion_point(field_get:proto.PkgClassMethodResult.method_pairs)
  return method_pairs_.Get(index);
}
inline ::proto::MethodRelationProto* PkgClassMethodResult::add_method_pairs() {
  // @@protoc_insertion_point(field_add:proto.PkgClassMethodResult.method_pairs)
  return method_pairs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::MethodRelationProto >&
PkgClassMethodResult::method_pairs() const {
  // @@protoc_insertion_point(field_list:proto.PkgClassMethodResult.method_pairs)
  return method_pairs_;
}

// repeated .proto.ClassMethodRelationProto class_method_pairs = 9;
inline int PkgClassMethodResult::class_method_pairs_size() const {
  return class_method_pairs_.size();
}
inline void PkgClassMethodResult::clear_class_method_pairs() {
  class_method_pairs_.Clear();
}
inline ::proto::ClassMethodRelationProto* PkgClassMethodResult::mutable_class_method_pairs(int index) {
  // @@protoc_insertion_point(field_mutable:proto.PkgClassMethodResult.class_method_pairs)
  return class_method_pairs_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::ClassMethodRelationProto >*
PkgClassMethodResult::mutable_class_method_pairs() {
  // @@protoc_insertion_point(field_mutable_list:proto.PkgClassMethodResult.class_method_pairs)
  return &class_method_pairs_;
}
inline const ::proto::ClassMethodRelationProto& PkgClassMethodResult::class_method_pairs(int index) const {
  // @@protoc_insertion_point(field_get:proto.PkgClassMethodResult.class_method_pairs)
  return class_method_pairs_.Get(index);
}
inline ::proto::ClassMethodRelationProto* PkgClassMethodResult::add_class_method_pairs() {
  // @@protoc_insertion_point(field_add:proto.PkgClassMethodResult.class_method_pairs)
  return class_method_pairs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::ClassMethodRelationProto >&
PkgClassMethodResult::class_method_pairs() const {
  // @@protoc_insertion_point(field_list:proto.PkgClassMethodResult.class_method_pairs)
  return class_method_pairs_;
}

// repeated .proto.MethodClassRelationProto method_class_pairs = 10;
inline int PkgClassMethodResult::method_class_pairs_size() const {
  return method_class_pairs_.size();
}
inline void PkgClassMethodResult::clear_method_class_pairs() {
  method_class_pairs_.Clear();
}
inline ::proto::MethodClassRelationProto* PkgClassMethodResult::mutable_method_class_pairs(int index) {
  // @@protoc_insertion_point(field_mutable:proto.PkgClassMethodResult.method_class_pairs)
  return method_class_pairs_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::MethodClassRelationProto >*
PkgClassMethodResult::mutable_method_class_pairs() {
  // @@protoc_insertion_point(field_mutable_list:proto.PkgClassMethodResult.method_class_pairs)
  return &method_class_pairs_;
}
inline const ::proto::MethodClassRelationProto& PkgClassMethodResult::method_class_pairs(int index) const {
  // @@protoc_insertion_point(field_get:proto.PkgClassMethodResult.method_class_pairs)
  return method_class_pairs_.Get(index);
}
inline ::proto::MethodClassRelationProto* PkgClassMethodResult::add_method_class_pairs() {
  // @@protoc_insertion_point(field_add:proto.PkgClassMethodResult.method_class_pairs)
  return method_class_pairs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::MethodClassRelationProto >&
PkgClassMethodResult::method_class_pairs() const {
  // @@protoc_insertion_point(field_list:proto.PkgClassMethodResult.method_class_pairs)
  return method_class_pairs_;
}

// uint64 timestamp = 11;
inline void PkgClassMethodResult::clear_timestamp() {
  timestamp_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PkgClassMethodResult::timestamp() const {
  // @@protoc_insertion_point(field_get:proto.PkgClassMethodResult.timestamp)
  return timestamp_;
}
inline void PkgClassMethodResult::set_timestamp(::google::protobuf::uint64 value) {
  
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:proto.PkgClassMethodResult.timestamp)
}

// -------------------------------------------------------------------

// PkgClassMethodResults

// repeated .proto.PkgClassMethodResult pkgs = 1;
inline int PkgClassMethodResults::pkgs_size() const {
  return pkgs_.size();
}
inline void PkgClassMethodResults::clear_pkgs() {
  pkgs_.Clear();
}
inline ::proto::PkgClassMethodResult* PkgClassMethodResults::mutable_pkgs(int index) {
  // @@protoc_insertion_point(field_mutable:proto.PkgClassMethodResults.pkgs)
  return pkgs_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::PkgClassMethodResult >*
PkgClassMethodResults::mutable_pkgs() {
  // @@protoc_insertion_point(field_mutable_list:proto.PkgClassMethodResults.pkgs)
  return &pkgs_;
}
inline const ::proto::PkgClassMethodResult& PkgClassMethodResults::pkgs(int index) const {
  // @@protoc_insertion_point(field_get:proto.PkgClassMethodResults.pkgs)
  return pkgs_.Get(index);
}
inline ::proto::PkgClassMethodResult* PkgClassMethodResults::add_pkgs() {
  // @@protoc_insertion_point(field_add:proto.PkgClassMethodResults.pkgs)
  return pkgs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::PkgClassMethodResult >&
PkgClassMethodResults::pkgs() const {
  // @@protoc_insertion_point(field_list:proto.PkgClassMethodResults.pkgs)
  return pkgs_;
}

// uint64 timestamp = 2;
inline void PkgClassMethodResults::clear_timestamp() {
  timestamp_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PkgClassMethodResults::timestamp() const {
  // @@protoc_insertion_point(field_get:proto.PkgClassMethodResults.timestamp)
  return timestamp_;
}
inline void PkgClassMethodResults::set_timestamp(::google::protobuf::uint64 value) {
  
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:proto.PkgClassMethodResults.timestamp)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::proto::ClassRelationProto_RelationType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::ClassRelationProto_RelationType>() {
  return ::proto::ClassRelationProto_RelationType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_class_5fsig_2eproto
