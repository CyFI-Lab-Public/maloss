// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ast.proto

#include "ast.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_ast_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ast_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_FileInfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ast_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_AstLookupConfig;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ast_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_AstNode;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ast_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_SourceLocation;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ast_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_SourceRange;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ast_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_PkgAstResult;
}  // namespace protobuf_ast_2eproto
namespace proto {
class FileInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FileInfo>
      _instance;
} _FileInfo_default_instance_;
class SourceLocationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SourceLocation>
      _instance;
} _SourceLocation_default_instance_;
class SourceRangeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SourceRange>
      _instance;
} _SourceRange_default_instance_;
class AstNodeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AstNode>
      _instance;
  int source_type_;
  int sink_type_;
  int danger_type_;
  int propagate_type_;
} _AstNode_default_instance_;
class AstLookupConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AstLookupConfig>
      _instance;
} _AstLookupConfig_default_instance_;
class PkgAstResultDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PkgAstResult>
      _instance;
} _PkgAstResult_default_instance_;
class PkgAstResultsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PkgAstResults>
      _instance;
} _PkgAstResults_default_instance_;
}  // namespace proto
namespace protobuf_ast_2eproto {
static void InitDefaultsFileInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::_FileInfo_default_instance_;
    new (ptr) ::proto::FileInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::FileInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_FileInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsFileInfo}, {}};

static void InitDefaultsSourceLocation() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::_SourceLocation_default_instance_;
    new (ptr) ::proto::SourceLocation();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::SourceLocation::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SourceLocation =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSourceLocation}, {
      &protobuf_ast_2eproto::scc_info_FileInfo.base,}};

static void InitDefaultsSourceRange() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::_SourceRange_default_instance_;
    new (ptr) ::proto::SourceRange();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::SourceRange::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SourceRange =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSourceRange}, {
      &protobuf_ast_2eproto::scc_info_SourceLocation.base,}};

static void InitDefaultsAstNode() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::_AstNode_default_instance_;
    new (ptr) ::proto::AstNode();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::AstNode::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_AstNode =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsAstNode}, {
      &protobuf_ast_2eproto::scc_info_SourceRange.base,}};

static void InitDefaultsAstLookupConfig() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::_AstLookupConfig_default_instance_;
    new (ptr) ::proto::AstLookupConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::AstLookupConfig::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_AstLookupConfig =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsAstLookupConfig}, {
      &protobuf_ast_2eproto::scc_info_AstNode.base,}};

static void InitDefaultsPkgAstResult() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::_PkgAstResult_default_instance_;
    new (ptr) ::proto::PkgAstResult();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::PkgAstResult::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_PkgAstResult =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsPkgAstResult}, {
      &protobuf_ast_2eproto::scc_info_AstLookupConfig.base,
      &protobuf_ast_2eproto::scc_info_AstNode.base,}};

static void InitDefaultsPkgAstResults() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::_PkgAstResults_default_instance_;
    new (ptr) ::proto::PkgAstResults();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::PkgAstResults::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_PkgAstResults =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsPkgAstResults}, {
      &protobuf_ast_2eproto::scc_info_PkgAstResult.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_FileInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SourceLocation.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SourceRange.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AstNode.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AstLookupConfig.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PkgAstResult.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PkgAstResults.base);
}

::google::protobuf::Metadata file_level_metadata[7];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[7];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::FileInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::FileInfo, filename_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::FileInfo, relpath_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::FileInfo, file_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::FileInfo, directory_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::SourceLocation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::SourceLocation, row_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::SourceLocation, column_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::SourceLocation, file_info_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::SourceRange, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::SourceRange, start_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::SourceRange, end_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::AstNode, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::AstNode, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::AstNode, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::AstNode, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::AstNode, full_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::AstNode, base_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::AstNode, module_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::AstNode, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::AstNode, definition_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::AstNode, arg_nodes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::AstNode, arguments_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::AstNode, source_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::AstNode, range_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::AstNode, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::AstNode, functionality_),
  offsetof(::proto::AstNodeDefaultTypeInternal, source_type_),
  offsetof(::proto::AstNodeDefaultTypeInternal, sink_type_),
  offsetof(::proto::AstNodeDefaultTypeInternal, danger_type_),
  offsetof(::proto::AstNodeDefaultTypeInternal, propagate_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::AstNode, child_nodes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::AstNode, instantiatable_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::AstNode, accurate_functionality_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::AstLookupConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::AstLookupConfig, apis_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::AstLookupConfig, save_feature_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::AstLookupConfig, smt_formula_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::AstLookupConfig, smt_satisfied_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::AstLookupConfig, func_only_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::PkgAstResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::PkgAstResult, pkg_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::PkgAstResult, pkg_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::PkgAstResult, language_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::PkgAstResult, input_path_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::PkgAstResult, config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::PkgAstResult, api_results_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::PkgAstResult, root_nodes_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::PkgAstResults, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::PkgAstResults, pkgs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::PkgAstResults, timestamp_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::proto::FileInfo)},
  { 9, -1, sizeof(::proto::SourceLocation)},
  { 17, -1, sizeof(::proto::SourceRange)},
  { 24, -1, sizeof(::proto::AstNode)},
  { 49, -1, sizeof(::proto::AstLookupConfig)},
  { 59, -1, sizeof(::proto::PkgAstResult)},
  { 71, -1, sizeof(::proto::PkgAstResults)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::_FileInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::_SourceLocation_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::_SourceRange_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::_AstNode_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::_AstLookupConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::_PkgAstResult_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::_PkgAstResults_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "ast.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 7);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\tast.proto\022\005proto\"N\n\010FileInfo\022\020\n\010filena"
      "me\030\001 \001(\t\022\017\n\007relpath\030\002 \001(\t\022\014\n\004file\030\003 \001(\t\022"
      "\021\n\tdirectory\030\004 \001(\t\"Q\n\016SourceLocation\022\013\n\003"
      "row\030\001 \001(\005\022\016\n\006column\030\002 \001(\005\022\"\n\tfile_info\030\003"
      " \001(\0132\017.proto.FileInfo\"W\n\013SourceRange\022$\n\005"
      "start\030\001 \001(\0132\025.proto.SourceLocation\022\"\n\003en"
      "d\030\002 \001(\0132\025.proto.SourceLocation\"\355\006\n\007AstNo"
      "de\022%\n\004type\030\001 \001(\0162\027.proto.AstNode.NodeTyp"
      "e\022\014\n\004name\030\002 \001(\t\022\021\n\tfull_name\030\003 \001(\t\022\021\n\tba"
      "se_type\030\004 \001(\t\022\016\n\006module\030\005 \001(\t\022\r\n\005value\030\006"
      " \001(\t\022\022\n\ndefinition\030\007 \001(\t\022!\n\targ_nodes\030\010 "
      "\003(\0132\016.proto.AstNode\022\021\n\targuments\030\t \003(\t\022\016"
      "\n\006source\030\n \001(\t\022!\n\005range\030\013 \001(\0132\022.proto.So"
      "urceRange\022\n\n\002id\030\014 \001(\005\022+\n\rfunctionality\030\r"
      " \001(\0162\024.proto.Functionality\022(\n\013source_typ"
      "e\030\016 \001(\0162\021.proto.SourceTypeH\000\022$\n\tsink_typ"
      "e\030\017 \001(\0162\017.proto.SinkTypeH\000\022(\n\013danger_typ"
      "e\030\020 \001(\0162\021.proto.DangerTypeH\000\022.\n\016propagat"
      "e_type\030\021 \001(\0162\024.proto.PropagateTypeH\000\022#\n\013"
      "child_nodes\030\022 \003(\0132\016.proto.AstNode\022\026\n\016ins"
      "tantiatable\030\023 \001(\010\"\260\002\n\010NodeType\022\013\n\007UNKNOW"
      "N\020\000\022\021\n\rFUNCTION_DECL\020\001\022\021\n\rVARIABLE_DECL\020"
      "\002\022\016\n\nCLASS_DECL\020\003\022\032\n\026FUNCTION_DECL_REF_E"
      "XPR\020\013\022\032\n\026VARIABLE_DECL_REF_EXPR\020\014\022\027\n\023CLA"
      "SS_DECL_REF_EXPR\020\r\022\023\n\017PY_FUNCTION_DEF\020e\022"
      "\035\n\030JS_ASSIGNMENT_EXPRESSION\020\311\001\022\024\n\017RB_REG"
      "ULAR_NODE\020\255\002\022\025\n\020RB_VARIABLE_NODE\020\256\002\022\027\n\022J"
      "AVA_IDENTITY_STMT\020\221\003\022\026\n\021PHP_EXPR_VARIABL"
      "E\020\365\003B\030\n\026accurate_functionality\"\204\001\n\017AstLo"
      "okupConfig\022\034\n\004apis\030\001 \003(\0132\016.proto.AstNode"
      "\022\024\n\014save_feature\030\002 \001(\010\022\023\n\013smt_formula\030\003 "
      "\001(\t\022\025\n\rsmt_satisfied\030\004 \001(\010\022\021\n\tfunc_only\030"
      "\005 \001(\010\"\335\001\n\014PkgAstResult\022\020\n\010pkg_name\030\001 \001(\t"
      "\022\023\n\013pkg_version\030\002 \001(\t\022!\n\010language\030\003 \001(\0162"
      "\017.proto.Language\022\022\n\ninput_path\030\004 \001(\t\022&\n\006"
      "config\030\005 \001(\0132\026.proto.AstLookupConfig\022#\n\013"
      "api_results\030\006 \003(\0132\016.proto.AstNode\022\"\n\nroo"
      "t_nodes\030\007 \003(\0132\016.proto.AstNode\"E\n\rPkgAstR"
      "esults\022!\n\004pkgs\030\001 \003(\0132\023.proto.PkgAstResul"
      "t\022\021\n\ttimestamp\030\002 \001(\004*m\n\010Language\022\013\n\007UNKN"
      "OWN\020\000\022\n\n\006PYTHON\020\001\022\016\n\nJAVASCRIPT\020\002\022\010\n\004RUB"
      "Y\020\003\022\010\n\004JAVA\020\004\022\007\n\003PHP\020\005\022\n\n\006CSHARP\020\006\022\007\n\003CP"
      "P\020\007\022\006\n\002GO\020\010*R\n\rFunctionality\022\020\n\014UNCLASSI"
      "FIED\020\000\022\n\n\006SOURCE\020\001\022\010\n\004SINK\020\002\022\n\n\006DANGER\020\003"
      "\022\r\n\tPROPAGATE\020\004*\341\002\n\nSourceType\022\027\n\023SOURCE"
      "_UNCLASSIFIED\020\000\022\022\n\016SOURCE_ACCOUNT\020\001\022\024\n\020S"
      "OURCE_BLUETOOTH\020\002\022\022\n\016SOURCE_BROWSER\020\003\022\023\n"
      "\017SOURCE_CALENDAR\020\004\022\022\n\016SOURCE_CONTACT\020\005\022\023"
      "\n\017SOURCE_DATABASE\020\006\022\017\n\013SOURCE_FILE\020\007\022\022\n\016"
      "SOURCE_NETWORK\020\010\022\016\n\nSOURCE_NFC\020\t\022\023\n\017SOUR"
      "CE_SETTINGS\020\n\022\017\n\013SOURCE_SYNC\020\013\022\034\n\030SOURCE"
      "_UNIQUE_IDENTIFIER\020\014\022\026\n\022SOURCE_ENVIRONME"
      "NT\0203\022\025\n\021SOURCE_USER_INPUT\0204\022\026\n\022SOURCE_OB"
      "FUSCATION\0205*\362\002\n\010SinkType\022\025\n\021SINK_UNCLASS"
      "IFIED\020\000\022\020\n\014SINK_ACCOUNT\020\001\022\016\n\nSINK_AUDIO\020"
      "\002\022\020\n\014SINK_BROWSER\020\003\022\021\n\rSINK_CALENDAR\020\004\022\020"
      "\n\014SINK_CONTACT\020\005\022\r\n\tSINK_FILE\020\006\022\014\n\010SINK_"
      "LOG\020\007\022\020\n\014SINK_NETWORK\020\010\022\014\n\010SINK_NFC\020\t\022\031\n"
      "\025SINK_PHONE_CONNECTION\020\n\022\024\n\020SINK_PHONE_S"
      "TATE\020\013\022\020\n\014SINK_SMS_MMS\020\014\022\r\n\tSINK_SYNC\020\r\022"
      "\017\n\013SINK_SYSTEM\020\016\022\r\n\tSINK_VOIP\020\017\022\030\n\024SINK_"
      "CODE_GENERATION\0203\022\032\n\026SINK_PROCESS_OPERAT"
      "ION\0204\022\021\n\rSINK_DATABASE\0205*,\n\nDangerType\022\036"
      "\n\032DANGER_UNCLASSIFIED_DANGER\020\000*\203\001\n\rPropa"
      "gateType\022\032\n\026PROPAGATE_UNCLASSIFIED\020\000\022\024\n\020"
      "PROPAGATE_ASSIGN\020\001\022\022\n\016PROPAGATE_CALL\020\002\022\025"
      "\n\021PROPAGATE_SYSCALL\020\003\022\025\n\021PROPAGATE_LIBCA"
      "LL\020\004b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 2692);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ast.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_ast_2eproto
namespace proto {
const ::google::protobuf::EnumDescriptor* AstNode_NodeType_descriptor() {
  protobuf_ast_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ast_2eproto::file_level_enum_descriptors[0];
}
bool AstNode_NodeType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 11:
    case 12:
    case 13:
    case 101:
    case 201:
    case 301:
    case 302:
    case 401:
    case 501:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const AstNode_NodeType AstNode::UNKNOWN;
const AstNode_NodeType AstNode::FUNCTION_DECL;
const AstNode_NodeType AstNode::VARIABLE_DECL;
const AstNode_NodeType AstNode::CLASS_DECL;
const AstNode_NodeType AstNode::FUNCTION_DECL_REF_EXPR;
const AstNode_NodeType AstNode::VARIABLE_DECL_REF_EXPR;
const AstNode_NodeType AstNode::CLASS_DECL_REF_EXPR;
const AstNode_NodeType AstNode::PY_FUNCTION_DEF;
const AstNode_NodeType AstNode::JS_ASSIGNMENT_EXPRESSION;
const AstNode_NodeType AstNode::RB_REGULAR_NODE;
const AstNode_NodeType AstNode::RB_VARIABLE_NODE;
const AstNode_NodeType AstNode::JAVA_IDENTITY_STMT;
const AstNode_NodeType AstNode::PHP_EXPR_VARIABLE;
const AstNode_NodeType AstNode::NodeType_MIN;
const AstNode_NodeType AstNode::NodeType_MAX;
const int AstNode::NodeType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Language_descriptor() {
  protobuf_ast_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ast_2eproto::file_level_enum_descriptors[1];
}
bool Language_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* Functionality_descriptor() {
  protobuf_ast_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ast_2eproto::file_level_enum_descriptors[2];
}
bool Functionality_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* SourceType_descriptor() {
  protobuf_ast_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ast_2eproto::file_level_enum_descriptors[3];
}
bool SourceType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 51:
    case 52:
    case 53:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* SinkType_descriptor() {
  protobuf_ast_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ast_2eproto::file_level_enum_descriptors[4];
}
bool SinkType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 51:
    case 52:
    case 53:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* DangerType_descriptor() {
  protobuf_ast_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ast_2eproto::file_level_enum_descriptors[5];
}
bool DangerType_IsValid(int value) {
  switch (value) {
    case 0:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* PropagateType_descriptor() {
  protobuf_ast_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ast_2eproto::file_level_enum_descriptors[6];
}
bool PropagateType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void FileInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FileInfo::kFilenameFieldNumber;
const int FileInfo::kRelpathFieldNumber;
const int FileInfo::kFileFieldNumber;
const int FileInfo::kDirectoryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FileInfo::FileInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ast_2eproto::scc_info_FileInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.FileInfo)
}
FileInfo::FileInfo(const FileInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.filename().size() > 0) {
    filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filename_);
  }
  relpath_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.relpath().size() > 0) {
    relpath_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.relpath_);
  }
  file_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.file().size() > 0) {
    file_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_);
  }
  directory_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.directory().size() > 0) {
    directory_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.directory_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.FileInfo)
}

void FileInfo::SharedCtor() {
  filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  relpath_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  file_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  directory_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

FileInfo::~FileInfo() {
  // @@protoc_insertion_point(destructor:proto.FileInfo)
  SharedDtor();
}

void FileInfo::SharedDtor() {
  filename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  relpath_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  file_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  directory_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void FileInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* FileInfo::descriptor() {
  ::protobuf_ast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ast_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FileInfo& FileInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ast_2eproto::scc_info_FileInfo.base);
  return *internal_default_instance();
}


void FileInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.FileInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  filename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  relpath_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  file_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  directory_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool FileInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.FileInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string filename = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filename()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->filename().data(), static_cast<int>(this->filename().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.FileInfo.filename"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string relpath = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_relpath()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->relpath().data(), static_cast<int>(this->relpath().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.FileInfo.relpath"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string file = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_file()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->file().data(), static_cast<int>(this->file().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.FileInfo.file"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string directory = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_directory()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->directory().data(), static_cast<int>(this->directory().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.FileInfo.directory"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.FileInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.FileInfo)
  return false;
#undef DO_
}

void FileInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.FileInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string filename = 1;
  if (this->filename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filename().data(), static_cast<int>(this->filename().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.FileInfo.filename");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->filename(), output);
  }

  // string relpath = 2;
  if (this->relpath().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->relpath().data(), static_cast<int>(this->relpath().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.FileInfo.relpath");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->relpath(), output);
  }

  // string file = 3;
  if (this->file().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->file().data(), static_cast<int>(this->file().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.FileInfo.file");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->file(), output);
  }

  // string directory = 4;
  if (this->directory().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->directory().data(), static_cast<int>(this->directory().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.FileInfo.directory");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->directory(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.FileInfo)
}

::google::protobuf::uint8* FileInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.FileInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string filename = 1;
  if (this->filename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filename().data(), static_cast<int>(this->filename().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.FileInfo.filename");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->filename(), target);
  }

  // string relpath = 2;
  if (this->relpath().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->relpath().data(), static_cast<int>(this->relpath().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.FileInfo.relpath");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->relpath(), target);
  }

  // string file = 3;
  if (this->file().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->file().data(), static_cast<int>(this->file().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.FileInfo.file");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->file(), target);
  }

  // string directory = 4;
  if (this->directory().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->directory().data(), static_cast<int>(this->directory().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.FileInfo.directory");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->directory(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.FileInfo)
  return target;
}

size_t FileInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.FileInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string filename = 1;
  if (this->filename().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->filename());
  }

  // string relpath = 2;
  if (this->relpath().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->relpath());
  }

  // string file = 3;
  if (this->file().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->file());
  }

  // string directory = 4;
  if (this->directory().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->directory());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FileInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.FileInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const FileInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FileInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.FileInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.FileInfo)
    MergeFrom(*source);
  }
}

void FileInfo::MergeFrom(const FileInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.FileInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.filename().size() > 0) {

    filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filename_);
  }
  if (from.relpath().size() > 0) {

    relpath_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.relpath_);
  }
  if (from.file().size() > 0) {

    file_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_);
  }
  if (from.directory().size() > 0) {

    directory_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.directory_);
  }
}

void FileInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.FileInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FileInfo::CopyFrom(const FileInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.FileInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileInfo::IsInitialized() const {
  return true;
}

void FileInfo::Swap(FileInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FileInfo::InternalSwap(FileInfo* other) {
  using std::swap;
  filename_.Swap(&other->filename_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  relpath_.Swap(&other->relpath_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  file_.Swap(&other->file_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  directory_.Swap(&other->directory_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata FileInfo::GetMetadata() const {
  protobuf_ast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ast_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SourceLocation::InitAsDefaultInstance() {
  ::proto::_SourceLocation_default_instance_._instance.get_mutable()->file_info_ = const_cast< ::proto::FileInfo*>(
      ::proto::FileInfo::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SourceLocation::kRowFieldNumber;
const int SourceLocation::kColumnFieldNumber;
const int SourceLocation::kFileInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SourceLocation::SourceLocation()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ast_2eproto::scc_info_SourceLocation.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SourceLocation)
}
SourceLocation::SourceLocation(const SourceLocation& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_file_info()) {
    file_info_ = new ::proto::FileInfo(*from.file_info_);
  } else {
    file_info_ = NULL;
  }
  ::memcpy(&row_, &from.row_,
    static_cast<size_t>(reinterpret_cast<char*>(&column_) -
    reinterpret_cast<char*>(&row_)) + sizeof(column_));
  // @@protoc_insertion_point(copy_constructor:proto.SourceLocation)
}

void SourceLocation::SharedCtor() {
  ::memset(&file_info_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&column_) -
      reinterpret_cast<char*>(&file_info_)) + sizeof(column_));
}

SourceLocation::~SourceLocation() {
  // @@protoc_insertion_point(destructor:proto.SourceLocation)
  SharedDtor();
}

void SourceLocation::SharedDtor() {
  if (this != internal_default_instance()) delete file_info_;
}

void SourceLocation::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SourceLocation::descriptor() {
  ::protobuf_ast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ast_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SourceLocation& SourceLocation::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ast_2eproto::scc_info_SourceLocation.base);
  return *internal_default_instance();
}


void SourceLocation::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SourceLocation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && file_info_ != NULL) {
    delete file_info_;
  }
  file_info_ = NULL;
  ::memset(&row_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&column_) -
      reinterpret_cast<char*>(&row_)) + sizeof(column_));
  _internal_metadata_.Clear();
}

bool SourceLocation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SourceLocation)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 row = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &row_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 column = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &column_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.FileInfo file_info = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_file_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SourceLocation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SourceLocation)
  return false;
#undef DO_
}

void SourceLocation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SourceLocation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 row = 1;
  if (this->row() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->row(), output);
  }

  // int32 column = 2;
  if (this->column() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->column(), output);
  }

  // .proto.FileInfo file_info = 3;
  if (this->has_file_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_file_info(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SourceLocation)
}

::google::protobuf::uint8* SourceLocation::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SourceLocation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 row = 1;
  if (this->row() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->row(), target);
  }

  // int32 column = 2;
  if (this->column() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->column(), target);
  }

  // .proto.FileInfo file_info = 3;
  if (this->has_file_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_file_info(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SourceLocation)
  return target;
}

size_t SourceLocation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SourceLocation)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.FileInfo file_info = 3;
  if (this->has_file_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *file_info_);
  }

  // int32 row = 1;
  if (this->row() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->row());
  }

  // int32 column = 2;
  if (this->column() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->column());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SourceLocation::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SourceLocation)
  GOOGLE_DCHECK_NE(&from, this);
  const SourceLocation* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SourceLocation>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SourceLocation)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SourceLocation)
    MergeFrom(*source);
  }
}

void SourceLocation::MergeFrom(const SourceLocation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SourceLocation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_file_info()) {
    mutable_file_info()->::proto::FileInfo::MergeFrom(from.file_info());
  }
  if (from.row() != 0) {
    set_row(from.row());
  }
  if (from.column() != 0) {
    set_column(from.column());
  }
}

void SourceLocation::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SourceLocation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SourceLocation::CopyFrom(const SourceLocation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SourceLocation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SourceLocation::IsInitialized() const {
  return true;
}

void SourceLocation::Swap(SourceLocation* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SourceLocation::InternalSwap(SourceLocation* other) {
  using std::swap;
  swap(file_info_, other->file_info_);
  swap(row_, other->row_);
  swap(column_, other->column_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SourceLocation::GetMetadata() const {
  protobuf_ast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ast_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SourceRange::InitAsDefaultInstance() {
  ::proto::_SourceRange_default_instance_._instance.get_mutable()->start_ = const_cast< ::proto::SourceLocation*>(
      ::proto::SourceLocation::internal_default_instance());
  ::proto::_SourceRange_default_instance_._instance.get_mutable()->end_ = const_cast< ::proto::SourceLocation*>(
      ::proto::SourceLocation::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SourceRange::kStartFieldNumber;
const int SourceRange::kEndFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SourceRange::SourceRange()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ast_2eproto::scc_info_SourceRange.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SourceRange)
}
SourceRange::SourceRange(const SourceRange& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_start()) {
    start_ = new ::proto::SourceLocation(*from.start_);
  } else {
    start_ = NULL;
  }
  if (from.has_end()) {
    end_ = new ::proto::SourceLocation(*from.end_);
  } else {
    end_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:proto.SourceRange)
}

void SourceRange::SharedCtor() {
  ::memset(&start_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&end_) -
      reinterpret_cast<char*>(&start_)) + sizeof(end_));
}

SourceRange::~SourceRange() {
  // @@protoc_insertion_point(destructor:proto.SourceRange)
  SharedDtor();
}

void SourceRange::SharedDtor() {
  if (this != internal_default_instance()) delete start_;
  if (this != internal_default_instance()) delete end_;
}

void SourceRange::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SourceRange::descriptor() {
  ::protobuf_ast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ast_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SourceRange& SourceRange::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ast_2eproto::scc_info_SourceRange.base);
  return *internal_default_instance();
}


void SourceRange::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SourceRange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && start_ != NULL) {
    delete start_;
  }
  start_ = NULL;
  if (GetArenaNoVirtual() == NULL && end_ != NULL) {
    delete end_;
  }
  end_ = NULL;
  _internal_metadata_.Clear();
}

bool SourceRange::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SourceRange)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.SourceLocation start = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_start()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.SourceLocation end = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_end()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SourceRange)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SourceRange)
  return false;
#undef DO_
}

void SourceRange::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SourceRange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.SourceLocation start = 1;
  if (this->has_start()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_start(), output);
  }

  // .proto.SourceLocation end = 2;
  if (this->has_end()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_end(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SourceRange)
}

::google::protobuf::uint8* SourceRange::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SourceRange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.SourceLocation start = 1;
  if (this->has_start()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_start(), deterministic, target);
  }

  // .proto.SourceLocation end = 2;
  if (this->has_end()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_end(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SourceRange)
  return target;
}

size_t SourceRange::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SourceRange)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.SourceLocation start = 1;
  if (this->has_start()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *start_);
  }

  // .proto.SourceLocation end = 2;
  if (this->has_end()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *end_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SourceRange::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SourceRange)
  GOOGLE_DCHECK_NE(&from, this);
  const SourceRange* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SourceRange>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SourceRange)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SourceRange)
    MergeFrom(*source);
  }
}

void SourceRange::MergeFrom(const SourceRange& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SourceRange)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_start()) {
    mutable_start()->::proto::SourceLocation::MergeFrom(from.start());
  }
  if (from.has_end()) {
    mutable_end()->::proto::SourceLocation::MergeFrom(from.end());
  }
}

void SourceRange::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SourceRange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SourceRange::CopyFrom(const SourceRange& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SourceRange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SourceRange::IsInitialized() const {
  return true;
}

void SourceRange::Swap(SourceRange* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SourceRange::InternalSwap(SourceRange* other) {
  using std::swap;
  swap(start_, other->start_);
  swap(end_, other->end_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SourceRange::GetMetadata() const {
  protobuf_ast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ast_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AstNode::InitAsDefaultInstance() {
  ::proto::_AstNode_default_instance_._instance.get_mutable()->range_ = const_cast< ::proto::SourceRange*>(
      ::proto::SourceRange::internal_default_instance());
  ::proto::_AstNode_default_instance_.source_type_ = 0;
  ::proto::_AstNode_default_instance_.sink_type_ = 0;
  ::proto::_AstNode_default_instance_.danger_type_ = 0;
  ::proto::_AstNode_default_instance_.propagate_type_ = 0;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AstNode::kTypeFieldNumber;
const int AstNode::kNameFieldNumber;
const int AstNode::kFullNameFieldNumber;
const int AstNode::kBaseTypeFieldNumber;
const int AstNode::kModuleFieldNumber;
const int AstNode::kValueFieldNumber;
const int AstNode::kDefinitionFieldNumber;
const int AstNode::kArgNodesFieldNumber;
const int AstNode::kArgumentsFieldNumber;
const int AstNode::kSourceFieldNumber;
const int AstNode::kRangeFieldNumber;
const int AstNode::kIdFieldNumber;
const int AstNode::kFunctionalityFieldNumber;
const int AstNode::kSourceTypeFieldNumber;
const int AstNode::kSinkTypeFieldNumber;
const int AstNode::kDangerTypeFieldNumber;
const int AstNode::kPropagateTypeFieldNumber;
const int AstNode::kChildNodesFieldNumber;
const int AstNode::kInstantiatableFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AstNode::AstNode()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ast_2eproto::scc_info_AstNode.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.AstNode)
}
AstNode::AstNode(const AstNode& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      arg_nodes_(from.arg_nodes_),
      arguments_(from.arguments_),
      child_nodes_(from.child_nodes_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  full_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.full_name().size() > 0) {
    full_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.full_name_);
  }
  base_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.base_type().size() > 0) {
    base_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.base_type_);
  }
  module_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.module().size() > 0) {
    module_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.module_);
  }
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.value().size() > 0) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  definition_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.definition().size() > 0) {
    definition_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.definition_);
  }
  source_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.source().size() > 0) {
    source_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.source_);
  }
  if (from.has_range()) {
    range_ = new ::proto::SourceRange(*from.range_);
  } else {
    range_ = NULL;
  }
  ::memcpy(&type_, &from.type_,
    static_cast<size_t>(reinterpret_cast<char*>(&instantiatable_) -
    reinterpret_cast<char*>(&type_)) + sizeof(instantiatable_));
  clear_has_accurate_functionality();
  switch (from.accurate_functionality_case()) {
    case kSourceType: {
      set_source_type(from.source_type());
      break;
    }
    case kSinkType: {
      set_sink_type(from.sink_type());
      break;
    }
    case kDangerType: {
      set_danger_type(from.danger_type());
      break;
    }
    case kPropagateType: {
      set_propagate_type(from.propagate_type());
      break;
    }
    case ACCURATE_FUNCTIONALITY_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:proto.AstNode)
}

void AstNode::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  full_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  base_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  module_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  definition_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  source_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&range_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&instantiatable_) -
      reinterpret_cast<char*>(&range_)) + sizeof(instantiatable_));
  clear_has_accurate_functionality();
}

AstNode::~AstNode() {
  // @@protoc_insertion_point(destructor:proto.AstNode)
  SharedDtor();
}

void AstNode::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  full_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  base_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  module_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  definition_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  source_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete range_;
  if (has_accurate_functionality()) {
    clear_accurate_functionality();
  }
}

void AstNode::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AstNode::descriptor() {
  ::protobuf_ast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ast_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AstNode& AstNode::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ast_2eproto::scc_info_AstNode.base);
  return *internal_default_instance();
}


void AstNode::clear_accurate_functionality() {
// @@protoc_insertion_point(one_of_clear_start:proto.AstNode)
  switch (accurate_functionality_case()) {
    case kSourceType: {
      // No need to clear
      break;
    }
    case kSinkType: {
      // No need to clear
      break;
    }
    case kDangerType: {
      // No need to clear
      break;
    }
    case kPropagateType: {
      // No need to clear
      break;
    }
    case ACCURATE_FUNCTIONALITY_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = ACCURATE_FUNCTIONALITY_NOT_SET;
}


void AstNode::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.AstNode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  arg_nodes_.Clear();
  arguments_.Clear();
  child_nodes_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  full_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  base_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  module_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  definition_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  source_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && range_ != NULL) {
    delete range_;
  }
  range_ = NULL;
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&instantiatable_) -
      reinterpret_cast<char*>(&type_)) + sizeof(instantiatable_));
  clear_accurate_functionality();
  _internal_metadata_.Clear();
}

bool AstNode::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.AstNode)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.AstNode.NodeType type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::proto::AstNode_NodeType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.AstNode.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string full_name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_full_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->full_name().data(), static_cast<int>(this->full_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.AstNode.full_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string base_type = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_base_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->base_type().data(), static_cast<int>(this->base_type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.AstNode.base_type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string module = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_module()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->module().data(), static_cast<int>(this->module().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.AstNode.module"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string value = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->value().data(), static_cast<int>(this->value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.AstNode.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string definition = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_definition()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->definition().data(), static_cast<int>(this->definition().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.AstNode.definition"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.AstNode arg_nodes = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_arg_nodes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string arguments = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_arguments()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->arguments(this->arguments_size() - 1).data(),
            static_cast<int>(this->arguments(this->arguments_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.AstNode.arguments"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string source = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_source()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->source().data(), static_cast<int>(this->source().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.AstNode.source"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.SourceRange range = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_range()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 id = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.Functionality functionality = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_functionality(static_cast< ::proto::Functionality >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.SourceType source_type = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_source_type(static_cast< ::proto::SourceType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.SinkType sink_type = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_sink_type(static_cast< ::proto::SinkType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.DangerType danger_type = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 128 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_danger_type(static_cast< ::proto::DangerType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.PropagateType propagate_type = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u /* 136 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_propagate_type(static_cast< ::proto::PropagateType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.AstNode child_nodes = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 146 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_child_nodes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool instantiatable = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(152u /* 152 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &instantiatable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.AstNode)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.AstNode)
  return false;
#undef DO_
}

void AstNode::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.AstNode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.AstNode.NodeType type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.AstNode.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // string full_name = 3;
  if (this->full_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->full_name().data(), static_cast<int>(this->full_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.AstNode.full_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->full_name(), output);
  }

  // string base_type = 4;
  if (this->base_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->base_type().data(), static_cast<int>(this->base_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.AstNode.base_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->base_type(), output);
  }

  // string module = 5;
  if (this->module().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->module().data(), static_cast<int>(this->module().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.AstNode.module");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->module(), output);
  }

  // string value = 6;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.AstNode.value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->value(), output);
  }

  // string definition = 7;
  if (this->definition().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->definition().data(), static_cast<int>(this->definition().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.AstNode.definition");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->definition(), output);
  }

  // repeated .proto.AstNode arg_nodes = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->arg_nodes_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8,
      this->arg_nodes(static_cast<int>(i)),
      output);
  }

  // repeated string arguments = 9;
  for (int i = 0, n = this->arguments_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->arguments(i).data(), static_cast<int>(this->arguments(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.AstNode.arguments");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      9, this->arguments(i), output);
  }

  // string source = 10;
  if (this->source().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->source().data(), static_cast<int>(this->source().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.AstNode.source");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->source(), output);
  }

  // .proto.SourceRange range = 11;
  if (this->has_range()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->_internal_range(), output);
  }

  // int32 id = 12;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->id(), output);
  }

  // .proto.Functionality functionality = 13;
  if (this->functionality() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      13, this->functionality(), output);
  }

  // .proto.SourceType source_type = 14;
  if (has_source_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      14, this->source_type(), output);
  }

  // .proto.SinkType sink_type = 15;
  if (has_sink_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      15, this->sink_type(), output);
  }

  // .proto.DangerType danger_type = 16;
  if (has_danger_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      16, this->danger_type(), output);
  }

  // .proto.PropagateType propagate_type = 17;
  if (has_propagate_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      17, this->propagate_type(), output);
  }

  // repeated .proto.AstNode child_nodes = 18;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->child_nodes_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      18,
      this->child_nodes(static_cast<int>(i)),
      output);
  }

  // bool instantiatable = 19;
  if (this->instantiatable() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(19, this->instantiatable(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.AstNode)
}

::google::protobuf::uint8* AstNode::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.AstNode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.AstNode.NodeType type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.AstNode.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // string full_name = 3;
  if (this->full_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->full_name().data(), static_cast<int>(this->full_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.AstNode.full_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->full_name(), target);
  }

  // string base_type = 4;
  if (this->base_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->base_type().data(), static_cast<int>(this->base_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.AstNode.base_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->base_type(), target);
  }

  // string module = 5;
  if (this->module().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->module().data(), static_cast<int>(this->module().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.AstNode.module");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->module(), target);
  }

  // string value = 6;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.AstNode.value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->value(), target);
  }

  // string definition = 7;
  if (this->definition().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->definition().data(), static_cast<int>(this->definition().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.AstNode.definition");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->definition(), target);
  }

  // repeated .proto.AstNode arg_nodes = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->arg_nodes_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->arg_nodes(static_cast<int>(i)), deterministic, target);
  }

  // repeated string arguments = 9;
  for (int i = 0, n = this->arguments_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->arguments(i).data(), static_cast<int>(this->arguments(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.AstNode.arguments");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(9, this->arguments(i), target);
  }

  // string source = 10;
  if (this->source().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->source().data(), static_cast<int>(this->source().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.AstNode.source");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->source(), target);
  }

  // .proto.SourceRange range = 11;
  if (this->has_range()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->_internal_range(), deterministic, target);
  }

  // int32 id = 12;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->id(), target);
  }

  // .proto.Functionality functionality = 13;
  if (this->functionality() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      13, this->functionality(), target);
  }

  // .proto.SourceType source_type = 14;
  if (has_source_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      14, this->source_type(), target);
  }

  // .proto.SinkType sink_type = 15;
  if (has_sink_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      15, this->sink_type(), target);
  }

  // .proto.DangerType danger_type = 16;
  if (has_danger_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      16, this->danger_type(), target);
  }

  // .proto.PropagateType propagate_type = 17;
  if (has_propagate_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      17, this->propagate_type(), target);
  }

  // repeated .proto.AstNode child_nodes = 18;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->child_nodes_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        18, this->child_nodes(static_cast<int>(i)), deterministic, target);
  }

  // bool instantiatable = 19;
  if (this->instantiatable() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(19, this->instantiatable(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.AstNode)
  return target;
}

size_t AstNode::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.AstNode)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.AstNode arg_nodes = 8;
  {
    unsigned int count = static_cast<unsigned int>(this->arg_nodes_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->arg_nodes(static_cast<int>(i)));
    }
  }

  // repeated string arguments = 9;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->arguments_size());
  for (int i = 0, n = this->arguments_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->arguments(i));
  }

  // repeated .proto.AstNode child_nodes = 18;
  {
    unsigned int count = static_cast<unsigned int>(this->child_nodes_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->child_nodes(static_cast<int>(i)));
    }
  }

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string full_name = 3;
  if (this->full_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->full_name());
  }

  // string base_type = 4;
  if (this->base_type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->base_type());
  }

  // string module = 5;
  if (this->module().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->module());
  }

  // string value = 6;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->value());
  }

  // string definition = 7;
  if (this->definition().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->definition());
  }

  // string source = 10;
  if (this->source().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->source());
  }

  // .proto.SourceRange range = 11;
  if (this->has_range()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *range_);
  }

  // .proto.AstNode.NodeType type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  // int32 id = 12;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  // .proto.Functionality functionality = 13;
  if (this->functionality() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->functionality());
  }

  // bool instantiatable = 19;
  if (this->instantiatable() != 0) {
    total_size += 2 + 1;
  }

  switch (accurate_functionality_case()) {
    // .proto.SourceType source_type = 14;
    case kSourceType: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->source_type());
      break;
    }
    // .proto.SinkType sink_type = 15;
    case kSinkType: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->sink_type());
      break;
    }
    // .proto.DangerType danger_type = 16;
    case kDangerType: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->danger_type());
      break;
    }
    // .proto.PropagateType propagate_type = 17;
    case kPropagateType: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->propagate_type());
      break;
    }
    case ACCURATE_FUNCTIONALITY_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AstNode::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.AstNode)
  GOOGLE_DCHECK_NE(&from, this);
  const AstNode* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AstNode>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.AstNode)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.AstNode)
    MergeFrom(*source);
  }
}

void AstNode::MergeFrom(const AstNode& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.AstNode)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  arg_nodes_.MergeFrom(from.arg_nodes_);
  arguments_.MergeFrom(from.arguments_);
  child_nodes_.MergeFrom(from.child_nodes_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.full_name().size() > 0) {

    full_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.full_name_);
  }
  if (from.base_type().size() > 0) {

    base_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.base_type_);
  }
  if (from.module().size() > 0) {

    module_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.module_);
  }
  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  if (from.definition().size() > 0) {

    definition_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.definition_);
  }
  if (from.source().size() > 0) {

    source_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.source_);
  }
  if (from.has_range()) {
    mutable_range()->::proto::SourceRange::MergeFrom(from.range());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.functionality() != 0) {
    set_functionality(from.functionality());
  }
  if (from.instantiatable() != 0) {
    set_instantiatable(from.instantiatable());
  }
  switch (from.accurate_functionality_case()) {
    case kSourceType: {
      set_source_type(from.source_type());
      break;
    }
    case kSinkType: {
      set_sink_type(from.sink_type());
      break;
    }
    case kDangerType: {
      set_danger_type(from.danger_type());
      break;
    }
    case kPropagateType: {
      set_propagate_type(from.propagate_type());
      break;
    }
    case ACCURATE_FUNCTIONALITY_NOT_SET: {
      break;
    }
  }
}

void AstNode::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.AstNode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AstNode::CopyFrom(const AstNode& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.AstNode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AstNode::IsInitialized() const {
  return true;
}

void AstNode::Swap(AstNode* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AstNode::InternalSwap(AstNode* other) {
  using std::swap;
  CastToBase(&arg_nodes_)->InternalSwap(CastToBase(&other->arg_nodes_));
  arguments_.InternalSwap(CastToBase(&other->arguments_));
  CastToBase(&child_nodes_)->InternalSwap(CastToBase(&other->child_nodes_));
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  full_name_.Swap(&other->full_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  base_type_.Swap(&other->base_type_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  module_.Swap(&other->module_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  value_.Swap(&other->value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  definition_.Swap(&other->definition_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  source_.Swap(&other->source_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(range_, other->range_);
  swap(type_, other->type_);
  swap(id_, other->id_);
  swap(functionality_, other->functionality_);
  swap(instantiatable_, other->instantiatable_);
  swap(accurate_functionality_, other->accurate_functionality_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AstNode::GetMetadata() const {
  protobuf_ast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ast_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AstLookupConfig::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AstLookupConfig::kApisFieldNumber;
const int AstLookupConfig::kSaveFeatureFieldNumber;
const int AstLookupConfig::kSmtFormulaFieldNumber;
const int AstLookupConfig::kSmtSatisfiedFieldNumber;
const int AstLookupConfig::kFuncOnlyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AstLookupConfig::AstLookupConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ast_2eproto::scc_info_AstLookupConfig.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.AstLookupConfig)
}
AstLookupConfig::AstLookupConfig(const AstLookupConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      apis_(from.apis_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  smt_formula_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.smt_formula().size() > 0) {
    smt_formula_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smt_formula_);
  }
  ::memcpy(&save_feature_, &from.save_feature_,
    static_cast<size_t>(reinterpret_cast<char*>(&func_only_) -
    reinterpret_cast<char*>(&save_feature_)) + sizeof(func_only_));
  // @@protoc_insertion_point(copy_constructor:proto.AstLookupConfig)
}

void AstLookupConfig::SharedCtor() {
  smt_formula_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&save_feature_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&func_only_) -
      reinterpret_cast<char*>(&save_feature_)) + sizeof(func_only_));
}

AstLookupConfig::~AstLookupConfig() {
  // @@protoc_insertion_point(destructor:proto.AstLookupConfig)
  SharedDtor();
}

void AstLookupConfig::SharedDtor() {
  smt_formula_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AstLookupConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AstLookupConfig::descriptor() {
  ::protobuf_ast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ast_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AstLookupConfig& AstLookupConfig::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ast_2eproto::scc_info_AstLookupConfig.base);
  return *internal_default_instance();
}


void AstLookupConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.AstLookupConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  apis_.Clear();
  smt_formula_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&save_feature_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&func_only_) -
      reinterpret_cast<char*>(&save_feature_)) + sizeof(func_only_));
  _internal_metadata_.Clear();
}

bool AstLookupConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.AstLookupConfig)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto.AstNode apis = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_apis()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool save_feature = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &save_feature_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string smt_formula = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smt_formula()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smt_formula().data(), static_cast<int>(this->smt_formula().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.AstLookupConfig.smt_formula"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool smt_satisfied = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &smt_satisfied_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool func_only = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &func_only_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.AstLookupConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.AstLookupConfig)
  return false;
#undef DO_
}

void AstLookupConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.AstLookupConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.AstNode apis = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->apis_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->apis(static_cast<int>(i)),
      output);
  }

  // bool save_feature = 2;
  if (this->save_feature() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->save_feature(), output);
  }

  // string smt_formula = 3;
  if (this->smt_formula().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smt_formula().data(), static_cast<int>(this->smt_formula().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.AstLookupConfig.smt_formula");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->smt_formula(), output);
  }

  // bool smt_satisfied = 4;
  if (this->smt_satisfied() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->smt_satisfied(), output);
  }

  // bool func_only = 5;
  if (this->func_only() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->func_only(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.AstLookupConfig)
}

::google::protobuf::uint8* AstLookupConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.AstLookupConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.AstNode apis = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->apis_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->apis(static_cast<int>(i)), deterministic, target);
  }

  // bool save_feature = 2;
  if (this->save_feature() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->save_feature(), target);
  }

  // string smt_formula = 3;
  if (this->smt_formula().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smt_formula().data(), static_cast<int>(this->smt_formula().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.AstLookupConfig.smt_formula");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->smt_formula(), target);
  }

  // bool smt_satisfied = 4;
  if (this->smt_satisfied() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->smt_satisfied(), target);
  }

  // bool func_only = 5;
  if (this->func_only() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->func_only(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.AstLookupConfig)
  return target;
}

size_t AstLookupConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.AstLookupConfig)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.AstNode apis = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->apis_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->apis(static_cast<int>(i)));
    }
  }

  // string smt_formula = 3;
  if (this->smt_formula().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smt_formula());
  }

  // bool save_feature = 2;
  if (this->save_feature() != 0) {
    total_size += 1 + 1;
  }

  // bool smt_satisfied = 4;
  if (this->smt_satisfied() != 0) {
    total_size += 1 + 1;
  }

  // bool func_only = 5;
  if (this->func_only() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AstLookupConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.AstLookupConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const AstLookupConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AstLookupConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.AstLookupConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.AstLookupConfig)
    MergeFrom(*source);
  }
}

void AstLookupConfig::MergeFrom(const AstLookupConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.AstLookupConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  apis_.MergeFrom(from.apis_);
  if (from.smt_formula().size() > 0) {

    smt_formula_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smt_formula_);
  }
  if (from.save_feature() != 0) {
    set_save_feature(from.save_feature());
  }
  if (from.smt_satisfied() != 0) {
    set_smt_satisfied(from.smt_satisfied());
  }
  if (from.func_only() != 0) {
    set_func_only(from.func_only());
  }
}

void AstLookupConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.AstLookupConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AstLookupConfig::CopyFrom(const AstLookupConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.AstLookupConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AstLookupConfig::IsInitialized() const {
  return true;
}

void AstLookupConfig::Swap(AstLookupConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AstLookupConfig::InternalSwap(AstLookupConfig* other) {
  using std::swap;
  CastToBase(&apis_)->InternalSwap(CastToBase(&other->apis_));
  smt_formula_.Swap(&other->smt_formula_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(save_feature_, other->save_feature_);
  swap(smt_satisfied_, other->smt_satisfied_);
  swap(func_only_, other->func_only_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AstLookupConfig::GetMetadata() const {
  protobuf_ast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ast_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PkgAstResult::InitAsDefaultInstance() {
  ::proto::_PkgAstResult_default_instance_._instance.get_mutable()->config_ = const_cast< ::proto::AstLookupConfig*>(
      ::proto::AstLookupConfig::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PkgAstResult::kPkgNameFieldNumber;
const int PkgAstResult::kPkgVersionFieldNumber;
const int PkgAstResult::kLanguageFieldNumber;
const int PkgAstResult::kInputPathFieldNumber;
const int PkgAstResult::kConfigFieldNumber;
const int PkgAstResult::kApiResultsFieldNumber;
const int PkgAstResult::kRootNodesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PkgAstResult::PkgAstResult()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ast_2eproto::scc_info_PkgAstResult.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PkgAstResult)
}
PkgAstResult::PkgAstResult(const PkgAstResult& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      api_results_(from.api_results_),
      root_nodes_(from.root_nodes_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pkg_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.pkg_name().size() > 0) {
    pkg_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pkg_name_);
  }
  pkg_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.pkg_version().size() > 0) {
    pkg_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pkg_version_);
  }
  input_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.input_path().size() > 0) {
    input_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.input_path_);
  }
  if (from.has_config()) {
    config_ = new ::proto::AstLookupConfig(*from.config_);
  } else {
    config_ = NULL;
  }
  language_ = from.language_;
  // @@protoc_insertion_point(copy_constructor:proto.PkgAstResult)
}

void PkgAstResult::SharedCtor() {
  pkg_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pkg_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  input_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&config_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&language_) -
      reinterpret_cast<char*>(&config_)) + sizeof(language_));
}

PkgAstResult::~PkgAstResult() {
  // @@protoc_insertion_point(destructor:proto.PkgAstResult)
  SharedDtor();
}

void PkgAstResult::SharedDtor() {
  pkg_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pkg_version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  input_path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete config_;
}

void PkgAstResult::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PkgAstResult::descriptor() {
  ::protobuf_ast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ast_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PkgAstResult& PkgAstResult::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ast_2eproto::scc_info_PkgAstResult.base);
  return *internal_default_instance();
}


void PkgAstResult::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PkgAstResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  api_results_.Clear();
  root_nodes_.Clear();
  pkg_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pkg_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  input_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
  language_ = 0;
  _internal_metadata_.Clear();
}

bool PkgAstResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PkgAstResult)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string pkg_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pkg_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->pkg_name().data(), static_cast<int>(this->pkg_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.PkgAstResult.pkg_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string pkg_version = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pkg_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->pkg_version().data(), static_cast<int>(this->pkg_version().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.PkgAstResult.pkg_version"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.Language language = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_language(static_cast< ::proto::Language >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string input_path = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_input_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->input_path().data(), static_cast<int>(this->input_path().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.PkgAstResult.input_path"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.AstLookupConfig config = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.AstNode api_results = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_api_results()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.AstNode root_nodes = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_root_nodes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PkgAstResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PkgAstResult)
  return false;
#undef DO_
}

void PkgAstResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PkgAstResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string pkg_name = 1;
  if (this->pkg_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pkg_name().data(), static_cast<int>(this->pkg_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.PkgAstResult.pkg_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->pkg_name(), output);
  }

  // string pkg_version = 2;
  if (this->pkg_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pkg_version().data(), static_cast<int>(this->pkg_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.PkgAstResult.pkg_version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->pkg_version(), output);
  }

  // .proto.Language language = 3;
  if (this->language() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->language(), output);
  }

  // string input_path = 4;
  if (this->input_path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->input_path().data(), static_cast<int>(this->input_path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.PkgAstResult.input_path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->input_path(), output);
  }

  // .proto.AstLookupConfig config = 5;
  if (this->has_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_config(), output);
  }

  // repeated .proto.AstNode api_results = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->api_results_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6,
      this->api_results(static_cast<int>(i)),
      output);
  }

  // repeated .proto.AstNode root_nodes = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->root_nodes_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7,
      this->root_nodes(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.PkgAstResult)
}

::google::protobuf::uint8* PkgAstResult::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.PkgAstResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string pkg_name = 1;
  if (this->pkg_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pkg_name().data(), static_cast<int>(this->pkg_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.PkgAstResult.pkg_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->pkg_name(), target);
  }

  // string pkg_version = 2;
  if (this->pkg_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pkg_version().data(), static_cast<int>(this->pkg_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.PkgAstResult.pkg_version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->pkg_version(), target);
  }

  // .proto.Language language = 3;
  if (this->language() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->language(), target);
  }

  // string input_path = 4;
  if (this->input_path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->input_path().data(), static_cast<int>(this->input_path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.PkgAstResult.input_path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->input_path(), target);
  }

  // .proto.AstLookupConfig config = 5;
  if (this->has_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_config(), deterministic, target);
  }

  // repeated .proto.AstNode api_results = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->api_results_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->api_results(static_cast<int>(i)), deterministic, target);
  }

  // repeated .proto.AstNode root_nodes = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->root_nodes_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->root_nodes(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.PkgAstResult)
  return target;
}

size_t PkgAstResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PkgAstResult)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.AstNode api_results = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->api_results_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->api_results(static_cast<int>(i)));
    }
  }

  // repeated .proto.AstNode root_nodes = 7;
  {
    unsigned int count = static_cast<unsigned int>(this->root_nodes_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->root_nodes(static_cast<int>(i)));
    }
  }

  // string pkg_name = 1;
  if (this->pkg_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->pkg_name());
  }

  // string pkg_version = 2;
  if (this->pkg_version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->pkg_version());
  }

  // string input_path = 4;
  if (this->input_path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->input_path());
  }

  // .proto.AstLookupConfig config = 5;
  if (this->has_config()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *config_);
  }

  // .proto.Language language = 3;
  if (this->language() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->language());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PkgAstResult::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.PkgAstResult)
  GOOGLE_DCHECK_NE(&from, this);
  const PkgAstResult* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PkgAstResult>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PkgAstResult)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PkgAstResult)
    MergeFrom(*source);
  }
}

void PkgAstResult::MergeFrom(const PkgAstResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.PkgAstResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  api_results_.MergeFrom(from.api_results_);
  root_nodes_.MergeFrom(from.root_nodes_);
  if (from.pkg_name().size() > 0) {

    pkg_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pkg_name_);
  }
  if (from.pkg_version().size() > 0) {

    pkg_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pkg_version_);
  }
  if (from.input_path().size() > 0) {

    input_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.input_path_);
  }
  if (from.has_config()) {
    mutable_config()->::proto::AstLookupConfig::MergeFrom(from.config());
  }
  if (from.language() != 0) {
    set_language(from.language());
  }
}

void PkgAstResult::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.PkgAstResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PkgAstResult::CopyFrom(const PkgAstResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PkgAstResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PkgAstResult::IsInitialized() const {
  return true;
}

void PkgAstResult::Swap(PkgAstResult* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PkgAstResult::InternalSwap(PkgAstResult* other) {
  using std::swap;
  CastToBase(&api_results_)->InternalSwap(CastToBase(&other->api_results_));
  CastToBase(&root_nodes_)->InternalSwap(CastToBase(&other->root_nodes_));
  pkg_name_.Swap(&other->pkg_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  pkg_version_.Swap(&other->pkg_version_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  input_path_.Swap(&other->input_path_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(config_, other->config_);
  swap(language_, other->language_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PkgAstResult::GetMetadata() const {
  protobuf_ast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ast_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PkgAstResults::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PkgAstResults::kPkgsFieldNumber;
const int PkgAstResults::kTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PkgAstResults::PkgAstResults()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ast_2eproto::scc_info_PkgAstResults.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PkgAstResults)
}
PkgAstResults::PkgAstResults(const PkgAstResults& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      pkgs_(from.pkgs_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  timestamp_ = from.timestamp_;
  // @@protoc_insertion_point(copy_constructor:proto.PkgAstResults)
}

void PkgAstResults::SharedCtor() {
  timestamp_ = GOOGLE_ULONGLONG(0);
}

PkgAstResults::~PkgAstResults() {
  // @@protoc_insertion_point(destructor:proto.PkgAstResults)
  SharedDtor();
}

void PkgAstResults::SharedDtor() {
}

void PkgAstResults::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PkgAstResults::descriptor() {
  ::protobuf_ast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ast_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PkgAstResults& PkgAstResults::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ast_2eproto::scc_info_PkgAstResults.base);
  return *internal_default_instance();
}


void PkgAstResults::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PkgAstResults)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pkgs_.Clear();
  timestamp_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool PkgAstResults::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PkgAstResults)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto.PkgAstResult pkgs = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_pkgs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 timestamp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PkgAstResults)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PkgAstResults)
  return false;
#undef DO_
}

void PkgAstResults::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PkgAstResults)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.PkgAstResult pkgs = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->pkgs_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->pkgs(static_cast<int>(i)),
      output);
  }

  // uint64 timestamp = 2;
  if (this->timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->timestamp(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.PkgAstResults)
}

::google::protobuf::uint8* PkgAstResults::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.PkgAstResults)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.PkgAstResult pkgs = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->pkgs_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->pkgs(static_cast<int>(i)), deterministic, target);
  }

  // uint64 timestamp = 2;
  if (this->timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->timestamp(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.PkgAstResults)
  return target;
}

size_t PkgAstResults::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PkgAstResults)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.PkgAstResult pkgs = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->pkgs_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->pkgs(static_cast<int>(i)));
    }
  }

  // uint64 timestamp = 2;
  if (this->timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->timestamp());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PkgAstResults::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.PkgAstResults)
  GOOGLE_DCHECK_NE(&from, this);
  const PkgAstResults* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PkgAstResults>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PkgAstResults)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PkgAstResults)
    MergeFrom(*source);
  }
}

void PkgAstResults::MergeFrom(const PkgAstResults& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.PkgAstResults)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  pkgs_.MergeFrom(from.pkgs_);
  if (from.timestamp() != 0) {
    set_timestamp(from.timestamp());
  }
}

void PkgAstResults::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.PkgAstResults)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PkgAstResults::CopyFrom(const PkgAstResults& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PkgAstResults)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PkgAstResults::IsInitialized() const {
  return true;
}

void PkgAstResults::Swap(PkgAstResults* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PkgAstResults::InternalSwap(PkgAstResults* other) {
  using std::swap;
  CastToBase(&pkgs_)->InternalSwap(CastToBase(&other->pkgs_));
  swap(timestamp_, other->timestamp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PkgAstResults::GetMetadata() const {
  protobuf_ast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ast_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace proto
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::proto::FileInfo* Arena::CreateMaybeMessage< ::proto::FileInfo >(Arena* arena) {
  return Arena::CreateInternal< ::proto::FileInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::proto::SourceLocation* Arena::CreateMaybeMessage< ::proto::SourceLocation >(Arena* arena) {
  return Arena::CreateInternal< ::proto::SourceLocation >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::proto::SourceRange* Arena::CreateMaybeMessage< ::proto::SourceRange >(Arena* arena) {
  return Arena::CreateInternal< ::proto::SourceRange >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::proto::AstNode* Arena::CreateMaybeMessage< ::proto::AstNode >(Arena* arena) {
  return Arena::CreateInternal< ::proto::AstNode >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::proto::AstLookupConfig* Arena::CreateMaybeMessage< ::proto::AstLookupConfig >(Arena* arena) {
  return Arena::CreateInternal< ::proto::AstLookupConfig >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::proto::PkgAstResult* Arena::CreateMaybeMessage< ::proto::PkgAstResult >(Arena* arena) {
  return Arena::CreateInternal< ::proto::PkgAstResult >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::proto::PkgAstResults* Arena::CreateMaybeMessage< ::proto::PkgAstResults >(Arena* arena) {
  return Arena::CreateInternal< ::proto::PkgAstResults >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
