// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: info.proto

#include "info.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_info_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_info_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ExecuteInfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_info_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ReleaseInfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_info_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_RepositoryInfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_info_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_PackageInfo_Metadata;
}  // namespace protobuf_info_2eproto
namespace proto {
class ReleaseInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReleaseInfo>
      _instance;
} _ReleaseInfo_default_instance_;
class RepositoryInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RepositoryInfo>
      _instance;
} _RepositoryInfo_default_instance_;
class ExecuteInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ExecuteInfo>
      _instance;
} _ExecuteInfo_default_instance_;
class PackageInfo_MetadataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PackageInfo_Metadata>
      _instance;
} _PackageInfo_Metadata_default_instance_;
class PackageInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PackageInfo>
      _instance;
} _PackageInfo_default_instance_;
}  // namespace proto
namespace protobuf_info_2eproto {
static void InitDefaultsReleaseInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::_ReleaseInfo_default_instance_;
    new (ptr) ::proto::ReleaseInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::ReleaseInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ReleaseInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReleaseInfo}, {}};

static void InitDefaultsRepositoryInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::_RepositoryInfo_default_instance_;
    new (ptr) ::proto::RepositoryInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::RepositoryInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RepositoryInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRepositoryInfo}, {}};

static void InitDefaultsExecuteInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::_ExecuteInfo_default_instance_;
    new (ptr) ::proto::ExecuteInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::ExecuteInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ExecuteInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsExecuteInfo}, {}};

static void InitDefaultsPackageInfo_Metadata() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::_PackageInfo_Metadata_default_instance_;
    new (ptr) ::proto::PackageInfo_Metadata();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::PackageInfo_Metadata::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_PackageInfo_Metadata =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsPackageInfo_Metadata}, {
      &protobuf_info_2eproto::scc_info_RepositoryInfo.base,
      &protobuf_info_2eproto::scc_info_ExecuteInfo.base,
      &protobuf_info_2eproto::scc_info_ReleaseInfo.base,}};

static void InitDefaultsPackageInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::_PackageInfo_default_instance_;
    new (ptr) ::proto::PackageInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::PackageInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_PackageInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsPackageInfo}, {
      &protobuf_info_2eproto::scc_info_PackageInfo_Metadata.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_ReleaseInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RepositoryInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ExecuteInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PackageInfo_Metadata.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PackageInfo.base);
}

::google::protobuf::Metadata file_level_metadata[5];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::ReleaseInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::ReleaseInfo, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::ReleaseInfo, timestamp_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::RepositoryInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::RepositoryInfo, url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::RepositoryInfo, type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::ExecuteInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::ExecuteInfo, target_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::ExecuteInfo, command_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::PackageInfo_Metadata, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::PackageInfo_Metadata, package_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::PackageInfo_Metadata, package_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::PackageInfo_Metadata, email_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::PackageInfo_Metadata, homepage_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::PackageInfo_Metadata, license_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::PackageInfo_Metadata, repository_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::PackageInfo_Metadata, exec_jobs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::PackageInfo_Metadata, authors_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::PackageInfo_Metadata, contributors_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::PackageInfo_Metadata, maintainers_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::PackageInfo_Metadata, releases_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::PackageInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::PackageInfo, info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::PackageInfo, dependencies_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::PackageInfo, dev_dependencies_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::proto::ReleaseInfo)},
  { 7, -1, sizeof(::proto::RepositoryInfo)},
  { 14, -1, sizeof(::proto::ExecuteInfo)},
  { 21, -1, sizeof(::proto::PackageInfo_Metadata)},
  { 37, -1, sizeof(::proto::PackageInfo)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::_ReleaseInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::_RepositoryInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::_ExecuteInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::_PackageInfo_Metadata_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::_PackageInfo_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "info.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 5);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\ninfo.proto\022\005proto\".\n\013ReleaseInfo\022\014\n\004na"
      "me\030\001 \001(\t\022\021\n\ttimestamp\030\002 \001(\t\"+\n\016Repositor"
      "yInfo\022\013\n\003url\030\001 \001(\t\022\014\n\004type\030\002 \001(\t\".\n\013Exec"
      "uteInfo\022\016\n\006target\030\001 \001(\t\022\017\n\007command\030\002 \001(\t"
      "\"\304\003\n\013PackageInfo\022)\n\004info\030\001 \001(\0132\033.proto.P"
      "ackageInfo.Metadata\0221\n\014dependencies\030\002 \003("
      "\0132\033.proto.PackageInfo.Metadata\0225\n\020dev_de"
      "pendencies\030\003 \003(\0132\033.proto.PackageInfo.Met"
      "adata\032\237\002\n\010Metadata\022\024\n\014package_name\030\001 \001(\t"
      "\022\027\n\017package_version\030\002 \001(\t\022\r\n\005email\030\003 \001(\t"
      "\022\020\n\010homepage\030\004 \001(\t\022\017\n\007license\030\005 \001(\t\022)\n\nr"
      "epository\030\006 \001(\0132\025.proto.RepositoryInfo\022%"
      "\n\texec_jobs\030\007 \003(\0132\022.proto.ExecuteInfo\022\017\n"
      "\007authors\030\010 \003(\t\022\024\n\014contributors\030\t \003(\t\022\023\n\013"
      "maintainers\030\n \003(\t\022$\n\010releases\030\013 \003(\0132\022.pr"
      "oto.ReleaseInfob\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 623);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "info.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_info_2eproto
namespace proto {

// ===================================================================

void ReleaseInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReleaseInfo::kNameFieldNumber;
const int ReleaseInfo::kTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReleaseInfo::ReleaseInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_info_2eproto::scc_info_ReleaseInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ReleaseInfo)
}
ReleaseInfo::ReleaseInfo(const ReleaseInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  timestamp_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.timestamp().size() > 0) {
    timestamp_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.timestamp_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.ReleaseInfo)
}

void ReleaseInfo::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  timestamp_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ReleaseInfo::~ReleaseInfo() {
  // @@protoc_insertion_point(destructor:proto.ReleaseInfo)
  SharedDtor();
}

void ReleaseInfo::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  timestamp_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ReleaseInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ReleaseInfo::descriptor() {
  ::protobuf_info_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_info_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReleaseInfo& ReleaseInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_info_2eproto::scc_info_ReleaseInfo.base);
  return *internal_default_instance();
}


void ReleaseInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ReleaseInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  timestamp_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ReleaseInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ReleaseInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.ReleaseInfo.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string timestamp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_timestamp()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->timestamp().data(), static_cast<int>(this->timestamp().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.ReleaseInfo.timestamp"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ReleaseInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ReleaseInfo)
  return false;
#undef DO_
}

void ReleaseInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ReleaseInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.ReleaseInfo.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string timestamp = 2;
  if (this->timestamp().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->timestamp().data(), static_cast<int>(this->timestamp().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.ReleaseInfo.timestamp");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->timestamp(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ReleaseInfo)
}

::google::protobuf::uint8* ReleaseInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ReleaseInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.ReleaseInfo.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string timestamp = 2;
  if (this->timestamp().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->timestamp().data(), static_cast<int>(this->timestamp().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.ReleaseInfo.timestamp");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->timestamp(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ReleaseInfo)
  return target;
}

size_t ReleaseInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ReleaseInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string timestamp = 2;
  if (this->timestamp().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->timestamp());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReleaseInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ReleaseInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const ReleaseInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReleaseInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ReleaseInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ReleaseInfo)
    MergeFrom(*source);
  }
}

void ReleaseInfo::MergeFrom(const ReleaseInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ReleaseInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.timestamp().size() > 0) {

    timestamp_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.timestamp_);
  }
}

void ReleaseInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ReleaseInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReleaseInfo::CopyFrom(const ReleaseInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ReleaseInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReleaseInfo::IsInitialized() const {
  return true;
}

void ReleaseInfo::Swap(ReleaseInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReleaseInfo::InternalSwap(ReleaseInfo* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  timestamp_.Swap(&other->timestamp_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ReleaseInfo::GetMetadata() const {
  protobuf_info_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_info_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RepositoryInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RepositoryInfo::kUrlFieldNumber;
const int RepositoryInfo::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RepositoryInfo::RepositoryInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_info_2eproto::scc_info_RepositoryInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.RepositoryInfo)
}
RepositoryInfo::RepositoryInfo(const RepositoryInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.url().size() > 0) {
    url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
  }
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.type().size() > 0) {
    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.RepositoryInfo)
}

void RepositoryInfo::SharedCtor() {
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

RepositoryInfo::~RepositoryInfo() {
  // @@protoc_insertion_point(destructor:proto.RepositoryInfo)
  SharedDtor();
}

void RepositoryInfo::SharedDtor() {
  url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RepositoryInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RepositoryInfo::descriptor() {
  ::protobuf_info_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_info_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RepositoryInfo& RepositoryInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_info_2eproto::scc_info_RepositoryInfo.base);
  return *internal_default_instance();
}


void RepositoryInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.RepositoryInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool RepositoryInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.RepositoryInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string url = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_url()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->url().data(), static_cast<int>(this->url().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.RepositoryInfo.url"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type().data(), static_cast<int>(this->type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.RepositoryInfo.type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.RepositoryInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.RepositoryInfo)
  return false;
#undef DO_
}

void RepositoryInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.RepositoryInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string url = 1;
  if (this->url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->url().data(), static_cast<int>(this->url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.RepositoryInfo.url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->url(), output);
  }

  // string type = 2;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), static_cast<int>(this->type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.RepositoryInfo.type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.RepositoryInfo)
}

::google::protobuf::uint8* RepositoryInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.RepositoryInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string url = 1;
  if (this->url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->url().data(), static_cast<int>(this->url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.RepositoryInfo.url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->url(), target);
  }

  // string type = 2;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), static_cast<int>(this->type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.RepositoryInfo.type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.RepositoryInfo)
  return target;
}

size_t RepositoryInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.RepositoryInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string url = 1;
  if (this->url().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->url());
  }

  // string type = 2;
  if (this->type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RepositoryInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.RepositoryInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const RepositoryInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RepositoryInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.RepositoryInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.RepositoryInfo)
    MergeFrom(*source);
  }
}

void RepositoryInfo::MergeFrom(const RepositoryInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.RepositoryInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.url().size() > 0) {

    url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
  }
  if (from.type().size() > 0) {

    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
}

void RepositoryInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.RepositoryInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RepositoryInfo::CopyFrom(const RepositoryInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.RepositoryInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RepositoryInfo::IsInitialized() const {
  return true;
}

void RepositoryInfo::Swap(RepositoryInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RepositoryInfo::InternalSwap(RepositoryInfo* other) {
  using std::swap;
  url_.Swap(&other->url_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  type_.Swap(&other->type_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RepositoryInfo::GetMetadata() const {
  protobuf_info_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_info_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ExecuteInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ExecuteInfo::kTargetFieldNumber;
const int ExecuteInfo::kCommandFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ExecuteInfo::ExecuteInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_info_2eproto::scc_info_ExecuteInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ExecuteInfo)
}
ExecuteInfo::ExecuteInfo(const ExecuteInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  target_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.target().size() > 0) {
    target_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.target_);
  }
  command_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.command().size() > 0) {
    command_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.command_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.ExecuteInfo)
}

void ExecuteInfo::SharedCtor() {
  target_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  command_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ExecuteInfo::~ExecuteInfo() {
  // @@protoc_insertion_point(destructor:proto.ExecuteInfo)
  SharedDtor();
}

void ExecuteInfo::SharedDtor() {
  target_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  command_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ExecuteInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ExecuteInfo::descriptor() {
  ::protobuf_info_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_info_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ExecuteInfo& ExecuteInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_info_2eproto::scc_info_ExecuteInfo.base);
  return *internal_default_instance();
}


void ExecuteInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ExecuteInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  target_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  command_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ExecuteInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ExecuteInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string target = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_target()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->target().data(), static_cast<int>(this->target().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.ExecuteInfo.target"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string command = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_command()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->command().data(), static_cast<int>(this->command().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.ExecuteInfo.command"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ExecuteInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ExecuteInfo)
  return false;
#undef DO_
}

void ExecuteInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ExecuteInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string target = 1;
  if (this->target().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->target().data(), static_cast<int>(this->target().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.ExecuteInfo.target");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->target(), output);
  }

  // string command = 2;
  if (this->command().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->command().data(), static_cast<int>(this->command().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.ExecuteInfo.command");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->command(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ExecuteInfo)
}

::google::protobuf::uint8* ExecuteInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ExecuteInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string target = 1;
  if (this->target().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->target().data(), static_cast<int>(this->target().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.ExecuteInfo.target");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->target(), target);
  }

  // string command = 2;
  if (this->command().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->command().data(), static_cast<int>(this->command().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.ExecuteInfo.command");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->command(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ExecuteInfo)
  return target;
}

size_t ExecuteInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ExecuteInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string target = 1;
  if (this->target().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->target());
  }

  // string command = 2;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->command());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ExecuteInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ExecuteInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const ExecuteInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ExecuteInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ExecuteInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ExecuteInfo)
    MergeFrom(*source);
  }
}

void ExecuteInfo::MergeFrom(const ExecuteInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ExecuteInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.target().size() > 0) {

    target_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.target_);
  }
  if (from.command().size() > 0) {

    command_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.command_);
  }
}

void ExecuteInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ExecuteInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExecuteInfo::CopyFrom(const ExecuteInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ExecuteInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExecuteInfo::IsInitialized() const {
  return true;
}

void ExecuteInfo::Swap(ExecuteInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ExecuteInfo::InternalSwap(ExecuteInfo* other) {
  using std::swap;
  target_.Swap(&other->target_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  command_.Swap(&other->command_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ExecuteInfo::GetMetadata() const {
  protobuf_info_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_info_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PackageInfo_Metadata::InitAsDefaultInstance() {
  ::proto::_PackageInfo_Metadata_default_instance_._instance.get_mutable()->repository_ = const_cast< ::proto::RepositoryInfo*>(
      ::proto::RepositoryInfo::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PackageInfo_Metadata::kPackageNameFieldNumber;
const int PackageInfo_Metadata::kPackageVersionFieldNumber;
const int PackageInfo_Metadata::kEmailFieldNumber;
const int PackageInfo_Metadata::kHomepageFieldNumber;
const int PackageInfo_Metadata::kLicenseFieldNumber;
const int PackageInfo_Metadata::kRepositoryFieldNumber;
const int PackageInfo_Metadata::kExecJobsFieldNumber;
const int PackageInfo_Metadata::kAuthorsFieldNumber;
const int PackageInfo_Metadata::kContributorsFieldNumber;
const int PackageInfo_Metadata::kMaintainersFieldNumber;
const int PackageInfo_Metadata::kReleasesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PackageInfo_Metadata::PackageInfo_Metadata()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_info_2eproto::scc_info_PackageInfo_Metadata.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PackageInfo.Metadata)
}
PackageInfo_Metadata::PackageInfo_Metadata(const PackageInfo_Metadata& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      exec_jobs_(from.exec_jobs_),
      authors_(from.authors_),
      contributors_(from.contributors_),
      maintainers_(from.maintainers_),
      releases_(from.releases_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  package_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.package_name().size() > 0) {
    package_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.package_name_);
  }
  package_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.package_version().size() > 0) {
    package_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.package_version_);
  }
  email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.email().size() > 0) {
    email_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.email_);
  }
  homepage_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.homepage().size() > 0) {
    homepage_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.homepage_);
  }
  license_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.license().size() > 0) {
    license_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.license_);
  }
  if (from.has_repository()) {
    repository_ = new ::proto::RepositoryInfo(*from.repository_);
  } else {
    repository_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:proto.PackageInfo.Metadata)
}

void PackageInfo_Metadata::SharedCtor() {
  package_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  package_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  homepage_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  license_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  repository_ = NULL;
}

PackageInfo_Metadata::~PackageInfo_Metadata() {
  // @@protoc_insertion_point(destructor:proto.PackageInfo.Metadata)
  SharedDtor();
}

void PackageInfo_Metadata::SharedDtor() {
  package_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  package_version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  email_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  homepage_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  license_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete repository_;
}

void PackageInfo_Metadata::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PackageInfo_Metadata::descriptor() {
  ::protobuf_info_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_info_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PackageInfo_Metadata& PackageInfo_Metadata::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_info_2eproto::scc_info_PackageInfo_Metadata.base);
  return *internal_default_instance();
}


void PackageInfo_Metadata::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PackageInfo.Metadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  exec_jobs_.Clear();
  authors_.Clear();
  contributors_.Clear();
  maintainers_.Clear();
  releases_.Clear();
  package_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  package_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  email_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  homepage_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  license_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && repository_ != NULL) {
    delete repository_;
  }
  repository_ = NULL;
  _internal_metadata_.Clear();
}

bool PackageInfo_Metadata::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PackageInfo.Metadata)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string package_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_package_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->package_name().data(), static_cast<int>(this->package_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.PackageInfo.Metadata.package_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string package_version = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_package_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->package_version().data(), static_cast<int>(this->package_version().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.PackageInfo.Metadata.package_version"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string email = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_email()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->email().data(), static_cast<int>(this->email().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.PackageInfo.Metadata.email"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string homepage = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_homepage()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->homepage().data(), static_cast<int>(this->homepage().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.PackageInfo.Metadata.homepage"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string license = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_license()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->license().data(), static_cast<int>(this->license().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.PackageInfo.Metadata.license"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.RepositoryInfo repository = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_repository()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.ExecuteInfo exec_jobs = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_exec_jobs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string authors = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_authors()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->authors(this->authors_size() - 1).data(),
            static_cast<int>(this->authors(this->authors_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.PackageInfo.Metadata.authors"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string contributors = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_contributors()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->contributors(this->contributors_size() - 1).data(),
            static_cast<int>(this->contributors(this->contributors_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.PackageInfo.Metadata.contributors"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string maintainers = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_maintainers()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->maintainers(this->maintainers_size() - 1).data(),
            static_cast<int>(this->maintainers(this->maintainers_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.PackageInfo.Metadata.maintainers"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.ReleaseInfo releases = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_releases()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PackageInfo.Metadata)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PackageInfo.Metadata)
  return false;
#undef DO_
}

void PackageInfo_Metadata::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PackageInfo.Metadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string package_name = 1;
  if (this->package_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->package_name().data(), static_cast<int>(this->package_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.PackageInfo.Metadata.package_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->package_name(), output);
  }

  // string package_version = 2;
  if (this->package_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->package_version().data(), static_cast<int>(this->package_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.PackageInfo.Metadata.package_version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->package_version(), output);
  }

  // string email = 3;
  if (this->email().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->email().data(), static_cast<int>(this->email().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.PackageInfo.Metadata.email");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->email(), output);
  }

  // string homepage = 4;
  if (this->homepage().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->homepage().data(), static_cast<int>(this->homepage().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.PackageInfo.Metadata.homepage");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->homepage(), output);
  }

  // string license = 5;
  if (this->license().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->license().data(), static_cast<int>(this->license().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.PackageInfo.Metadata.license");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->license(), output);
  }

  // .proto.RepositoryInfo repository = 6;
  if (this->has_repository()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_repository(), output);
  }

  // repeated .proto.ExecuteInfo exec_jobs = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->exec_jobs_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7,
      this->exec_jobs(static_cast<int>(i)),
      output);
  }

  // repeated string authors = 8;
  for (int i = 0, n = this->authors_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->authors(i).data(), static_cast<int>(this->authors(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.PackageInfo.Metadata.authors");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      8, this->authors(i), output);
  }

  // repeated string contributors = 9;
  for (int i = 0, n = this->contributors_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->contributors(i).data(), static_cast<int>(this->contributors(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.PackageInfo.Metadata.contributors");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      9, this->contributors(i), output);
  }

  // repeated string maintainers = 10;
  for (int i = 0, n = this->maintainers_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->maintainers(i).data(), static_cast<int>(this->maintainers(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.PackageInfo.Metadata.maintainers");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      10, this->maintainers(i), output);
  }

  // repeated .proto.ReleaseInfo releases = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->releases_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11,
      this->releases(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.PackageInfo.Metadata)
}

::google::protobuf::uint8* PackageInfo_Metadata::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.PackageInfo.Metadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string package_name = 1;
  if (this->package_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->package_name().data(), static_cast<int>(this->package_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.PackageInfo.Metadata.package_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->package_name(), target);
  }

  // string package_version = 2;
  if (this->package_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->package_version().data(), static_cast<int>(this->package_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.PackageInfo.Metadata.package_version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->package_version(), target);
  }

  // string email = 3;
  if (this->email().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->email().data(), static_cast<int>(this->email().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.PackageInfo.Metadata.email");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->email(), target);
  }

  // string homepage = 4;
  if (this->homepage().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->homepage().data(), static_cast<int>(this->homepage().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.PackageInfo.Metadata.homepage");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->homepage(), target);
  }

  // string license = 5;
  if (this->license().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->license().data(), static_cast<int>(this->license().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.PackageInfo.Metadata.license");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->license(), target);
  }

  // .proto.RepositoryInfo repository = 6;
  if (this->has_repository()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_repository(), deterministic, target);
  }

  // repeated .proto.ExecuteInfo exec_jobs = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->exec_jobs_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->exec_jobs(static_cast<int>(i)), deterministic, target);
  }

  // repeated string authors = 8;
  for (int i = 0, n = this->authors_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->authors(i).data(), static_cast<int>(this->authors(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.PackageInfo.Metadata.authors");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(8, this->authors(i), target);
  }

  // repeated string contributors = 9;
  for (int i = 0, n = this->contributors_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->contributors(i).data(), static_cast<int>(this->contributors(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.PackageInfo.Metadata.contributors");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(9, this->contributors(i), target);
  }

  // repeated string maintainers = 10;
  for (int i = 0, n = this->maintainers_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->maintainers(i).data(), static_cast<int>(this->maintainers(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.PackageInfo.Metadata.maintainers");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(10, this->maintainers(i), target);
  }

  // repeated .proto.ReleaseInfo releases = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->releases_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->releases(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.PackageInfo.Metadata)
  return target;
}

size_t PackageInfo_Metadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PackageInfo.Metadata)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.ExecuteInfo exec_jobs = 7;
  {
    unsigned int count = static_cast<unsigned int>(this->exec_jobs_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->exec_jobs(static_cast<int>(i)));
    }
  }

  // repeated string authors = 8;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->authors_size());
  for (int i = 0, n = this->authors_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->authors(i));
  }

  // repeated string contributors = 9;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->contributors_size());
  for (int i = 0, n = this->contributors_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->contributors(i));
  }

  // repeated string maintainers = 10;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->maintainers_size());
  for (int i = 0, n = this->maintainers_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->maintainers(i));
  }

  // repeated .proto.ReleaseInfo releases = 11;
  {
    unsigned int count = static_cast<unsigned int>(this->releases_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->releases(static_cast<int>(i)));
    }
  }

  // string package_name = 1;
  if (this->package_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->package_name());
  }

  // string package_version = 2;
  if (this->package_version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->package_version());
  }

  // string email = 3;
  if (this->email().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->email());
  }

  // string homepage = 4;
  if (this->homepage().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->homepage());
  }

  // string license = 5;
  if (this->license().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->license());
  }

  // .proto.RepositoryInfo repository = 6;
  if (this->has_repository()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *repository_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PackageInfo_Metadata::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.PackageInfo.Metadata)
  GOOGLE_DCHECK_NE(&from, this);
  const PackageInfo_Metadata* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PackageInfo_Metadata>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PackageInfo.Metadata)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PackageInfo.Metadata)
    MergeFrom(*source);
  }
}

void PackageInfo_Metadata::MergeFrom(const PackageInfo_Metadata& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.PackageInfo.Metadata)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  exec_jobs_.MergeFrom(from.exec_jobs_);
  authors_.MergeFrom(from.authors_);
  contributors_.MergeFrom(from.contributors_);
  maintainers_.MergeFrom(from.maintainers_);
  releases_.MergeFrom(from.releases_);
  if (from.package_name().size() > 0) {

    package_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.package_name_);
  }
  if (from.package_version().size() > 0) {

    package_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.package_version_);
  }
  if (from.email().size() > 0) {

    email_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.email_);
  }
  if (from.homepage().size() > 0) {

    homepage_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.homepage_);
  }
  if (from.license().size() > 0) {

    license_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.license_);
  }
  if (from.has_repository()) {
    mutable_repository()->::proto::RepositoryInfo::MergeFrom(from.repository());
  }
}

void PackageInfo_Metadata::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.PackageInfo.Metadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PackageInfo_Metadata::CopyFrom(const PackageInfo_Metadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PackageInfo.Metadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PackageInfo_Metadata::IsInitialized() const {
  return true;
}

void PackageInfo_Metadata::Swap(PackageInfo_Metadata* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PackageInfo_Metadata::InternalSwap(PackageInfo_Metadata* other) {
  using std::swap;
  CastToBase(&exec_jobs_)->InternalSwap(CastToBase(&other->exec_jobs_));
  authors_.InternalSwap(CastToBase(&other->authors_));
  contributors_.InternalSwap(CastToBase(&other->contributors_));
  maintainers_.InternalSwap(CastToBase(&other->maintainers_));
  CastToBase(&releases_)->InternalSwap(CastToBase(&other->releases_));
  package_name_.Swap(&other->package_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  package_version_.Swap(&other->package_version_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  email_.Swap(&other->email_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  homepage_.Swap(&other->homepage_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  license_.Swap(&other->license_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(repository_, other->repository_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PackageInfo_Metadata::GetMetadata() const {
  protobuf_info_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_info_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PackageInfo::InitAsDefaultInstance() {
  ::proto::_PackageInfo_default_instance_._instance.get_mutable()->info_ = const_cast< ::proto::PackageInfo_Metadata*>(
      ::proto::PackageInfo_Metadata::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PackageInfo::kInfoFieldNumber;
const int PackageInfo::kDependenciesFieldNumber;
const int PackageInfo::kDevDependenciesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PackageInfo::PackageInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_info_2eproto::scc_info_PackageInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PackageInfo)
}
PackageInfo::PackageInfo(const PackageInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      dependencies_(from.dependencies_),
      dev_dependencies_(from.dev_dependencies_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_info()) {
    info_ = new ::proto::PackageInfo_Metadata(*from.info_);
  } else {
    info_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:proto.PackageInfo)
}

void PackageInfo::SharedCtor() {
  info_ = NULL;
}

PackageInfo::~PackageInfo() {
  // @@protoc_insertion_point(destructor:proto.PackageInfo)
  SharedDtor();
}

void PackageInfo::SharedDtor() {
  if (this != internal_default_instance()) delete info_;
}

void PackageInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PackageInfo::descriptor() {
  ::protobuf_info_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_info_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PackageInfo& PackageInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_info_2eproto::scc_info_PackageInfo.base);
  return *internal_default_instance();
}


void PackageInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PackageInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  dependencies_.Clear();
  dev_dependencies_.Clear();
  if (GetArenaNoVirtual() == NULL && info_ != NULL) {
    delete info_;
  }
  info_ = NULL;
  _internal_metadata_.Clear();
}

bool PackageInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PackageInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.PackageInfo.Metadata info = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.PackageInfo.Metadata dependencies = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_dependencies()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.PackageInfo.Metadata dev_dependencies = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_dev_dependencies()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PackageInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PackageInfo)
  return false;
#undef DO_
}

void PackageInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PackageInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.PackageInfo.Metadata info = 1;
  if (this->has_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_info(), output);
  }

  // repeated .proto.PackageInfo.Metadata dependencies = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->dependencies_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->dependencies(static_cast<int>(i)),
      output);
  }

  // repeated .proto.PackageInfo.Metadata dev_dependencies = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->dev_dependencies_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->dev_dependencies(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.PackageInfo)
}

::google::protobuf::uint8* PackageInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.PackageInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.PackageInfo.Metadata info = 1;
  if (this->has_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_info(), deterministic, target);
  }

  // repeated .proto.PackageInfo.Metadata dependencies = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->dependencies_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->dependencies(static_cast<int>(i)), deterministic, target);
  }

  // repeated .proto.PackageInfo.Metadata dev_dependencies = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->dev_dependencies_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->dev_dependencies(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.PackageInfo)
  return target;
}

size_t PackageInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PackageInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.PackageInfo.Metadata dependencies = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->dependencies_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->dependencies(static_cast<int>(i)));
    }
  }

  // repeated .proto.PackageInfo.Metadata dev_dependencies = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->dev_dependencies_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->dev_dependencies(static_cast<int>(i)));
    }
  }

  // .proto.PackageInfo.Metadata info = 1;
  if (this->has_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *info_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PackageInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.PackageInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const PackageInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PackageInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PackageInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PackageInfo)
    MergeFrom(*source);
  }
}

void PackageInfo::MergeFrom(const PackageInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.PackageInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  dependencies_.MergeFrom(from.dependencies_);
  dev_dependencies_.MergeFrom(from.dev_dependencies_);
  if (from.has_info()) {
    mutable_info()->::proto::PackageInfo_Metadata::MergeFrom(from.info());
  }
}

void PackageInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.PackageInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PackageInfo::CopyFrom(const PackageInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PackageInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PackageInfo::IsInitialized() const {
  return true;
}

void PackageInfo::Swap(PackageInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PackageInfo::InternalSwap(PackageInfo* other) {
  using std::swap;
  CastToBase(&dependencies_)->InternalSwap(CastToBase(&other->dependencies_));
  CastToBase(&dev_dependencies_)->InternalSwap(CastToBase(&other->dev_dependencies_));
  swap(info_, other->info_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PackageInfo::GetMetadata() const {
  protobuf_info_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_info_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace proto
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::proto::ReleaseInfo* Arena::CreateMaybeMessage< ::proto::ReleaseInfo >(Arena* arena) {
  return Arena::CreateInternal< ::proto::ReleaseInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::proto::RepositoryInfo* Arena::CreateMaybeMessage< ::proto::RepositoryInfo >(Arena* arena) {
  return Arena::CreateInternal< ::proto::RepositoryInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::proto::ExecuteInfo* Arena::CreateMaybeMessage< ::proto::ExecuteInfo >(Arena* arena) {
  return Arena::CreateInternal< ::proto::ExecuteInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::proto::PackageInfo_Metadata* Arena::CreateMaybeMessage< ::proto::PackageInfo_Metadata >(Arena* arena) {
  return Arena::CreateInternal< ::proto::PackageInfo_Metadata >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::proto::PackageInfo* Arena::CreateMaybeMessage< ::proto::PackageInfo >(Arena* arena) {
  return Arena::CreateInternal< ::proto::PackageInfo >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
